<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.common.evalPersonage">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: BSC_ECM_PERSONAGE
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 사외인사 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_ECM_PERSONAGE
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT PERSONAGE_ID, PASSWD, NAME, ORGAN, POS
		     , MOBILE_NO, OFFICE_TEL_NO, HOME_TEL_NO, E_MAIL, ADDRESS
		     , BIRTH_YMD, SCHOOL
		     , USER_HISTORY, CONTENT
		  FROM BSC_ECM_PERSONAGE
		 WHERE 1=1
		 <dynamic prepend="AND">
            <isNotEmpty property="findName">
		   	NAME LIKE '%'|| #findName# ||'%'
		 	</isNotEmpty>
		 </dynamic>
  
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 사외인사 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_ECM_PERSONAGE
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT PERSONAGE_ID          
			 , PASSWD                
			 , NAME                  
			 , ORGAN                 
			 , POS                   
			 , MOBILE_NO             
			 , OFFICE_TEL_NO         
			 , HOME_TEL_NO           
			 , E_MAIL                
			 , ADDRESS               
			 , BIRTH_YMD             
			 , SCHOOL                
			 , USER_HISTORY          
			 , CONTENT               
		  FROM BSC_ECM_PERSONAGE 
		 WHERE 1 = 1 
		   AND PERSONAGE_ID = #personageId#	      
	</select>
	
	
	
	<!--
	==================================================================   
	  # 설명	: 사외인사 등록 가능여부 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_ECM_PERSONAGE
	==================================================================
	-->
	<select id="getExistUserYn" parameterClass="hashMap" resultClass="java.lang.String">
	SELECT COUNT(1) AS CNT
	  FROM BSC_ECM_PERSONAGE
	 WHERE 1=1
	   AND PERSONAGE_ID = #personageId#	
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 사외인사 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_ECM_PERSONAGE
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		
		INSERT INTO BSC_ECM_PERSONAGE ( 
			   PERSONAGE_ID
			 , PASSWD
			 , NAME
			 , ORGAN
			 , POS
			 , MOBILE_NO
			 , OFFICE_TEL_NO
			 , HOME_TEL_NO
			 , E_MAIL
			 , ADDRESS
			 , BIRTH_YMD
			 , SCHOOL
			 , USER_HISTORY
			 , CONTENT
			 , CREATE_DT
			 ) VALUES ( 
			   #personageId#
			 , #passwd#
			 , #name#
			 , #organ#
			 , #pos#
			 , #mobileNo#
			 , #officeTelNo#
			 , #homeTelNo#
			 , #eMail#
			 , #address#
			 , #birthYmd#
			 , #school#
			 , #userHistory#
			 , #content#
			 , SYSDATE
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 사외인사 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_ECM_PERSONAGE
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE BSC_ECM_PERSONAGE 
		   SET PASSWD                 = #passwd# 
			 , NAME                   = #name# 
			 , ORGAN                  = #organ# 
			 , POS                    = #pos# 
			 , MOBILE_NO              = #mobileNo# 
			 , OFFICE_TEL_NO          = #officeTelNo# 
			 , HOME_TEL_NO            = #homeTelNo# 
			 , E_MAIL                 = #eMail# 
			 , ADDRESS                = #address# 
			 , BIRTH_YMD              = #birthYmd# 
			 , SCHOOL                 = #school# 
			 , USER_HISTORY           = #userHistory# 
			 , CONTENT                = #content# 
			 , MODIFY_DT              = SYSDATE 
		 WHERE 1 = 1 
		   AND PERSONAGE_ID = #personageId#		
	</update>	
	

	<!--
	==================================================================   
	  # 설명	: 사외인사 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_ECM_PERSONAGE
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM BSC_ECM_PERSONAGE 
		 WHERE 1 = 1 
		   AND PERSONAGE_ID = #personageId#
	</update>
	
	
</sqlMap>


