<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.mon.metricRank">

	<!--
	==================================================================
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	:
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />

	<!--
	==================================================================
	  # 설명	: 현재 월 가져오기
	  #	기능	: SELECT
	  #	TABLE	: DUAL
	==================================================================
	-->
	<select id="getMon" parameterClass="hashMap" resultClass="java.lang.String">
		SELECT TO_CHAR(SYSDATE, 'MM') AS MON FROM DUAL
	</select>


	<!--
	==================================================================
	  # 설명	: KPI순위 목록 보기
	  #	기능	: SELECT
	  #	TABLE	:
	==================================================================
	-->
	<select id="getList" remapResults="true" parameterClass="hashMap" resultClass="hashMap">
			 SELECT Y.SC_DEPT_ID, Y.SC_DEPT_NM,
		            RANK() OVER(PARTITION BY NULL ORDER BY X.SCORE_$findMon$ DESC NULLS LAST) AS RANK,
		            ROUND(SCORE_01, 2) AS SCORE01, ROUND(SCORE_02, 2) AS SCORE02, ROUND(SCORE_03, 2) AS SCORE03, ROUND(SCORE_04, 2) AS SCORE04, ROUND(SCORE_05, 2) AS SCORE05, ROUND(SCORE_06, 2) AS SCORE06,
		            ROUND(SCORE_07, 2) AS SCORE07, ROUND(SCORE_08, 2) AS SCORE08, ROUND(SCORE_09, 2) AS SCORE09, ROUND(SCORE_10, 2) AS SCORE10, ROUND(SCORE_11, 2) AS SCORE11, ROUND(SCORE_12, 2) AS SCORE12,
		            STATUS_01, STATUS_02, STATUS_03, STATUS_04, STATUS_05, STATUS_06, STATUS_07, STATUS_08, STATUS_09, STATUS_10, STATUS_11, STATUS_12,
		            F_CODE_NM('021', STATUS_01 , #findYear#) AS STATUS_01_NM,
		            F_CODE_NM('021', STATUS_02 , #findYear#) AS STATUS_02_NM,
		            F_CODE_NM('021', STATUS_03 , #findYear#) AS STATUS_03_NM,
		            F_CODE_NM('021', STATUS_04 , #findYear#) AS STATUS_04_NM,
		            F_CODE_NM('021', STATUS_05 , #findYear#) AS STATUS_05_NM,
		            F_CODE_NM('021', STATUS_06 , #findYear#) AS STATUS_06_NM,
		            F_CODE_NM('021', STATUS_07 , #findYear#) AS STATUS_07_NM,
		            F_CODE_NM('021', STATUS_08 , #findYear#) AS STATUS_08_NM,
		            F_CODE_NM('021', STATUS_09 , #findYear#) AS STATUS_09_NM,
		            F_CODE_NM('021', STATUS_10 , #findYear#) AS STATUS_10_NM,
		            F_CODE_NM('021', STATUS_11 , #findYear#) AS STATUS_11_NM,
		            F_CODE_NM('021', STATUS_12 , #findYear#) AS STATUS_12_NM
               FROM (SELECT A.YEAR, A.SC_DEPT_ID, A.SC_DEPT_NM, A.SORT_ORDER,
		                    MAX(CASE WHEN MON='01' THEN SCORE END) AS SCORE_01, MAX(CASE WHEN MON='02' THEN SCORE END) AS SCORE_02,
		                    MAX(CASE WHEN MON='03' THEN SCORE END) AS SCORE_03, MAX(CASE WHEN MON='04' THEN SCORE END) AS SCORE_04,
		                    MAX(CASE WHEN MON='05' THEN SCORE END) AS SCORE_05, MAX(CASE WHEN MON='06' THEN SCORE END) AS SCORE_06,
		                    MAX(CASE WHEN MON='07' THEN SCORE END) AS SCORE_07, MAX(CASE WHEN MON='08' THEN SCORE END) AS SCORE_08,
		                    MAX(CASE WHEN MON='09' THEN SCORE END) AS SCORE_09, MAX(CASE WHEN MON='10' THEN SCORE END) AS SCORE_10,
		                    MAX(CASE WHEN MON='11' THEN SCORE END) AS SCORE_11, MAX(CASE WHEN MON='12' THEN SCORE END) AS SCORE_12,
		                    MAX(CASE WHEN MON='01' THEN STATUS END) AS STATUS_01, MAX(CASE WHEN MON='02' THEN STATUS END) AS STATUS_02,
		                    MAX(CASE WHEN MON='03' THEN STATUS END) AS STATUS_03, MAX(CASE WHEN MON='04' THEN STATUS END) AS STATUS_04,
		                    MAX(CASE WHEN MON='05' THEN STATUS END) AS STATUS_05, MAX(CASE WHEN MON='06' THEN STATUS END) AS STATUS_06,
		                    MAX(CASE WHEN MON='07' THEN STATUS END) AS STATUS_07, MAX(CASE WHEN MON='08' THEN STATUS END) AS STATUS_08,
		                    MAX(CASE WHEN MON='09' THEN STATUS END) AS STATUS_09, MAX(CASE WHEN MON='10' THEN STATUS END) AS STATUS_10,
		                    MAX(CASE WHEN MON='11' THEN STATUS END) AS STATUS_11, MAX(CASE WHEN MON='12' THEN STATUS END) AS STATUS_12
                      FROM(  SELECT A.YEAR,
                      				A.MON,
                      				A.SC_DEPT_ID,
	                                A.SC_DEPT_NM,
	                                A.METRIC_ID,
	                                A.METRIC_NM,
	                                A.SCORE,
	                                A.STATUS,
	                                A.SORT_ORDER
                               FROM BSC_METRICSCORE A
		                      WHERE A.YEAR = #findYear#
		                        AND A.ANAL_CYCLE = #findAnalCycle#
		                        AND A.METRIC_GRP_ID = #findMetricGrpId#
		                        AND (YEAR || MON) <![CDATA[<=]]> TO_CHAR (SYSDATE, 'YYYYMM')
                           )A
                      GROUP BY A.YEAR, A.SC_DEPT_ID, A.SC_DEPT_NM, A.SORT_ORDER
                      ) X
                      INNER JOIN BSC_SC_DEPT Y
                      ON X.YEAR = Y.YEAR
			          AND X.SC_DEPT_ID = Y.SC_DEPT_ID

			          <isNotEmpty prepend="AND" property="findScDeptGrpId">
			          	Y.SC_DEPT_GRP_ID = #findScDeptGrpId#
			          </isNotEmpty>

			          <isNotEmpty prepend="AND" property="findLevelId">
						Y.LEVEL_ID = #findLevelId#
					  </isNotEmpty>

			          AND Y.DELETE_DT IS NULL
			    ORDER BY X.SCORE_$findMon$ DESC NULLS LAST, X.SORT_ORDER, Y.SORT_ORDER, Y.SC_DEPT_ID

	</select>

	<!--
	==================================================================
	  # 설명	: KPI순위 목록 보기
	  #	기능	: SELECT
	  #	TABLE	:
	==================================================================
	-->
	<select id="getList_BACK" remapResults="true" parameterClass="hashMap" resultClass="hashMap">
		SELECT     Y.SC_DEPT_ID, Y.SC_DEPT_NM,
            RANK() OVER(PARTITION BY NULL ORDER BY X.SCORE_$findMon$ DESC) AS RANK,
            ROUND(SCORE_01, 2) AS SCORE01, ROUND(SCORE_02, 2) AS SCORE02, ROUND(SCORE_03, 2) AS SCORE03, ROUND(SCORE_04, 2) AS SCORE04, ROUND(SCORE_05, 2) AS SCORE05, ROUND(SCORE_06, 2) AS SCORE06,
            ROUND(SCORE_07, 2) AS SCORE07, ROUND(SCORE_08, 2) AS SCORE08, ROUND(SCORE_09, 2) AS SCORE09, ROUND(SCORE_10, 2) AS SCORE10, ROUND(SCORE_11, 2) AS SCORE11, ROUND(SCORE_12, 2) AS SCORE12,
            STATUS_01, STATUS_02, STATUS_03, STATUS_04, STATUS_05, STATUS_06, STATUS_07, STATUS_08, STATUS_09, STATUS_10, STATUS_11, STATUS_12,
            F_CODE_NM('021', STATUS_01 , #findYear#) AS STATUS_01_NM,
	        F_CODE_NM('021', STATUS_02 , #findYear#) AS STATUS_02_NM,
	        F_CODE_NM('021', STATUS_03 , #findYear#) AS STATUS_03_NM,
	        F_CODE_NM('021', STATUS_04 , #findYear#) AS STATUS_04_NM,
	        F_CODE_NM('021', STATUS_05 , #findYear#) AS STATUS_05_NM,
	        F_CODE_NM('021', STATUS_06 , #findYear#) AS STATUS_06_NM,
	        F_CODE_NM('021', STATUS_07 , #findYear#) AS STATUS_07_NM,
	        F_CODE_NM('021', STATUS_08 , #findYear#) AS STATUS_08_NM,
	        F_CODE_NM('021', STATUS_09 , #findYear#) AS STATUS_09_NM,
	        F_CODE_NM('021', STATUS_10 , #findYear#) AS STATUS_10_NM,
	        F_CODE_NM('021', STATUS_11 , #findYear#) AS STATUS_11_NM,
	        F_CODE_NM('021', STATUS_12 , #findYear#) AS STATUS_12_NM
    FROM (
            SELECT     A.SC_DEPT_ID, A.SC_DEPT_NM,
                    MAX(CASE WHEN MON='01' THEN SCORE END) AS SCORE_01, MAX(CASE WHEN MON='02' THEN SCORE END) AS SCORE_02,
                    MAX(CASE WHEN MON='03' THEN SCORE END) AS SCORE_03, MAX(CASE WHEN MON='04' THEN SCORE END) AS SCORE_04,
                    MAX(CASE WHEN MON='05' THEN SCORE END) AS SCORE_05, MAX(CASE WHEN MON='06' THEN SCORE END) AS SCORE_06,
                    MAX(CASE WHEN MON='07' THEN SCORE END) AS SCORE_07, MAX(CASE WHEN MON='08' THEN SCORE END) AS SCORE_08,
                    MAX(CASE WHEN MON='09' THEN SCORE END) AS SCORE_09, MAX(CASE WHEN MON='10' THEN SCORE END) AS SCORE_10,
                    MAX(CASE WHEN MON='11' THEN SCORE END) AS SCORE_11, MAX(CASE WHEN MON='12' THEN SCORE END) AS SCORE_12,
                    MAX(CASE WHEN MON='01' THEN STATUS END) AS STATUS_01, MAX(CASE WHEN MON='02' THEN STATUS END) AS STATUS_02,
                    MAX(CASE WHEN MON='03' THEN STATUS END) AS STATUS_03, MAX(CASE WHEN MON='04' THEN STATUS END) AS STATUS_04,
                    MAX(CASE WHEN MON='05' THEN STATUS END) AS STATUS_05, MAX(CASE WHEN MON='06' THEN STATUS END) AS STATUS_06,
                    MAX(CASE WHEN MON='07' THEN STATUS END) AS STATUS_07, MAX(CASE WHEN MON='08' THEN STATUS END) AS STATUS_08,
                    MAX(CASE WHEN MON='09' THEN STATUS END) AS STATUS_09, MAX(CASE WHEN MON='10' THEN STATUS END) AS STATUS_10,
                    MAX(CASE WHEN MON='11' THEN STATUS END) AS STATUS_11, MAX(CASE WHEN MON='12' THEN STATUS END) AS STATUS_12
 FROM(SELECT T1.SC_DEPT_ID,
             T2.SC_DEPT_NM,
             T1.YEAR,
             T2.SC_DEPT_GRP_ID
       FROM (SELECT *
              FROM BSC_METRIC
             WHERE YEAR = #findYear#
               AND DELETE_DT IS NULL) T1,
            (SELECT YEAR,
                    SC_DEPT_ID,
                    SC_DEPT_NM,
                    SC_DEPT_GRP_ID
              FROM BSC_SC_DEPT
             WHERE YEAR = #findYear#
               AND DELETE_DT IS NULL
             START WITH UP_SC_DEPT_ID IS NULL
             CONNECT BY PRIOR YEAR = YEAR
               AND PRIOR SC_DEPT_ID = UP_SC_DEPT_ID
             ORDER SIBLINGS BY SORT_ORDER) T2
      WHERE T1.YEAR = #findYear#
        AND T1.YEAR = T2.YEAR
        AND T1.SC_DEPT_ID = T2.SC_DEPT_ID
        AND T1.DELETE_DT IS NULL
      START WITH T1.METRIC_ID = #findMetricId#
      CONNECT BY PRIOR T1.METRIC_ID = T1.UP_METRIC_ID) A,
          BSC_METRICSCORE B
               WHERE A.SC_DEPT_ID    = B.SC_DEPT_ID
                 AND A.YEAR            = B.YEAR
                AND B.YEAR            = #findYear#
                AND B.ANAL_CYCLE    = #findAnalCycle#
                <isNotEmpty prepend="AND" property="findScDeptGrpId">
				 B.SC_DEPT_GRP_ID	= #findScDeptGrpId#
			    </isNotEmpty>
              GROUP BY A.SC_DEPT_ID, A.SC_DEPT_NM
            ) X , BSC_SC_DEPT Y
     WHERE Y.SC_DEPT_ID    = X.SC_DEPT_ID
        AND Y.YEAR        = #findYear#
        <isNotEmpty prepend="AND" property="findScDeptGrpId">
		 Y.SC_DEPT_GRP_ID	= #findScDeptGrpId#
	    </isNotEmpty>
 ORDER BY X.SCORE_$findMon$ DESC NULLS LAST, Y.SORT_ORDER, Y.SC_DEPT_ID

	</select>

	<!--
	==================================================================
	  # 설명	: KPI순위 상세 보기
	  #	기능	: SELECT
	  #	TABLE	:
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">

	</select>

	<!--
	==================================================================
	  # 설명	: 평가그룹 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_CODE
	==================================================================
	-->
	<select id="getScDeptGrp" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.CODE_ID
			 , A.CODE_NM
		 FROM BSC_CODE A
		WHERE A.CODE_GRP_ID  = '003'
		  AND A.YEAR = #findYear#
		  AND A.DELETE_DT IS NULL
		ORDER BY A.SORT_ORDER
	</select>

	<!--
	==================================================================
	  # 설명	: 지표풀명 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC_GRP
	==================================================================
	-->
	<select id="getMetricGrpNm" parameterClass="hashMap" resultClass="java.lang.String">
		SELECT A.METRIC_GRP_NM
		 FROM BSC_METRIC_GRP A
		WHERE A.YEAR = #findYear#
		  AND A.METRIC_GRP_ID = #findMetricGrpId#
		  AND A.DELETE_DT IS NULL
	</select>




</sqlMap>


