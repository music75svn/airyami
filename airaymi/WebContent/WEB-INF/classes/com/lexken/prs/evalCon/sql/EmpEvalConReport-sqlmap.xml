<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.evalCon.empEvalConReport">

    <!--
    ==================================================================   
      # 설명    : typeAlias 선언
      #    기능    : SETTING
      #    TABLE    : 
    ==================================================================
    -->
    <typeAlias alias="hashMap"             type="java.util.HashMap" />
     

    <!--
    ==================================================================   
      # 설명    : 업무성과기술서 목록 보기
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getList" parameterClass="hashMap" resultClass="hashMap">
        SELECT
		      A.YEAR     
		    , A.EMPN     
		    , A.KOR_NM     
		    , A.DEPT_CD     
		    , D.DEPT_KOR_NM              
		    , F_DEPT_FULL_NM(A.YEAR, A.DEPT_CD, 'BSC_INSA_DEPT') DEPT_FULL_NM     
		    , A.CAST_TC     
		    , B.CODE_NM AS CAST_TC_NM     
		    , A.POS_TC     
		    , C.CODE_NM AS POS_TC_NM     
		    , A.EVAL_YN     
		    , B1.START_PCMT_DATE              
		    , B1.END_PCMT_DATE               
		    , V.ASSESSOR_EMPN AS MANAGER_USER_ID     
		    , I.KOR_NM AS  MANAGER_USER_NM  
		    , E.CODE_NM AS MANAGER_POS_TC_NM  
		    , (SELECT COUNT(1) FROM PRS_EMP_RPT ZZ WHERE ZZ.YEAR = A.YEAR AND A.EMPN = ZZ.EVAL_MEMB_EMPN AND A.DEPT_CD = ZZ.DEPT_CD) AS INPUT_CNT          
		FROM CON_EMP_MEMBER A           
		    LEFT OUTER JOIN BSC_CODE B                        
		        ON A.YEAR = B.YEAR                       
		        AND B.CODE_GRP_ID = '170'                       
		        AND B.CODE_ID = A.CAST_TC           
		    LEFT OUTER JOIN BSC_CODE C                        
		        ON A.YEAR = C.YEAR                       
		        AND C.CODE_GRP_ID = '171'                       
		        AND C.CODE_ID = A.POS_TC     
		    LEFT OUTER JOIN BSC_INSA_DEPT D                  
		        ON A.YEAR = D.YEAR            
		        AND A.DEPT_CD = D.DEPT_CD     
		    LEFT OUTER JOIN CON_EMP_EVAL_ASSESSOR V 
		        ON A.YEAR = V.YEAR 
		        AND A.DEPT_CD = V.DEPT_CD     
		    LEFT OUTER JOIN BSC_INSA I 
		        ON V.YEAR = I.YEAR                         
		        AND V.ASSESSOR_EMPN = I.EMPN 
		    LEFT OUTER JOIN BSC_CODE E                                   
	            ON I.YEAR = E.YEAR                                  
	            AND E.CODE_GRP_ID = '171'                                  
	            AND E.CODE_ID = I.POS_TC          
		    LEFT OUTER JOIN (SELECT 
		                          YEAR
		                        , EMPN
		                        , DEPT_CD
		                        , MIN(START_PCMT_DATE) AS START_PCMT_DATE
		                        , MAX(END_PCMT_DATE) AS END_PCMT_DATE                
		                     FROM BSC_INSA_PCMT 
		                     GROUP BY YEAR, EMPN, DEPT_CD              
		                    ) B1 
		        ON A.YEAR = B1.YEAR 
		        AND A.EMPN = B1.EMPN  
		        AND A.DEPT_CD = B1.DEPT_CD           
		WHERE A.YEAR= #findYear#    
		  AND A.DEPT_CD IN (SELECT DEPT_CD 
		                      FROM BSC_INSA_DEPT
		                     WHERE YEAR = #findYear#
		                     START WITH DEPT_CD =  #findDeptCd#    
		                   CONNECT BY PRIOR YEAR = YEAR         
		                       AND PRIOR DEPT_CD = UP_DEPT_CD
		                    )
		<isEqual property="adminGubun" compareValue="false">                          
		  AND A.EMPN = #loginUserId#
		</isEqual>  
		<isNotEmpty property="findEmpnNameText">
			<isEqual prepend="AND" property="findNameEmpn" compareValue="findName">
				( A.KOR_NM LIKE '%'|| TRIM(#findEmpnNameText#) ||'%' )
			</isEqual>
			<isEqual prepend="AND" property="findNameEmpn" compareValue="findEmpn">
				( A.EMPN LIKE '%' || TRIM(#findEmpnNameText#) || '%' )
			</isEqual>
		</isNotEmpty> 
		ORDER BY A.DEPT_CD, A.EMPN   
    </select>
    
    <!--
    ==================================================================   
      # 설명    : 업무성과기술서 지표, 목표 등록(엑셀업로드)
      #    기능    : INSERT
      #    TABLE    : 
    ==================================================================
    -->    
    <insert id="insertEmpEvalConReportTarget" parameterClass="hashMap">
        INSERT INTO PRS_EMP_TARGET(
		      YEAR
		    , EVAL_MEMB_EMPN
		    , DEPT_CD
		    , METRIC_ID
		    , METRIC_NM
		    , METRIC_GUBUN
		    , DIRECTION_CD
		    , UNIT
		    , SORT_ORDER
		    , TARGET_VALUE
		    , CREATE_ID
		    , CREATE_DT
		    )VALUES(
		      #findYear#
		    , #evalMembEmpn#
		    , #deptCd#
		    , #metricId#
		    , #metricNm#
		    , #metricGubun#
		    , #directionCd#
		    , #unit#
		    , #sortOrder#
		    , #targetValue#
		    , 'admin'
		    , SYSDATE
		    )
    </insert> 
    
    <!--
    ==================================================================   
      # 설명    : 업무성과기술서 실적 등록(엑셀업로드)
      #    기능    : INSERT
      #    TABLE    : 
    ==================================================================
    -->    
    <insert id="insertEmpEvalConReportActual" parameterClass="hashMap">
        INSERT INTO PRS_EMP_ACTUAL(
		      YEAR
		    , MON
		    , EVAL_MEMB_EMPN
		    , METRIC_ID
		    , VALUE
		    , SCORE
		    , CREATE_ID
		    , CREATE_DT
		    )VALUES(
		      #findYear#
		    , '12'
		    , #evalMembEmpn#
		    , #metricId#
		    , #value#
		    , #score#
		    , 'admin'
		    , SYSDATE
		    )
    </insert> 
    
    <!--
    ==================================================================   
      # 설명    : 업무성과기술서 비계량 등록(엑셀업로드)
      #    기능    : INSERT
      #    TABLE    : 
    ==================================================================
    -->    
    <insert id="insertEmpEvalConReportUngauged" parameterClass="hashMap">
        INSERT INTO PRS_EMP_RPT(
		      YEAR
		    , EVAL_MEMB_EMPN
		    , DEPT_CD
		    , DUTY_FROM_DT
		    , DUTY_END_DT
		    , CONTENT
		    , CONTENT2
		    , CONTENT3
		    , CREATE_DT
		    )VALUES(
		      #findYear#
		    , #evalMembEmpn#
		    , #deptCd#
		    , (SELECT MAX(START_PCMT_DATE) FROM BSC_INSA_PCMT WHERE YEAR = #findYear# AND DEPT_CD = #deptCd# AND EMPN = #evalMembEmpn# AND WORK_MON > 0)
		    , (SELECT MAX(END_PCMT_DATE) FROM BSC_INSA_PCMT WHERE YEAR = #findYear# AND DEPT_CD = #deptCd# AND EMPN = #evalMembEmpn# AND WORK_MON > 0)
		    , #content#
		    , #content2#
		    , #content3#
		    , SYSDATE
		    )
    </insert> 
    
    <!--
    ==================================================================   
      # 설명    : 지표ID생성
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getMetricId" parameterClass="hashMap" resultClass="java.lang.String">
        SELECT 
      		'PM'||LPAD(NVL(MAX(SUBSTR(METRIC_ID,3,5)),0)+1,5,'0') 
		FROM PRS_EMP_TARGET 
		WHERE YEAR=#findYear#  
    </select>
    
    <!--
    ==================================================================   
      # 설명    : 업무성과기술서 상세 보기
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
        SELECT           FROM  
        WHERE 1 = 1           
    </select>
    
    <!--
    ==================================================================   
      # 설명    : 업무성과기술서 등록
      #    기능    : INSERT
      #    TABLE    : 
    ==================================================================
    -->    
    <insert id="insertData" parameterClass="hashMap">
        MERGE INTO PRS_EMP_RPT A
		    USING (SELECT #year# AS YEAR, #evalMembEmpn# AS EVAL_MEMB_EMPN, #deptCd# AS DEPT_CD, REPLACE(#dutyFromDt#, '-') AS DUTY_FROM_DT, REPLACE(#dutyEndDt#, '-') AS DUTY_END_DT, #content# AS CONTENT, #content2# AS CONTENT2, #content3# AS CONTENT3 FROM DUAL) B
		        ON (A.YEAR = B.YEAR AND A.EVAL_MEMB_EMPN = B.EVAL_MEMB_EMPN AND A.DEPT_CD = B.DEPT_CD)
	        WHEN MATCHED THEN
	            UPDATE SET A.CONTENT = B.CONTENT, A.CONTENT2 = B.CONTENT2, A.CONTENT3 = B.CONTENT3
	        WHEN NOT MATCHED THEN
	            INSERT(A.YEAR, A.EVAL_MEMB_EMPN, A.DEPT_CD, A.DUTY_FROM_DT, A.DUTY_END_DT, A.CONTENT, A.CONTENT2, A.CONTENT3, CREATE_DT)
	            VALUES(B.YEAR, B.EVAL_MEMB_EMPN, B.DEPT_CD, B.DUTY_FROM_DT, B.DUTY_END_DT, B.CONTENT, B.CONTENT2, B.CONTENT3, SYSDATE) 
    </insert> 
    
    <!--
    ==================================================================   
      # 설명    : 계량성과지표 등록
      #    기능    : INSERT
      #    TABLE    : 
    ==================================================================
    -->    
    <insert id="insertMetricData" parameterClass="hashMap">
        INSERT INTO PRS_EMP_TARGET(
		      YEAR
		    , EVAL_MEMB_EMPN
		    , DEPT_CD
		    , METRIC_ID
		    , METRIC_NM
		    , METRIC_GUBUN
		    , DIRECTION_CD
		    , UNIT
		    , SORT_ORDER
		    , TARGET_VALUE
		    , CREATE_ID
		    , CREATE_DT
		    )VALUES(
		      #findYear#
		    , #evalMembEmpn#
		    , #deptCd#
		    , #metricId#
		    , #metricNm#
		    , #metricGubun#
		    , #directionCd#
		    , (SELECT CODE_NM FROM BSC_CODE WHERE CODE_GRP_ID = '013' AND CODE_ID = #unit#)
		    , #sortOrder#
		    , #targetValue#
		    , #loginUserId#
		    , SYSDATE
		    )
    </insert>    
    
    <!--
    ==================================================================   
      # 설명    : 계량성과지표 등록
      #    기능    : INSERT
      #    TABLE    : 
    ==================================================================
    -->    
    <insert id="insertScoreData" parameterClass="hashMap">
        INSERT INTO PRS_EMP_ACTUAL(
		      YEAR
		    , MON
		    , EVAL_MEMB_EMPN
		    , METRIC_ID
		    , VALUE
		    , SCORE
		    , CREATE_ID
		    , CREATE_DT
		    )VALUES(
		      #findYear#
		    , '12'
		    , #evalMembEmpn#  
		    , #metricId#
		    , #value#
		    , #score#
		    , #loginUserId#
		    , SYSDATE
		    )
    </insert>
    
    <!--
    ==================================================================   
      # 설명    : 업무성과기술서 수정
      #    기능    : UPDATE
      #    TABLE    : 
    ==================================================================
    -->    
    <update id="updateData" parameterClass="hashMap">
        UPDATE  
           SET          WHERE 1 = 1 
        
    </update>    
    

    <!--
    ==================================================================   
      # 설명    : 업무성과기술서 삭제
      #    기능    : UPDATE
      #    TABLE    : 
    ==================================================================
    -->    
    <update id="deleteData" parameterClass="hashMap">
        DELETE FROM  
         WHERE 1 = 1 

    </update>
    
    <!--
    ==================================================================   
      # 설명    : 업무성과기술서 엑셀다운로드
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getListExcel" parameterClass="hashMap" resultClass="hashMap">
        SELECT
		      A.YEAR     
		    , A.EMPN     
		    , A.KOR_NM     
		    , A.DEPT_CD     
		    , D.DEPT_KOR_NM              
		    , F_DEPT_FULL_NM(A.YEAR, A.DEPT_CD, 'BSC_INSA_DEPT') DEPT_FULL_NM     
		    , A.CAST_TC     
		    , B.CODE_NM AS CAST_TC_NM     
		    , A.POS_TC     
		    , C.CODE_NM AS POS_TC_NM     
		    , A.EVAL_YN     
		    , B1.START_PCMT_DATE              
		    , B1.END_PCMT_DATE               
		    , V.ASSESSOR_EMPN AS MANAGER_USER_ID     
		    , I.KOR_NM AS  MANAGER_USER_NM           
		FROM CON_EMP_MEMBER A           
		    LEFT OUTER JOIN BSC_CODE B                        
		        ON A.YEAR = B.YEAR                       
		        AND B.CODE_GRP_ID = '170'                       
		        AND B.CODE_ID = A.CAST_TC           
		    LEFT OUTER JOIN BSC_CODE C                        
		        ON A.YEAR = C.YEAR                       
		        AND C.CODE_GRP_ID = '171'                       
		        AND C.CODE_ID = A.POS_TC     
		    LEFT OUTER JOIN BSC_INSA_DEPT D                  
		        ON A.YEAR = D.YEAR            
		        AND A.DEPT_CD = D.DEPT_CD     
		    LEFT OUTER JOIN CON_EMP_EVAL_ASSESSOR V 
		        ON A.YEAR = V.YEAR 
		        AND A.DEPT_CD = V.DEPT_CD     
		    LEFT OUTER JOIN BSC_INSA I 
		        ON V.YEAR = I.YEAR                         
		        AND V.ASSESSOR_EMPN = I.EMPN           
		    LEFT OUTER JOIN (SELECT 
		                          YEAR
		                        , EMPN
		                        , DEPT_CD
		                        , MIN(START_PCMT_DATE) AS START_PCMT_DATE
		                        , MAX(END_PCMT_DATE) AS END_PCMT_DATE                
		                     FROM BSC_INSA_PCMT 
		                     GROUP BY YEAR, EMPN, DEPT_CD              
		                    ) B1 
		        ON A.YEAR = B1.YEAR 
		        AND A.EMPN = B1.EMPN  
		        AND A.DEPT_CD = B1.DEPT_CD           
		WHERE A.YEAR= #findYear#    
		  AND A.DEPT_CD IN (SELECT DEPT_CD 
		                    FROM BSC_INSA_DEPT
		                    WHERE YEAR = #findYear#
		                    START WITH DEPT_CD =  #findDeptCd#    
		                    CONNECT BY PRIOR YEAR = YEAR         
		                           AND PRIOR DEPT_CD = UP_DEPT_CD
		                    )                            
		ORDER BY A.DEPT_CD, A.EMPN   
    </select>
    
    <!--
    ==================================================================   
      # 설명    : 업무성과기술서 목표 엑셀업로드시 삭제
      #    기능    : UPDATE
      #    TABLE    : 
    ==================================================================
    -->    
    <update id="deleteReportTargetData" parameterClass="hashMap">
        DELETE FROM PRS_EMP_TARGET
		WHERE YEAR = #findYear#
		  AND EVAL_MEMB_EMPN = #strEvalMembEmpn#
    </update>
    
    <!--
    ==================================================================   
      # 설명    : 업무성과기술서 실적 엑셀업로드시 삭제
      #    기능    : UPDATE
      #    TABLE    : 
    ==================================================================
    -->    
    <update id="deleteReportActualData" parameterClass="hashMap">
        DELETE FROM PRS_EMP_ACTUAL
		WHERE YEAR = #findYear#
		  AND MON = '12'
		  AND EVAL_MEMB_EMPN = #strEvalMembEmpn#
    </update>
    
    <!--
    ==================================================================   
      # 설명    : 업무성과기술서 실적 엑셀업로드시 삭제
      #    기능    : UPDATE
      #    TABLE    : 
    ==================================================================
    -->    
    <update id="deleteReportRptData" parameterClass="hashMap">
        DELETE FROM PRS_EMP_RPT
		WHERE YEAR = #findYear#
		  AND EVAL_MEMB_EMPN = #strEvalMembEmpn1#
    </update>
    
    <!--
    ==================================================================   
      # 설명    : 목표갯수조회
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getTargetCount" parameterClass="hashMap" resultClass="java.lang.Integer">
        SELECT
        	  COUNT(1)
        FROM PRS_EMP_TARGET
		WHERE YEAR = #findYear#
		  AND EVAL_MEMB_EMPN = #strEvalMembEmpn#
    </select>
    
    <!--
    ==================================================================   
      # 설명    : 실적갯수조회
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getActualCount" parameterClass="hashMap" resultClass="java.lang.Integer">
        SELECT
        	  COUNT(1)
        FROM PRS_EMP_ACTUAL
		WHERE YEAR = #findYear#
		  AND MON = '12'
		  AND EVAL_MEMB_EMPN = #strEvalMembEmpn#
    </select>
    
    <!--
    ==================================================================   
      # 설명    : 실적갯수조회
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getReportRptCount" parameterClass="hashMap" resultClass="java.lang.Integer">
        SELECT 
        	  COUNT(1)
        FROM PRS_EMP_RPT
		WHERE YEAR = #findYear#
		  AND EVAL_MEMB_EMPN = #strEvalMembEmpn1#
    </select>
    
    <!--
    ==================================================================   
      # 설명    : 계량성과 지표 삭제
      #    기능    : UPDATE
      #    TABLE    : 
    ==================================================================
    -->    
    <delete id="deleteTargetData" parameterClass="hashMap">
        DELETE FROM PRS_EMP_TARGET
		WHERE YEAR = #findYear#
		  AND EVAL_MEMB_EMPN = #evalMembEmpn#
		  AND METRIC_ID = #metricId#
    </delete>   
    
    <!--
    ==================================================================   
      # 설명    : 계량성과 실적 삭제
      #    기능    : UPDATE
      #    TABLE    : 
    ==================================================================
    -->    
    <delete id="deleteActualData" parameterClass="hashMap">
        DELETE FROM PRS_EMP_ACTUAL
		WHERE YEAR = #findYear#
		  AND MON = '12'
		  AND EVAL_MEMB_EMPN = #evalMembEmpn#
		  AND METRIC_ID = #metricId#
    </delete>  
    
    
	<!--
	==================================================================
	  # 설명	: 목표 파일 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_TARGET_ATTACH
	==================================================================
	-->
	<select id="getFileList" parameterClass="hashMap" resultClass="hashMap">
 		SELECT A.YEAR
	         , A.EMPN
	         , A.SEQ
	         , A.ATTACH_FILE_NM
	         , A.ATTACH_FILE_FNM
	         , A.ATTACH_FILE_SUFFIX
	         , F_ENCRYPT(A.ATTACH_FILE_PATH, #encryptionCode#) ATTACH_FILE_PATH
         FROM PRS_EMP_ATTACH A
        WHERE A.YEAR = #findYear#
          AND A.EMPN = #evalMembEmpn#
        ORDER BY A.SEQ
	</select>
	
	<!--
	==================================================================
	  # 설명	: 목표 첨부파일 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_TARGET_ATTACH
	==================================================================
	-->
	<insert id="insertFileInfo" parameterClass="hashMap">
		<selectKey resultClass="java.lang.String" keyProperty="SEQ" >
			SELECT NVL(MAX(SEQ)+1,1) FROM PRS_EMP_ATTACH WHERE YEAR=#year# AND EMPN=#evalMembEmpn#
		</selectKey>
		INSERT INTO PRS_EMP_ATTACH (
               YEAR
             , EMPN
             , SEQ
             , ATTACH_FILE_NM
             , ATTACH_FILE_FNM
             , ATTACH_FILE_SUFFIX
             , ATTACH_FILE_PATH
             , CREATE_DT
           ) VALUES (
               #year#
             , #evalMembEmpn#
             , #SEQ#
             , #attachFileNm#
             , #attachFileFnm#
             , #attachFileSuffix#
             , #attachFilePath#
             , SYSDATE
    	   )
	</insert>

	<!--
	==================================================================
	  # 설명	: 목표 첨부파일 삭제
	  #	기능	: INSERT
	  #	TABLE	: BSC_TARGET_ATTACH
	==================================================================
	-->
	<delete id="deleteFileInfo" parameterClass="hashMap">
		DELETE FROM PRS_EMP_ATTACH
		 WHERE YEAR = #year#
		   AND EMPN = #evalMembEmpn#
		   AND SEQ = #seq#
	</delete>
	
</sqlMap>


