<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="gov.result.evalResultMng">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 경영평가결과입력 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT GR.YEAR
			 , GR.EVAL_CAT_GRP_ID
			 , GR.EVAL_CAT_GRP_NM
		     , GR.EVAL_CAT_ID
		     , GR.EVAL_CAT_NM
		     , GR.GOV_METRIC_ID
		     , GR.GOV_METRIC_NM
		     , GR.GM_GBN_ID
		     , GR.GM_GBN_NM
		     , GR.EVAL_METHOD_ID
		     , GR.EVAL_METHOD_NM
		     , GR.GM_WEIGHT
		     , GR.GM_GRADE
		     , TO_CHAR(GR.GM_SCORE, 99.999) GM_SCORE
		     , GR.ECG_CNT AS ECG_CNT
		     , GR.EC_CNT AS EC_CNT
		     , ROW_NUMBER() OVER(PARTITION BY EVAL_CAT_GRP_ID
		                             ORDER BY ECG_SORT_ORDER NULLS LAST, EVAL_CAT_GRP_ID
		                                    , EC_SORT_ORDER NULLS LAST, EVAL_CAT_ID
		                                    , GM_SORT_ORDER NULLS LAST, GOV_METRIC_ID ) AS ECG_ROWNUM
		     , ROW_NUMBER() OVER(PARTITION BY EVAL_CAT_GRP_ID, EVAL_CAT_ID
		                             ORDER BY ECG_SORT_ORDER NULLS LAST, EVAL_CAT_GRP_ID
		                                    , EC_SORT_ORDER NULLS LAST, EVAL_CAT_ID
		                                    , GM_SORT_ORDER NULLS LAST, GOV_METRIC_ID ) AS EC_ROWNUM
		  FROM 
		    (SELECT YEAR
		         , EVAL_CAT_GRP_ID
		         , EVAL_CAT_GRP_NM
		         , EVAL_CAT_ID
		         , EVAL_CAT_NM
		         , GOV_METRIC_ID
		         , GOV_METRIC_NM
		         , GM_GBN_ID
		         , GM_GBN_NM
		         , EVAL_METHOD_ID
		         , EVAL_METHOD_NM
		         , GM_WEIGHT
		         , GM_GRADE
		         , GM_SCORE
		         , COUNT(*) OVER( PARTITION BY EVAL_CAT_GRP_ID) AS ECG_CNT
		         , COUNT(*) OVER( PARTITION BY EVAL_CAT_GRP_ID, EVAL_CAT_ID) AS EC_CNT
		         , MAIN_METRIC_YN
		         , ECG_SORT_ORDER
		         , EC_SORT_ORDER
		         , GM_SORT_ORDER
		      FROM    
		        (SELECT ECG.YEAR
		        	 , ECG.EVAL_CAT_GRP_ID
		        	 , ECG.EVAL_CAT_GRP_NM
		             , EC.EVAL_CAT_ID
		             , EC.EVAL_CAT_NM
		             , GM.GOV_METRIC_ID
		             , GM.GOV_METRIC_NM
		             , GM.GBN_ID AS GM_GBN_ID
		             , F_CODE_NM('007', GM.GBN_ID, GM.YEAR) AS GM_GBN_NM
		             , GM.EVAL_METHOD_ID
		             , F_CODE_NM('146', GM.EVAL_METHOD_ID, GM.YEAR) AS EVAL_METHOD_NM
		             , GM.MAIN_METRIC_YN
		             , GM.WEIGHT AS GM_WEIGHT
		             , GMS.GOV_SCORE AS GM_SCORE
		             , GMS.GRADE AS GM_GRADE
		             , ECG.SORT_ORDER AS ECG_SORT_ORDER
		             , EC.SORT_ORDER AS EC_SORT_ORDER
		             , GM.SORT_ORDER AS GM_SORT_ORDER
		          FROM GOV_METRIC GM
		          	   INNER JOIN 
		          	   GOV_METRIC_GRP G
                       ON GM.YEAR = G.YEAR 
                      AND GM.GOV_METRIC_GRP_ID = G.GOV_METRIC_GRP_ID
		               LEFT OUTER JOIN 
		               GOV_EVAL_CAT_GRP ECG
		               ON GM.YEAR = ECG.YEAR
		              AND GM.EVAL_CAT_GRP_ID = ECG.EVAL_CAT_GRP_ID
		               LEFT OUTER JOIN 
		               GOV_EVAL_CAT EC
		               ON GM.YEAR = EC.YEAR
		              AND GM.EVAL_CAT_GRP_ID = EC.EVAL_CAT_GRP_ID
		              AND GM.EVAL_CAT_ID = EC.EVAL_CAT_ID
		               LEFT OUTER JOIN 
		               GOV_SCORE_YEAR GMS
		               ON GM.YEAR = GMS.YEAR                                                                                   
		              AND GM.GOV_METRIC_ID = GMS.GOV_METRIC_ID    
		         WHERE 1=1
		           AND GM.YEAR = #findYear#   
		           AND GM.DELETE_DT IS NULL
		           AND GM.MAIN_METRIC_YN = 'Y'
		        ) 
		    ) GR
		 ORDER BY ECG_SORT_ORDER NULLS LAST, EVAL_CAT_GRP_ID
		        , EC_SORT_ORDER NULLS LAST, EVAL_CAT_ID
		        , GM_SORT_ORDER NULLS LAST, GOV_METRIC_ID   

	</select>
	
	
	<!--
	==================================================================   
	  # 설명	: 경영평가결과입력 첨부파일 목록
	  #	기능	: SELECT
	  #	TABLE	: GOV_SCORE_YEAR_ATTACH
	==================================================================
	-->
	<select id="getAttachFileList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR, SEQ, ATTACH_FILE_NM
		     , ATTACH_FILE_FNM, ATTACH_FILE_SUFFIX
		     , F_ENCRYPT(ATTACH_FILE_PATH, #encryptionCode#) ATTACH_FILE_PATH
		  FROM GOV_SCORE_YEAR_ATTACH
		 WHERE 1=1
		   AND YEAR = #findYear#
		 ORDER BY SEQ
		  
	</select>	
	
	
	
	<!--
	==================================================================   
	  # 설명	: 경영평가결과입력 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT 		  FROM  
		 WHERE 1 = 1 	      
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 경영평가결과입력 등록
	  #	기능	: INSERT
	  #	TABLE	: 
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO GOV_SCORE_YEAR 
			 (YEAR, GOV_METRIC_ID, GOV_SCORE, GRADE, CREATE_ID, CREATE_DT) 
	  VALUES (#year#, #govMetricId#, #score#, #grade#, #creatUserId#, SYSDATE)
	</insert>	
	

	<!--
	==================================================================   
	  # 설명	: 경영평가결과입력 삭제
	  #	기능	: UPDATE
	  #	TABLE	: 
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM GOV_SCORE_YEAR 
		 WHERE 1 = 1
		   AND YEAR = #year#
	</update>
	
	
	
	<!--
	==================================================================   
	  # 설명	: 경영평가결과 첨부파일 등록
	  #	기능	: INSERT
	  #	TABLE	: GOV_OFFICE_REFERENCE_ATTACH
	==================================================================
	-->	
	<insert id="insertFileInfo" parameterClass="hashMap">
		<selectKey resultClass="java.lang.String" keyProperty="SEQ" >
			SELECT F_PGM_SERI('GOV_SCORE_YEAR_ATTACH', #year#, '','','','') SEQ FROM DUAL
		</selectKey> 
		INSERT INTO GOV_SCORE_YEAR_ATTACH (
               YEAR
             , SEQ
             , ATTACH_FILE_NM
             , ATTACH_FILE_FNM
             , ATTACH_FILE_SUFFIX
             , ATTACH_FILE_PATH
             , CREATE_DT
           ) VALUES (
               #year#
             , #SEQ#
             , #attachFileNm#
             , #attachFileFnm#
             , #attachFileSufix#
             , #attachFilePath#
             , SYSDATE
    	   )       
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 경영평가결과 첨부파일 삭제
	  #	기능	: UPDATE
	  #	TABLE	: GOV_SCORE_YEAR_ATTACH
	==================================================================
	-->
	<update id="deleteFileInfo" parameterClass="hashMap">
		DELETE FROM GOV_SCORE_YEAR_ATTACH
		 WHERE 1=1 
		   AND YEAR = #year#
		   AND SEQ = #seq#
	</update>	
	
	
</sqlMap>


