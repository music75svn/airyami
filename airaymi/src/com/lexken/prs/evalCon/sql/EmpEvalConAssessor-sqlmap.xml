<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.evalCon.empEvalConAssessor">

    <!--
    ==================================================================   
      # 설명    : typeAlias 선언
      #    기능    : SETTING
      #    TABLE    : 
    ==================================================================
    -->
    <typeAlias alias="hashMap"             type="java.util.HashMap" />
    
    <!--
	==================================================================   
	  # 설명	: 최상위 평가조직 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getTopDeptInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR
			 , DEPT_CD
			 , DEPT_KOR_NM
		  FROM ( SELECT YEAR, DEPT_CD, DEPT_KOR_NM FROM BSC_INSA_DEPT WHERE YEAR = #findYear# ORDER BY DISP_ORDER, DEPT_CD )
		 WHERE DEPT_CD = '0000'
	</select>
     
     <!--
	==================================================================   
	  # 설명	: 인사조직 왼쪽트리목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getDeptList" parameterClass="hashMap" resultClass="hashMap">
		<!-- 
		SELECT * FROM (  
			SELECT YEAR
		       , DEPT_CD
		       , DEPT_KOR_NM
		       , UP_DEPT_CD
		       , UP_USER_ID
		       , USE_YN
		       , DEPT_LEVL
		       , DISP_ORDER
		    FROM BSC_INSA_DEPT
		   WHERE YEAR = #findYear#
		     AND USE_YN = 'T'
		     AND DEPT_CD > '1090'
		     UNION ALL
		        SELECT YEAR
		       , DEPT_CD
		       , DEPT_KOR_NM
		       , UP_DEPT_CD
		       , UP_USER_ID
		       , USE_YN
		       , DEPT_LEVL
		       , DISP_ORDER
		    FROM BSC_INSA_DEPT
		   WHERE YEAR = #findYear#
		     AND DEPT_CD = '0000' )
		ORDER BY DISP_ORDER, DEPT_CD       
		 -->
		 
		 SELECT YEAR
			 , DEPT_CD
			 , DEPT_KOR_NM
			 , UP_DEPT_CD
			 , UP_USER_ID
			 , USE_YN
			 , DEPT_LEVL
			 , DISP_ORDER
		  FROM BSC_INSA_DEPT
		 WHERE YEAR = #findYear#
		   AND ( DEPT_CD > '1025'
		   		 OR DEPT_CD = '0000'
   		   		 OR DEPT_CD = '1000' )
<![CDATA[
   		   AND DEPT_CD <> '1090'
]]>	
		 ORDER BY DEPT_CD, DISP_ORDER        
		 
	</select>

    <!--
    ==================================================================   
      # 설명    : 직원기여도평가 평가자관리 목록 보기
      #    기능    : SELECT
      #    TABLE    : CON_EMP_EVAL_ASSESSOR
    ==================================================================
    -->
    <select id="getList" parameterClass="hashMap" resultClass="hashMap">
    SELECT A.YEAR
			 , A.DEPT_CD
             , F_DEPT_FULL_NM(#findYear#, A.DEPT_CD, 'BSC_INSA_DEPT') DEPT_KOR_NM
             , B.ASSESSOR_EMPN
             , C.KOR_NM
            FROM BSC_INSA_DEPT A
	LEFT OUTER JOIN CON_EMP_EVAL_ASSESSOR B
			ON A.YEAR = B.YEAR
		   AND A.DEPT_CD = B.DEPT_CD
	LEFT OUTER JOIN BSC_INSA C
			ON B.YEAR = C.YEAR
           AND B.ASSESSOR_EMPN = C.EMPN
		 WHERE A.DEPT_CD IN (SELECT DEPT_CD
                               FROM BSC_INSA_DEPT
                              WHERE YEAR = #findYear#
                                AND USE_YN = 'T'
                         START WITH DEPT_CD = #findDeptCd#
                   CONNECT BY PRIOR YEAR = YEAR
                                AND PRIOR DEPT_CD = UP_DEPT_CD)
		   AND A.DEPT_CD > '1090'
		   <!-- AND A.USE_YN = 'T' -->
		   AND A.YEAR = #findYear#
           AND A.DEPT_CD IN ( SELECT A.DEPT_CD
                                  FROM BSC_INSA_DEPT A
                                  LEFT OUTER JOIN BSC_INSA_DEPT B
                                    ON A.YEAR = B.YEAR AND A.USE_YN = B.USE_YN AND A.DEPT_CD = B.UP_DEPT_CD
                                 WHERE A.YEAR = #findYear# 
                                 <!--  AND A.USE_YN = 'T' -->
                                   AND A.DEPT_CD > '1090'
                                 GROUP BY A.DEPT_CD
                                HAVING COUNT(B.DEPT_CD) = 0
                           )
	  ORDER BY A.DEPT_CD
    </select>
    
    <!--
	==================================================================   
	  # 설명	: 실조직 트리 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_DEPTINFO
	==================================================================
	-->
	<select id="getRealDeptList" parameterClass="hashMap" resultClass="hashMap">
		SELECT  A.DEPT_ID AS CODE_ID
		      , A.DEPT_NM AS CODE_NM
		      , A.UP_DEPT_ID AS UP_CODE_ID
		      , LEVEL AS LEVEL_ID
		FROM  V_DEPTINFO A
		WHERE BEING_YN = 'Y'
		START WITH UP_DEPT_ID IS NULL
		CONNECT BY PRIOR DEPT_ID = UP_DEPT_ID   
		ORDER SIBLINGS BY OUORDER
	</select>
    
    
    <!--
	==================================================================   
	  # 설명	: 사용자정보 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_USERINFO
	==================================================================
	-->
	<select id="getUserList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.SABUN
	         , A.USER_ID 
	         , A.USER_NM
	         , A.DEPT_ID
	         , A.DEPT_NM
	         , A.JIKGUB_CD
	         , A.JIKGUB_NM
	         , A.POS_CD
	         , A.POS_NM
	         , A.EMAIL
		 FROM V_ROLE_USER A
		WHERE 1=1
		
		<isEmpty prepend="AND" property="findUserNm">
			A.DEPT_ID = #deptId#
		</isEmpty>
		  
		<isNotEmpty prepend="AND" property="findUserNm">
            UPPER(A.USER_NM) LIKE  '%' || TRIM(UPPER(#findUserNm#)) ||'%'
	   	</isNotEmpty>
	   	
		ORDER BY A.JIKGUB_CD, A.POS_CD 
	</select>
    
    <!--
    ==================================================================   
      # 설명    : 직원기여도평가 평가자관리 등록
      #    기능    : INSERT
      #    TABLE    : 
    ==================================================================
    -->    
   <insert id="insertData" parameterClass="hashMap">
		INSERT INTO CON_EMP_EVAL_ASSESSOR 
					( YEAR
					, DEPT_CD
					, ASSESSOR_EMPN
					, CREATE_DT
                     			  )
			 VALUES ( #year#
					, #deptCd#
					, #empn#
					, SYSDATE
					)
				  
	</insert> 

    <!--
    ==================================================================   
      # 설명    : 직원기여도평가 평가자관리 삭제
      #    기능    : UPDATE
      #    TABLE    : CON_EMP_EVAL_ASSESSOR
    ==================================================================
    -->    
    <delete id="deleteData" parameterClass="hashMap">
        DELETE FROM CON_EMP_EVAL_ASSESSOR
        WHERE DEPT_CD = #deptCd#
        AND YEAR = #year#
         
    </delete>
    
    <!--
    ==================================================================
      # 설명    : 평가자관리 삭제
      # 기능    : DELETE
      # TABLE   : CON_EMP_EVAL_ASSESSOR
    ==================================================================
    -->
    <delete id="deleteAssessorInfo" parameterClass="hashMap">
        DELETE FROM CON_EMP_EVAL_ASSESSOR
        WHERE YEAR = #findYear#
         
    </delete>
    <!--
    ==================================================================
      # 설명    : 평가군 삭제
      # 기능    : DELETE
      # TABLE   : CON_EMP_DEPT_EVAL_GRP
    ==================================================================
    -->
    <delete id="deleteEvalGrpInfo" parameterClass="hashMap">
        DELETE FROM CON_EMP_DEPT_EVAL_GRP
        WHERE YEAR = #findYear#
    </delete>
    
    <!--
    ==================================================================
      # 설명  : 평가군 평가부서 매핑입력 
      # 기능  : INSERT
      # TABLE : CON_EMP_DEPT_EVAL_GRP
    ==================================================================
    -->
	<insert id="insertEvalGrpInfo" parameterClass="hashMap">
		INSERT INTO CON_EMP_DEPT_EVAL_GRP (YEAR , DEPT_CD , EVAL_GRP_ID , CREATE_DT)
							SELECT A.YEAR
					             , A.DEPT_CD
					             , ( SELECT EVAL_GRP_ID 
						               FROM PRS_EVAL_GRP
						              WHERE YEAR = #findYear#
						                AND EVAL_TYPE = '09') AS EVAL_GRP_ID
					             , SYSDATE
					          FROM BSC_INSA_DEPT A
					         WHERE A.DEPT_CD IN (SELECT DEPT_CD
					                               FROM BSC_INSA_DEPT
					                              WHERE YEAR = #findYear#
					                         START WITH DEPT_CD = '0000'
					                   CONNECT BY PRIOR YEAR = YEAR
					                                AND PRIOR DEPT_CD = UP_DEPT_CD)
					           AND A.DEPT_CD > '1090'
					           <!-- AND A.USE_YN = 'T'-->
					           AND A.DEPT_CD IN (
					                                SELECT A.DEPT_CD
					                                  FROM BSC_INSA_DEPT A
					                                  LEFT OUTER JOIN BSC_INSA_DEPT B
					                                    ON A.YEAR = B.YEAR AND A.USE_YN = B.USE_YN AND A.DEPT_CD = B.UP_DEPT_CD
					                                 WHERE A.YEAR = #findYear# 
					                                 <!-- AND A.USE_YN = 'T' -->
					                                   AND A.DEPT_CD > '1090'
					                                 GROUP BY A.DEPT_CD
					                                HAVING COUNT(B.DEPT_CD) = 0
					                           )
							   AND A.YEAR = #findYear#
					      ORDER BY A.DEPT_CD
	</insert>
    <!--
    ==================================================================
      # 설명  : 평가자 입력 
      # 기능  : INSERT
      # TABLE : CON_EMP_EVAL_ASSESSOR
    ==================================================================
    -->
	<insert id="insertAssessorInfo" parameterClass="hashMap">
		INSERT INTO CON_EMP_EVAL_ASSESSOR (YEAR, DEPT_CD, ASSESSOR_EMPN)
				SELECT A.YEAR
		             , A.DEPT_CD
			<![CDATA[					             
		             , (select empn from BSC_INSA where YEAR = A.YEAR AND ROWNUM = '1' AND DEPT_CD = A.DEPT_CD AND POS_TC IN ('12', '21', '22', '2C', '31', '32', '34', '39') and EMPN in (select empn from bsc_insa_pcmt where year = #findYear# and end_pcmt_date = #findYear#||'1231' and pcmt_tc <> '34')) ASSESSOR_EMPN
			]]>					              
		          FROM BSC_INSA_DEPT A
		         WHERE A.DEPT_CD IN (SELECT DEPT_CD
		                               FROM BSC_INSA_DEPT
		                              WHERE YEAR = #findYear#
		                         START WITH DEPT_CD = '0000'
		                   CONNECT BY PRIOR YEAR = YEAR
		                                AND PRIOR DEPT_CD = UP_DEPT_CD)
		           AND A.DEPT_CD > '1090'
		           <!-- AND A.USE_YN = 'T' -->
		           AND A.DEPT_CD IN (
		                                SELECT A.DEPT_CD
		                                  FROM BSC_INSA_DEPT A
		                                  LEFT OUTER JOIN BSC_INSA_DEPT B
		                                    ON A.YEAR = B.YEAR AND A.USE_YN = B.USE_YN AND A.DEPT_CD = B.UP_DEPT_CD
		                                 WHERE A.YEAR = #findYear# 
		                                 <!-- AND A.USE_YN = 'T'  -->
		                                   AND A.DEPT_CD > '1090'
		                                 GROUP BY A.DEPT_CD
		                                HAVING COUNT(B.DEPT_CD) = 0
		                           )
				   AND A.YEAR = #findYear#
		      ORDER BY A.DEPT_CD
	  
	</insert>
    
     <!--
	==================================================================
	  # 설명	: 평가자관리 엑셀전환다운로드
	  #	기능	: SELECT
	  #	TABLE	: CON_EMP_EVAL_ASSESSOR
	==================================================================
	-->
	<select id="getEmpEvalAssessorExcelList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.DEPT_CD
		     , B.DEPT_KOR_NM
		     , A.ASSESSOR_EMPN
		     , C.KOR_NM FIRSTKORNM
		  FROM CON_EMP_EVAL_ASSESSOR A
	LEFT OUTER JOIN BSC_INSA_DEPT B
			ON A.YEAR = B.YEAR
		   AND A.DEPT_CD = B.DEPT_CD
	LEFT OUTER JOIN BSC_INSA C
			ON A.YEAR = C.YEAR
		   AND A.ASSESSOR_EMPN = C.EMPN    

	</select>
	
	
	<!--
	==================================================================   
	  # 설명	: 권한 삭제
	  #	기능	: DELETE
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<update id="deleteAdminDatas" parameterClass="hashMap">
		DELETE FROM BSC_ADMIN
         WHERE ADMIN_GUBUN='31'
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 권한 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<insert id="insertAdminDatas" parameterClass="hashMap">
		 INSERT INTO BSC_ADMIN (USER_ID , ADMIN_GUBUN)
			SELECT DISTINCT ASSESSOR_EMPN , '31'
              FROM CON_EMP_EVAL_ASSESSOR 
               WHERE ASSESSOR_EMPN IS NOT NULL AND YEAR = #findYear#
	</insert>
</sqlMap>


