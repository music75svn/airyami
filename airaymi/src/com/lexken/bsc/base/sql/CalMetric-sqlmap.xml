<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.base.calMetric">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_CAL_METRIC
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
	         , A.METRIC_ID
	         , A.METRIC_NM
	         , A.CAL_GUBUN
	         , A.METRIC_PROPERTY_ID
	         , F_CODE_NM('010', A.METRIC_PROPERTY_ID, A.YEAR) AS METRIC_PROPERTY_NM  
	         , A.ACT_CAL_TYPE
	         , (SELECT COUNT(1) FROM BSC_CAL_METRIC WHERE A.YEAR = YEAR AND A.METRIC_ID = METRIC_ID AND DELETE_DT IS NULL AND ROWNUM = 1) CNT
		 FROM BSC_METRIC A
		WHERE A.YEAR = #findYear#
		  AND A.TYPE_ID = '01'
		  AND A.SC_DEPT_ID = #findScDeptId#
          AND A.DELETE_DT IS NULL
		ORDER BY A.SORT_ORDER 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 상세 조회(달성율)
	  #	기능	: SELECT
	  #	TABLE	: BSC_CAL_METRIC
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
	         , A.METRIC_ID
	         , A.METRIC_NM
	         , A.CAL_GUBUN
	         , B.SUB_METRIC_ID
	         , B.CAL_PLACE
	         , B.WEIGHT 
	         , C.METRIC_NM AS SUB_METRIC_NM
	         , C.SC_DEPT_ID
	         , D.SC_DEPT_NM
		FROM BSC_METRIC A
		         INNER JOIN BSC_CAL_METRIC B ON A.YEAR = B.YEAR AND A.METRIC_ID = B.METRIC_ID AND B.DELETE_DT IS NULL
		         INNER JOIN BSC_METRIC C ON B.YEAR = C.YEAR AND B.SUB_METRIC_ID = C.METRIC_ID AND C.DELETE_DT IS NULL
		         INNER JOIN BSC_SC_DEPT D ON C.YEAR = D.YEAR AND C.SC_DEPT_ID = D.SC_DEPT_ID AND D.DELETE_DT IS NULL
		WHERE A.YEAR = #year#
	      AND A.METRIC_ID = #metricId#
		  AND A.DELETE_DT IS NULL 
		ORDER BY B.SUB_METRIC_ID, B.CAL_PLACE 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 상세 조회(실적)
	  #	기능	: SELECT
	  #	TABLE	: BSC_CAL_METRIC
	==================================================================
	-->
	<select id="getActualDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
	         , A.METRIC_ID
	         , A.METRIC_NM
	         , B.CAL_TYPE_COL
	         , C.SUB_METRIC_ID
	         , C.CAL_PLACE
	         , D.METRIC_NM AS SUB_METRIC_NM
	         , E.SC_DEPT_NM
		FROM BSC_METRIC A
		     LEFT OUTER JOIN BSC_CAL_TYPE_COL B ON A.YEAR = B.YEAR AND A.METRIC_ID = B.METRIC_ID AND B.DELETE_DT IS NULL
		     LEFT OUTER JOIN BSC_CAL_METRIC C ON A.YEAR = C.YEAR AND A.METRIC_ID = C.METRIC_ID AND B.CAL_TYPE_COL = C.CAL_PLACE
		     LEFT OUTER JOIN BSC_METRIC D ON A.YEAR = D.YEAR AND C.SUB_METRIC_ID = D.METRIC_ID AND D.DELETE_DT IS NULL
		     LEFT OUTER JOIN BSC_SC_DEPT E ON D.YEAR = E.YEAR AND D.SC_DEPT_ID = E.SC_DEPT_ID AND E.DELETE_DT IS NULL
		WHERE A.YEAR = #year#
	      AND A.METRIC_ID = #metricId#
		  AND A.DELETE_DT IS NULL
		ORDER BY B.CAL_TYPE_COL
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 상세 조회(실적)
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->
	<select id="getMetricDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
		     , A.METRIC_ID
		     , A.METRIC_NM
		     , A.SC_DEPT_ID
		     , B.SC_DEPT_NM
		FROM BSC_METRIC A
		     LEFT OUTER JOIN BSC_SC_DEPT B ON A.YEAR = B.YEAR AND A.SC_DEPT_ID = B.SC_DEPT_ID AND B.DELETE_DT IS NULL
		WHERE A.YEAR = #findYear#
	      AND A.SC_DEPT_ID = #scDeptId#
	      AND A.METRIC_ID NOT IN (SELECT METRIC_ID FROM BSC_CAL_METRIC WHERE YEAR = #findYear#)
		  AND A.DELETE_DT IS NULL
	    ORDER BY A.METRIC_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_CAL_METRIC
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO BSC_CAL_METRIC (
                    YEAR
                  , METRIC_ID
                  , SUB_METRIC_ID
                  , CAL_PLACE
                  , WEIGHT
                  , CREATE_DT 
              ) VALUES (
                   #year#
                 , #metricId#
                 , #subMetricId#
                 , #calPlace#
                 , #weight#
                 , SYSDATE
              )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 전체 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_CAL_METRIC
	==================================================================
	-->	
	<update id="deleteAllData" parameterClass="hashMap">
		DELETE FROM BSC_CAL_METRIC
		WHERE YEAR = #year#
		  AND METRIC_ID = #metricId#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_CAL_METRIC
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM BSC_CAL_METRIC
		WHERE YEAR = #year#
		  AND METRIC_ID = #metricId#
		  AND SUB_METRIC_ID = #subMetricId#
	</update>

	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE BSC_METRIC
		   SET CAL_GUBUN = #calGubun#
		WHERE YEAR = #year#
		  AND METRIC_ID = #metricId#
	</update>	
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 상세 조회(실적)
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->
	<select id="getMetricDetailMain" parameterClass="hashMap" resultClass="hashMap">
		SELECT * FROM (
			SELECT A.YEAR
			     , A.METRIC_ID
			     , A.METRIC_NM
			     , A.SC_DEPT_ID
			     , B.SC_DEPT_NM
			     , '1' SORT_ORDER
			FROM BSC_METRIC A
			     LEFT OUTER JOIN BSC_SC_DEPT B ON A.YEAR = B.YEAR AND A.SC_DEPT_ID = B.SC_DEPT_ID AND B.DELETE_DT IS NULL
			WHERE A.YEAR = #findYear#
		      AND A.SC_DEPT_ID = #scDeptId#
		      AND A.METRIC_ID NOT IN (SELECT METRIC_ID FROM BSC_CAL_METRIC WHERE YEAR = #findYear#)
			  AND A.DELETE_DT IS NULL
		<isEqual property="scDeptId" compareValue="D000001">
			UNION ALL
			SELECT YEAR ,GOV_METRIC_ID, GOV_METRIC_NM, 'D000001', 'KGS', '0' SORT_ORDER
			          FROM GOV_METRIC
			         WHERE YEAR = #findYear#
			           AND GBN_ID = '01'
			           AND DELETE_DT IS NULL
		</isEqual>
		  ) A
	    ORDER BY A.SORT_ORDER, A.METRIC_NM
	</select>
	
</sqlMap>


