<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.extra.extraPoint">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 
	<!--
	==================================================================   
	  # 설명	: 공모직 대상자 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: PRS_EXTRA_POINT
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
			 , A.CODE_ID
			 , A.CODE_NM
			 , B.EMPN
			 , (select KOR_NM from bsc_insa where EMPN=B.EMPN AND YEAR = B.YEAR) AS KOR_NM
		  FROM BSC_CODE A
	LEFT OUTER JOIN PRS_EXTRA_POINT B
				 ON A.YEAR = B.YEAR
				AND A.CODE_ID = B.DEPT_CD
		 WHERE A.CODE_GRP_ID = '177'
		   AND A.YEAR = #findYear#
	  ORDER BY SORT_ORDER
	
	</select>
	
	<!--
    ==================================================================
      # 설명    : 공모직 대상자 삭제
      # 기능    : DELETE
      # TABLE   : PRS_EXTRA_POINT
    ==================================================================
    -->
    <delete id="deleteExtraPontData" parameterClass="hashMap">
        DELETE FROM PRS_EXTRA_POINT
         WHERE YEAR				= #year#
		   AND DEPT_CD			= #deptCd#
		   AND EMPN				= #empn#
    </delete>
    
	<!--
    ==================================================================
      # 설명    : 공모직 대상자 전체삭제
      # 기능    : DELETE
      # TABLE   : PRS_EXTRA_POINT
    ==================================================================
    -->
    <delete id="deleteAllExtraPontData" parameterClass="hashMap">
        DELETE FROM PRS_EXTRA_POINT
         WHERE YEAR				= #year#
    </delete>
    
    <!--
    ==================================================================
      # 설명  : 공모직 대상자 등록 
      # 기능  : UPDATE
      # TABLE : PRS_EXTRA_POINT
    ==================================================================
    -->
	<insert id="insertExtraPontData" parameterClass="hashMap">
		INSERT INTO PRS_EXTRA_POINT (YEAR
								   , DEPT_CD
								   , EMPN
								   
                     			  )
			 VALUES (              #year#
								 , #deptCd#
								 , #empn#
            		)
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 공모직 대상자 입력(불러오기용)
	  #	기능	: INSERT
	  #	TABLE	: PRS_EXTRA_POINT
	==================================================================
	-->	
	<insert id="insertExtraPoint" parameterClass="hashMap">
		INSERT INTO PRS_EXTRA_POINT
					SELECT #year#, CODE_ID, EMPN
  					  FROM ( SELECT A.CODE_ID
								  , A.CODE_NM
								  , B.EMPN
								  , B.KOR_NM
								  , ROW_NUMBER() OVER (PARTITION BY A.CODE_ID ORDER BY EMPN) ROWN 
          					   FROM BSC_CODE A, BSC_INSA B
         					  WHERE A.CODE_GRP_ID = '177' 
         					    AND A.YEAR = #year#
           						AND A.CODE_ID = B.DEPT_CD
								AND A.YEAR = B.YEAR
								AND ((A.ETC1 = '10' AND B.CAST_TC = '10') OR (A.ETC1 IS NULL AND B.CAST_TC IN ('20', '30')))
         				   ORDER BY A.SORT_ORDER
       						)
 					 
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 공모직 대상자 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: PRS_EXTRA_POINT
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		  SELECT A.YEAR
       , A.CODE_ID
       , A.CODE_NM
       , B.EMPN
       , (SELECT KOR_NM
            FROM BSC_INSA
           WHERE EMPN = B.EMPN
             AND YEAR = B.YEAR)
            AS KOR_NM
    FROM    BSC_CODE A
         INNER JOIN
            PRS_EXTRA_POINT B
         ON A.YEAR = B.YEAR
        AND A.CODE_ID = B.DEPT_CD
        AND B.EMPN = #empn#
   WHERE A.CODE_GRP_ID = '177'
     AND A.YEAR = #findYear#
ORDER BY SORT_ORDER	    
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 공모자 대상자 수정
	  #	기능	: UPDATE
	  #	TABLE	: PRS_EXTRA_POINT
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE PRS_EXTRA_POINT 
		   SET DEPT_CD		= #deptCd#
		   	 , EMPN			= #empn# 
		 WHERE DEPT_CD = #deptCd#
		   AND EMPN	   = #empnold#
		   AND YEAR    = #year#			 
					
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 저장시에 동일한 공모직대상자 수
	  #	기능	: SELECT
	  #	TABLE	: PRS_EXTRA_POINT
	==================================================================
	-->	
	<select id="getExtraPointCount" parameterClass="hashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) CNT 
		  FROM PRS_EXTRA_POINT
		 WHERE YEAR = #year#
		   AND DEPT_CD = #deptCd# 
		   AND EMPN =  #empn#
	</select>
		
	<!--
	==================================================================   
	  # 설명	: 업데이트시에 동일한 공모직대상자 수
	  #	기능	: SELECT
	  #	TABLE	: PRS_EXTRA_POINT
	==================================================================
	-->	
	<select id="getUpExtraPointCount" parameterClass="hashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) CNT 
		  FROM PRS_EXTRA_POINT
		 WHERE YEAR = #year#
		   AND DEPT_CD = #empnold# 
		   AND EMPN =  #empn#
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 사용자정보 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA
	==================================================================
	-->
	<select id="getUserList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.EMPN AS USER_ID
  			 , A.KOR_NM AS USER_NM
  			 , A.DEPT_CD AS DEPT_ID
  			 , B.DEPT_KOR_NM AS DEPT_NM
  			 , C.CODE_NM AS POS_NM
    	  FROM BSC_INSA A
	LEFT OUTER JOIN BSC_INSA_DEPT B
            ON A.YEAR = B.YEAR
           AND A.DEPT_CD = B.DEPT_CD
	LEFT OUTER JOIN BSC_CODE C
            ON B.YEAR = C.YEAR
           AND C.CODE_GRP_ID ='171'
           AND A.POS_TC = C.CODE_ID    
   		 WHERE 1 = 1
		   AND YEAR = #findYear#
		<isEmpty prepend="AND" property="findUserNm">
			A.DEPT_CD = SUBSTR(#deptId#, 2)
		</isEmpty>
		  
		<isNotEmpty prepend="AND" property="findUserNm">
            UPPER(A.KOR_NM) LIKE  '%' || TRIM(UPPER(#findUserNm#)) ||'%'
	   	</isNotEmpty>
	   	
		ORDER BY A.EMPN, A.KOR_NM 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 조직 트리 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getDeptList" parameterClass="hashMap" resultClass="hashMap">
		 SELECT CODE_ID
		 	   ,CODE_NM
		 	   ,UP_CODE_ID
		 	   ,DISP_ORDER
		 	   ,YEAR
		 	   ,USE_YN
		 	   ,LEVEL_ID
		 	   FROM ( SELECT 'A' || A.DEPT_CD AS CODE_ID,
                  A.DEPT_KOR_NM AS CODE_NM,
                  'A' || A.UP_DEPT_CD AS UP_CODE_ID,
                  DISP_ORDER,
                  YEAR, USE_YN,
                  DEPT_LEVL AS LEVEL_ID
             FROM BSC_INSA_DEPT A
             WHERE USE_YN = 'T'
             AND YEAR = #findYear#
             UNION ALL
             SELECT 'A' || DEPT_CD AS CODE_ID,
                  DEPT_KOR_NM AS CODE_NM,
                  UP_DEPT_CD AS UP_CODE_ID,
                  DISP_ORDER,
                  YEAR,
                  USE_YN,
                  DEPT_LEVL AS LEVEL_ID FROM BSC_INSA_DEPT WHERE DEPT_CD = '0000' AND YEAR = #findYear# )
            WHERE YEAR = #findYear# 
       START WITH UP_CODE_ID IS NULL
        CONNECT BY PRIOR CODE_ID = UP_CODE_ID
               AND PRIOR YEAR = #findYear#
        ORDER SIBLINGS BY DISP_ORDER
	</select>	
	  		
</sqlMap>


