<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="gov.measure.subCalMapping">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: GOV_SUB_CAL_MAPPING 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 경평계량 세부요소매핑 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: GOV_SUB_CAL_MAPPING 
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR,
               A.GOV_METRIC_ID,
               A.GOV_METRIC_NM,
               CASE WHEN A.MAIN_METRIC_YN != 'Y' THEN 'NNN'||A.GOV_METRIC_NM
               ELSE 'YYY'||A.GOV_METRIC_NM END AS SEL_GOV_METRIC_NM,
               A.DIREC_ID,
               A.WEIGHT,
               F_CODE_NM('147',A.DIREC_ID,A.YEAR) DIREC_NM,
               A.EVAL_METHOD_ID,
               F_CODE_NM('146',A.EVAL_METHOD_ID,A.YEAR) EVAL_METHOD_NM,
               A.UNIT,
               F_CODE_NM('013',A.UNIT,A.YEAR) UNIT_NM,
               A.SC_DEPT_ID,
               B.SC_DEPT_NM,
               A.INSERT_USER_ID,
               C.USER_NM AS INSERT_USER_NM,
               D.ACT_CAL_TYPE_COL_ID,
               D.ACT_CAL_TYPE_COL_NM,
               (SELECT COUNT(1) 
                  FROM GOV_SUB_CAL_MAPPING 
                 WHERE YEAR = A.YEAR 
                   AND GOV_METRIC_ID = A.GOV_METRIC_ID 
                   AND ACT_CAL_TYPE_COL_ID = D.ACT_CAL_TYPE_COL_ID) ACT_CAL_CNT,
               COUNT(1) OVER(PARTITION BY A.GOV_METRIC_ID ) CAL_CNT,
               ROW_NUMBER() OVER(PARTITION BY A.GOV_METRIC_ID ORDER BY A.MET_ORDER ASC, D.ACT_CAL_TYPE_COL_ID) CAL_NUM
          FROM (SELECT ROWNUM MET_ORDER,
                       X.YEAR,
                       X.GOV_METRIC_ID,
                       X.UP_METRIC_ID,
                       X.GOV_METRIC_NM,
                       X.EVAL_CAT_ID,
                       X.EVAL_CAT_GRP_ID,
                       X.DIREC_ID,
                       X.EVAL_METHOD_ID,
                       X.UNIT,
                       X.BEST_TARGET,
                       X.MAIN_METRIC_YN,
                       X.WEIGHT,
                       X.SC_DEPT_ID,
                       X.INSERT_USER_ID,
                       X.SORT_ORDER
                  FROM (SELECT YEAR,
                               GOV_METRIC_ID,
                               UP_METRIC_ID,
                               GOV_METRIC_NM,
                               EVAL_CAT_ID,
                               EVAL_CAT_GRP_ID,
                               DIREC_ID,
                               EVAL_METHOD_ID,
                               UNIT,
                               BEST_TARGET,
                               MAIN_METRIC_YN,
                               WEIGHT,
                               SC_DEPT_ID,
                               INSERT_USER_ID,
                               SORT_ORDER
                           FROM (SELECT * FROM GOV_METRIC WHERE DELETE_DT IS NULL)  
                          WHERE YEAR = #findYear#
                            AND GBN_ID = '01'
                          START WITH MAIN_METRIC_YN = 'Y'
                        CONNECT BY PRIOR GOV_METRIC_ID = UP_METRIC_ID 
                               AND PRIOR YEAR = YEAR
                 ORDER SIBLINGS BY SORT_ORDER ASC
                         ) X 
                ) A
                LEFT OUTER JOIN BSC_SC_DEPT B
                ON A.YEAR = B.YEAR
                AND A.SC_DEPT_ID = B.SC_DEPT_ID
                AND B.DELETE_DT IS NULL
                LEFT OUTER JOIN V_ROLE_USER C
                ON A.INSERT_USER_ID = C.USER_ID
                LEFT OUTER JOIN GOV_CAL_TYPE_COL D
                ON A.YEAR = D.YEAR
                AND A.GOV_METRIC_ID = D.GOV_METRIC_ID
      ORDER BY A.MET_ORDER ASC, D.ACT_CAL_TYPE_COL_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 경평계량 세부요소매핑 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: GOV_SUB_CAL_MAPPING 
	==================================================================
	-->
	<select id="getSubCalList" parameterClass="hashMap" resultClass="hashMap">
		   SELECT A.SUB_CAL_ID,
                  A.SUB_CAL_NM,
                  CASE WHEN B.SUB_CAL_ID IS NULL THEN 'N'
                  ELSE 'Y' END CHECKED,
                  GC.ACT_CAL_TYPE_COL_NM
             FROM GOV_SUB_CAL A
                  INNER JOIN GOV_CAL_TYPE_COL GC
                  ON GC.YEAR = A.YEAR
                  AND GC.GOV_METRIC_ID = #govMetricId#
                  AND GC.ACT_CAL_TYPE_COL_ID = #actCalTypeColId#
                  LEFT OUTER JOIN GOV_SUB_CAL_MAPPING B
                  ON A.YEAR = B.YEAR
                  AND A.SUB_CAL_ID = B.SUB_CAL_ID
                  AND B.GOV_METRIC_ID = #govMetricId#
                  AND B.ACT_CAL_TYPE_COL_ID = #actCalTypeColId#
            WHERE A.YEAR = #year#
            ORDER BY A.SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 경평계량 세부요소매핑 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: GOV_SUB_CAL_MAPPING 
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR                  
			 , GOV_METRIC_ID         
			 , ACT_CAL_TYPE_COL_ID   
			 , SUB_CAL_ID            
		  FROM GOV_SUB_CAL_MAPPING  
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND GOV_METRIC_ID = #govMetricId#
		   AND ACT_CAL_TYPE_COL_ID = #actCalTypeColId#
		   AND SUB_CAL_ID = #subCalId#	      
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 경평계량 세부요소매핑 등록
	  #	기능	: INSERT
	  #	TABLE	: GOV_SUB_CAL_MAPPING 
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO GOV_SUB_CAL_MAPPING  ( 
			   YEAR
			 , GOV_METRIC_ID
			 , ACT_CAL_TYPE_COL_ID
			 , SUB_CAL_ID
			 , CREATE_DT
			 ) VALUES ( 
			   #year#
			 , #govMetricId#
			 , #actCalTypeColId#
			 , #subCalId#
			 , SYSDATE
			 )
	</insert>	

	<!--
	==================================================================   
	  # 설명	: 경평계량 세부요소매핑 삭제
	  #	기능	: UPDATE
	  #	TABLE	: GOV_SUB_CAL_MAPPING 
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM GOV_SUB_CAL_MAPPING  
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND GOV_METRIC_ID = #govMetricId#
		   AND ACT_CAL_TYPE_COL_ID = #actCalTypeColId#
	</update>
	
	
	<!--
	==================================================================   
	  # 설명	: 경평계량 세부요소실적 조회 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: GOV_SUB_CAL_MAPPING 
	==================================================================
	-->
	<select id="popSubCalTypeColMappingList_xml" parameterClass="hashMap" resultClass="hashMap">
		SELECT SCL.SUB_CAL_ID, SCL.SUB_CAL_NM
             , SCL.UNIT AS UNIT_ID
             , F_CODE_NM('013', SCL.UNIT, SCL.YEAR) AS UNIT_NM
             , MAX(CASE WHEN SCA.MON = '01' THEN SCA.ACTUAL ELSE NULL END ) AS MON_01
             , MAX(CASE WHEN SCA.MON = '02' THEN SCA.ACTUAL ELSE NULL END ) AS MON_02
             , MAX(CASE WHEN SCA.MON = '03' THEN SCA.ACTUAL ELSE NULL END ) AS MON_03
             , MAX(CASE WHEN SCA.MON = '04' THEN SCA.ACTUAL ELSE NULL END ) AS MON_04
             , MAX(CASE WHEN SCA.MON = '05' THEN SCA.ACTUAL ELSE NULL END ) AS MON_05
             , MAX(CASE WHEN SCA.MON = '06' THEN SCA.ACTUAL ELSE NULL END ) AS MON_06
             , MAX(CASE WHEN SCA.MON = '07' THEN SCA.ACTUAL ELSE NULL END ) AS MON_07
             , MAX(CASE WHEN SCA.MON = '08' THEN SCA.ACTUAL ELSE NULL END ) AS MON_08
             , MAX(CASE WHEN SCA.MON = '09' THEN SCA.ACTUAL ELSE NULL END ) AS MON_09
             , MAX(CASE WHEN SCA.MON = '10' THEN SCA.ACTUAL ELSE NULL END ) AS MON_10
             , MAX(CASE WHEN SCA.MON = '11' THEN SCA.ACTUAL ELSE NULL END ) AS MON_11
             , MAX(CASE WHEN SCA.MON = '12' THEN SCA.ACTUAL ELSE NULL END ) AS MON_12
             , SCL.INSERT_USER_ID, C.USER_NM AS INSERT_USER_NM
          FROM 
            (SELECT SCM.YEAR, SCM.SUB_CAL_ID, SC.SUB_CAL_NM, SC.UNIT, SC.INSERT_USER_ID, SC.SORT_ORDER
               FROM GOV_SUB_CAL_MAPPING SCM
                    LEFT OUTER JOIN 
                    GOV_SUB_CAL SC
                    ON SCM.YEAR = SC.YEAR
                   AND SCM.SUB_CAL_ID = SC.SUB_CAL_ID
              WHERE 1=1
                AND SCM.YEAR = #year#
                AND SCM.GOV_METRIC_ID = #govMetricId#
                AND SCM.ACT_CAL_TYPE_COL_ID = #govMetricCalTypeColId#
              GROUP BY SCM.YEAR, SCM.SUB_CAL_ID, SC.SUB_CAL_NM, SC.UNIT, SC.INSERT_USER_ID, SC.SORT_ORDER
            ) SCL
            LEFT OUTER JOIN 
            GOV_SUB_CAL_ACTUAL SCA
            ON SCL.YEAR = SCA.YEAR
           AND SCL.SUB_CAL_ID = SCA.SUB_CAL_ID
            LEFT OUTER JOIN V_ROLE_USER C
            ON SCL.INSERT_USER_ID = C.USER_ID
         GROUP BY SCL.YEAR, SCL.SUB_CAL_ID, SCL.SUB_CAL_NM, SCL.UNIT, SCL.INSERT_USER_ID, C.USER_NM, SCL.SORT_ORDER
         ORDER BY SCL.SORT_ORDER NULLS LAST, SCL.SUB_CAL_NM
	
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 경평지표명
	  #	기능	: SELECT
	  #	TABLE	: GOV_METRIC 
	==================================================================
	-->
	<select id="govMetricNm" parameterClass="hashMap" resultClass="java.lang.String">
		
		SELECT GOV_METRIC_NM
		  FROM GOV_METRIC
		 WHERE YEAR = #year#
		   AND GOV_METRIC_ID = #govMetricId#
		   AND DELETE_DT IS NULL
	
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 경평지표명
	  #	기능	: SELECT
	  #	TABLE	: GOV_CAL_TYPE_COL 
	==================================================================
	-->
	<select id="govCalTypeNm" parameterClass="hashMap" resultClass="java.lang.String">
		
		SELECT ACT_CAL_TYPE_COL_NM
		  FROM GOV_CAL_TYPE_COL
		 WHERE YEAR = #year#
		   AND GOV_METRIC_ID = #govMetricId#
		   AND ACT_CAL_TYPE_COL_ID = #govMetricCalTypeColId#
	
	</select>
	
	
</sqlMap>


