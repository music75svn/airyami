<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.board.board">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 게시판관리 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">

        SELECT T.*                                                                      
             , (SELECT BB.DEPT_KOR_NM
	               FROM BSC_INSA AA
	              INNER JOIN BSC_INSA_DEPT BB
	                 ON AA.YEAR = BB.YEAR
	                AND AA.DEPT_CD = BB.DEPT_CD
	              WHERE AA.YEAR = #findYear#
	                AND AA.EMPN = BBS_REGISTER) AS DEPT_NM 
        FROM (
           SELECT A.*, B.BBS_TOTAL, ROWNUM AS RM                                      
           FROM (
              SELECT YEAR, T.BBS_ID, BBS_SEQ, BBS_PSEQ, BBS_SORT1, BBS_SORT2, BBS_DEPT      
               , BBS_CATEGORY, BBS_TITLE, BBS_READ, BBS_RECOMMAND, BBS_REGISTER
               , BBS_REGISTER_NAME, BBS_PASSWD, TO_CHAR(CREATE_DT,'YYYY-MM-DD') CREATE_DT, BBS_CONTENTS
               , CASE WHEN TO_CHAR(CREATE_DT, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD') THEN 'Y' ELSE 'N' END AS IS_NEW                
              FROM BSC_COMMON_BOARD_BODY T
              WHERE T.YEAR = #findYear# AND BBS_ID = #findBbsId# AND DELETE_DT IS NULL
              AND (BBS_CATEGORY = NVL(#findBbsCategory#, '999') OR BBS_CATEGORY IS NULL)      
              <isNotEmpty prepend="AND" property="findBbsTitle">
              	UPPER(BBS_TITLE) LIKE '%'||UPPER(#findBbsTitle#)||'%'
              </isNotEmpty>   
              <isNotEmpty prepend="AND" property="findBbsRegisterName">
              	NVL(UPPER(BBS_REGISTER_NAME),' ') LIKE '%'||UPPER(#findBbsRegisterName#)||'%'
              </isNotEmpty>
             ORDER BY BBS_PSEQ DESC, BBS_SORT2
           ) A, (                        
              SELECT COUNT(1) AS BBS_TOTAL                                            
              FROM BSC_COMMON_BOARD_BODY                                                  
              WHERE YEAR = #findYear# AND BBS_ID = #findBbsId# AND DELETE_DT IS NULL                                  
              AND (BBS_CATEGORY = NVL(#findBbsCategory#, '999') OR BBS_CATEGORY IS NULL )   
              <isNotEmpty prepend="AND" property="findBbsTitle">
              	UPPER(BBS_TITLE) LIKE '%'||UPPER(#findBbsTitle#)||'%'
              </isNotEmpty>                      
              <isNotEmpty prepend="AND" property="findBbsRegisterName">
              	NVL(UPPER(BBS_REGISTER_NAME),' ') LIKE '%'||UPPER(#findBbsRegisterName#)||'%'
              </isNotEmpty>
          ) B
          ORDER BY BBS_PSEQ DESC, BBS_SORT2
        ) T

	</select>
	
	<!--
	==================================================================   
	  # 설명	: 게시판관리 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
           
		SELECT YEAR, BBS_ID, BBS_SEQ, BBS_PSEQ, BBS_SORT1, BBS_SORT2, BBS_DEPT, BBS_CATEGORY      
		, BBS_TITLE, BBS_CONTENTS, BBS_READ, BBS_RECOMMAND, BBS_REGISTER, BBS_REGISTER_NAME 
		, BBS_PASSWD, CREATE_DT, UPDATE_DT                                                  
		, (SELECT BB.DEPT_KOR_NM
	         FROM BSC_INSA AA
	        INNER JOIN BSC_INSA_DEPT BB
	           ON AA.YEAR = BB.YEAR
	          AND AA.DEPT_CD = BB.DEPT_CD
	        WHERE AA.YEAR = #findYear#
	          AND AA.EMPN = BBS_REGISTER) AS DEPT_NM         
		FROM BSC_COMMON_BOARD_BODY T                                                            
		WHERE YEAR = #findYear# AND BBS_ID = #findBbsId# AND BBS_SEQ = #bbsSeq#                                                    
		           
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 게시판관리 등록 (답글이 아닐 경우)
	  #	기능	: INSERT
	  #	TABLE	: 
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		
		INSERT INTO BSC_COMMON_BOARD_BODY ( YEAR, BBS_ID, BBS_SEQ, BBS_PSEQ, BBS_SORT1, BBS_SORT2, BBS_DEPT,    
		   BBS_CATEGORY, BBS_TITLE, BBS_CONTENTS, BBS_READ, BBS_RECOMMAND,                            
		   BBS_REGISTER, BBS_REGISTER_NAME, BBS_PASSWD, CREATE_DT )                                   
		VALUES ( #findYear#, #findBbsId#, NVL(#bbsSeq#,1), #bbsPseq#, 1, '0', 0, NVL(#bbsCategory#,'999'), #bbsTitle#, #bbsContents#, 0, 0
		, #bbsRegister#, #bbsRegisterName#, #bbsPasswd#, SYSDATE )
		
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 게시판관리 등록 (답글일 경우 답글 대상 게시판의 BBS_SEQ를 +1 해준다)
	  #	기능	: INSERT
	  #	TABLE	: 
	==================================================================
	-->	
	<update id="updateSeqData" parameterClass="hashMap">
		
		UPDATE BSC_COMMON_BOARD_BODY                                                            
		SET BBS_SORT1 = BBS_SORT1 + 1                                                       
		WHERE YEAR = #findYear# AND BBS_ID = #findBbsId# AND BBS_SEQ = #bbsPseq# 

	</update>	
	
	<!--
	==================================================================   
	  # 설명	: 게시판관리 등록 (신규 답글을 등록한다.)
	  #	기능	: INSERT
	  #	TABLE	: 
	==================================================================
	-->	
	<insert id="insertReplyData" parameterClass="hashMap">

		INSERT INTO BSC_COMMON_BOARD_BODY (                                                     
		    YEAR, BBS_ID, BBS_SEQ, BBS_PSEQ, BBS_SORT1, BBS_SORT2, BBS_DEPT                       
		    , BBS_CATEGORY, BBS_TITLE, BBS_CONTENTS, BBS_READ, BBS_RECOMMAND                
		    , BBS_REGISTER, BBS_REGISTER_NAME, BBS_PASSWD, CREATE_DT                        
		)                                                                                   
		SELECT #findYear#, #findBbsId#, #bbsSeq#, BBS_PSEQ, BBS_SORT1, BBS_SORT2||''||BBS_SORT1, BBS_DEPT + 1            
		, NVL(#bbsCategory#,'999'), #bbsTitle#, #bbsContents#, 0, 0, #bbsRegister#, #bbsRegisterName#, #bbsPasswd#, SYSDATE                                        
		FROM BSC_COMMON_BOARD_BODY
		WHERE YEAR = #findYear# AND BBS_ID = #findBbsId# AND BBS_SEQ = #bbsPseq#     

	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 게시판관리 수정
	  #	기능	: UPDATE
	  #	TABLE	: 
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		
		UPDATE BSC_COMMON_BOARD_BODY SET                   
		       BBS_CATEGORY = #bbsCategory#, BBS_TITLE = #bbsTitle#,        
		       BBS_CONTENTS = #bbsContents#, UPDATE_DT = SYSDATE   
		WHERE YEAR = #findYear# AND BBS_ID = #findBbsId# AND BBS_SEQ = #bbsSeq#              
		
	</update>	
	
	
	<!--
	==================================================================   
	  # 설명	: 게시판관리 삭제(해당 게시물의 답글의 갯수를 체크한다. 답글이 없을 경우에만 삭제 가능)
	  #	기능	: UPDATE
	  #	TABLE	: 
	==================================================================
	-->	
	<select id="selectReplyCount" parameterClass="hashMap" resultClass="String">
		
		SELECT COUNT(B.BBS_SEQ) CNT                                   
		FROM BSC_COMMON_BOARD_BODY A, BSC_COMMON_BOARD_BODY B                 
		WHERE A.YEAR = B.YEAR AND A.BBS_ID = B.BBS_ID AND A.BBS_PSEQ = B.BBS_PSEQ         
		<![CDATA[
		  AND A.BBS_DEPT < B.BBS_DEPT
		  AND A.BBS_SORT2 < B.BBS_SORT2
		]]>
		  AND A.YEAR = #findYear# AND A.BBS_ID = #findBbsId# AND A.BBS_SEQ = #bbsSeq#
		  AND A.DELETE_DT IS NULL AND B.DELETE_DT IS NULL               

	</select>


	<!--
	==================================================================   
	  # 설명	: 게시판관리 삭제
	  #	기능	: UPDATE
	  #	TABLE	: 
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">

		UPDATE BSC_COMMON_BOARD_BODY        
		SET DELETE_DT = SYSDATE         
		WHERE YEAR = #findYear# AND BBS_ID = #findBbsId# AND BBS_SEQ = #bbsSeq#

	</update>
	
	
	<!--
	==================================================================   
	  # 설명	: 게시판 조회수 증가
	  #	기능	: UPDATE
	  #	TABLE	: 
	==================================================================
	-->	
	<update id="updateReadCount" parameterClass="hashMap">
		
		UPDATE BSC_COMMON_BOARD_BODY SET    
		BBS_READ = BBS_READ + 1         
		WHERE YEAR = #findYear# AND BBS_ID = #findBbsId# AND BBS_SEQ = #bbsSeq#             

	</update>
	
	
	<!--
	==================================================================   
	  # 설명	: 게시판 최대 순번 가지고 오기
	  #	기능	: UPDATE
	  #	TABLE	: 
	==================================================================
	-->	
	<select id="selCommonBoardMaxSeq" parameterClass="hashMap" resultClass="String">

		SELECT NVL(MAX(BBS_SEQ),0) + 1 AS MAX_CNT
		  FROM BSC_COMMON_BOARD_BODY					
		 WHERE YEAR = #findYear# AND BBS_ID = #findBbsId#						               

	</select>

	<!--
	==================================================================   
	  # 설명	: 첨부파일 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_COMMON_BOARD_ATTACH
	==================================================================
	-->	
	<insert id="insertFileInfo" parameterClass="hashMap">
		<selectKey resultClass="java.lang.String" keyProperty="SEQ" >
			SELECT F_PGM_SERI('BSC_COMMON_BOARD_ATTACH', #findYear#, #findBbsId#, #bbsSeq#,'','') SEQ FROM DUAL
		</selectKey> 
		INSERT INTO BSC_COMMON_BOARD_ATTACH (
			   YEAR	
             , BBS_ID
             , BBS_SEQ
             , SEQ
             , ATTACH_FILE_NM
             , ATTACH_FILE_FNM
             , ATTACH_FILE_SUFFIX
             , ATTACH_FILE_PATH
             , CREATE_DT
           ) VALUES (
           	   #findYear#	
             , #findBbsId#
             , #bbsSeq#
             , #SEQ#
             , #attachFileNm#
             , #attachFileFnm#
             , #attachFileSufix#
             , #attachFilePath#
             , SYSDATE
    	   )       
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 첨부파일 삭제
	  #	기능	: INSERT
	  #	TABLE	: BSC_COMMON_BOARD_ATTACH
	==================================================================
	-->	
	<delete id="deleteFileInfo" parameterClass="hashMap">
		DELETE FROM BSC_COMMON_BOARD_ATTACH
		 WHERE YEAR = #findYear# 
		   AND BBS_ID = #findBbsId#
		   AND BBS_SEQ = #bbsSeq#
		   AND SEQ = #seq#
	</delete>
	
	<!--
	==================================================================   
	  # 설명	: 상세 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_COMMON_BOARD_ATTACH
	==================================================================
	-->
	<select id="getFileList" parameterClass="hashMap" resultClass="hashMap">
 		SELECT A.YEAR
 			 , A.BBS_ID
	         , A.BBS_SEQ
	         , A.SEQ
	         , A.ATTACH_FILE_NM
	         , A.ATTACH_FILE_FNM
	         , A.ATTACH_FILE_SUFFIX
	         , F_ENCRYPT(A.ATTACH_FILE_PATH, #encryptionCode#) ATTACH_FILE_PATH 
         FROM BSC_COMMON_BOARD_ATTACH A
        WHERE A.YEAR = #findYear#
          AND A.BBS_ID = #findBbsId#
          AND A.BBS_SEQ = #bbsSeq#
        ORDER BY A.SEQ                                            			                       
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 부진부서 KPI확인 METRIC_ID 획득
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->	
	<select id="getMetricId" parameterClass="hashMap" resultClass="String">		
		SELECT METRIC_ID 
		  FROM BSC_METRIC 
		 WHERE YEAR = #year#
		   AND SC_DEPT_ID = #scDeptId#
		   AND TYPE_ID = '01'
		   AND ROWNUM = 1             
	</select>	
	
	<!--
	==================================================================   
	  # 설명	: 부진부서 KPI확인 METRIC_LIST
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getMetricList" parameterClass="hashMap" resultClass="hashMap">
		SELECT METRIC_ID
			 , METRIC_NM
		  FROM BSC_METRIC 
		 WHERE YEAR = #year#
		   AND SC_DEPT_ID = #scDeptId#
		   AND TYPE_ID = '01'      
		   AND DELETE_DT IS NULL                                      			                       
	</select>	
	
	<!--
	==================================================================   
	  # 설명	: 부진부서 KPI 상세보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="stagnationDetailData" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR
			 , MON
			 , METRIC_ID
			 , SC_DEPT_ID
			 , RESULT_CONTENTS
			 , RESULT_COACH_CONTENTS
			 , INSERT_USER_CONTENTS
		  FROM BSC_STAGNATION
		 WHERE YEAR = #year#
		   AND MON = #mon#
		   AND METRIC_ID = #metricId#
		   AND SC_DEPT_ID = #scDeptId#                                           			                       
	</select>	
	
	<!--
	==================================================================   
	  # 설명	: 사용자 명 가져오기
	  #	기능	: SELECT
	  #	TABLE	: V_ROLE_USER
	==================================================================
	-->
	<select id="getApproveUserNm" parameterClass="hashMap" resultClass="String">
		SELECT USER_NM
		FROM V_ROLE_USER
		WHERE USER_ID=#approveUserId#
		AND BEING_YN='Y'
	</select>	

	<!--
	==================================================================   
	  # 설명	: 부진부서 KPI 신규입력
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->	
	<insert id="insertStagnationData" parameterClass="hashMap">	
        MERGE INTO BSC_STAGNATION A
        USING (SELECT #year# YEAR, #mon# MON, #metricId# METRIC_ID, #scDeptId# SC_DEPT_ID FROM DUAL) B
           ON (A.YEAR = B.YEAR AND A.MON = B.MON AND A.METRIC_ID = B.METRIC_ID AND A.SC_DEPT_ID = B.SC_DEPT_ID)
         WHEN MATCHED THEN 
                UPDATE SET RESULT_CONTENTS = #resultContents#, RESULT_COACH_CONTENTS = #resultCoachContents#, INSERT_USER_CONTENTS =#insertUserContents#, MODIFY_DT = SYSDATE
         WHEN NOT MATCHED THEN
                INSERT (YEAR, MON, METRIC_ID, SC_DEPT_ID, RESULT_CONTENTS, RESULT_COACH_CONTENTS, INSERT_USER_CONTENTS, CREATE_DT)
                VALUES (#year#, #mon#, #metricId#, #scDeptId#, #resultContents#, #resultCoachContents#, #insertUserContents#, SYSDATE)	
	</insert>
	
</sqlMap>


