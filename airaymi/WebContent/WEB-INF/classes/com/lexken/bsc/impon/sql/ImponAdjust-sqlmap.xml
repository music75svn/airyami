<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.impon.imponAdjust">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: BSC_IPE_METRIC_EVAL_RESULT
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 가감점반영 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_IPE_METRIC_EVAL_RESULT
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR,
	           A.METRIC_GRP_ID,
	           B.METRIC_GRP_NM,
	           A.METRIC_ID,
	           A.METRIC_NM,
	           A.SC_DEPT_ID,
	           C.SC_DEPT_NM,
	           D.EVAL_DEGREE_ID,
	           D.EVAL_METRIC_SCORE,
	           D.ADJUST_SCORE,
	           <iterate property="itemArray" conjunction=",">
		     	 E.CODE_$itemArray[]$
		       </iterate>,
	           D.FINAL_METRIC_SCORE
          FROM BSC_METRIC A
          LEFT OUTER JOIN BSC_METRIC_GRP B ON A.YEAR=B.YEAR AND A.METRIC_GRP_ID=B.METRIC_GRP_ID 
          LEFT OUTER JOIN BSC_SC_DEPT C ON A.YEAR=C.YEAR AND A.SC_DEPT_ID=C.SC_DEPT_ID
          LEFT OUTER JOIN BSC_IPE_METRIC_EVAL_RESULT D ON A.YEAR=D.YEAR AND A.METRIC_GRP_ID=D.METRIC_GRP_ID AND A.METRIC_ID=D.METRIC_ID AND D.EVAL_DEGREE_ID=#findEvalDegreeId#
          INNER JOIN (
                            SELECT A.YEAR, 
                                   A.EVAL_DEGREE_ID,
                                   A.METRIC_GRP_ID,
                                   A.METRIC_ID,
                                   <iterate property="itemArray" conjunction=",">
		     		 		       SUM(CASE WHEN EVAL_USER_GRP_GBN_ID = '$itemArray[]$' THEN EVAL_USER_GRP_SCORE ELSE 0 END) AS CODE_$itemArray[]$
		     	  				   </iterate>
                             FROM BSC_IPE_USER_GRP_EVAL_RESULT A
                            WHERE A.YEAR=#findYear#
                              AND A.EVAL_DEGREE_ID=#findEvalDegreeId#
                            GROUP BY A.YEAR, A.EVAL_DEGREE_ID, A.METRIC_GRP_ID, A.METRIC_ID) E ON
                    A.YEAR=E.YEAR AND D.EVAL_DEGREE_ID=E.EVAL_DEGREE_ID AND A.METRIC_GRP_ID=E.METRIC_GRP_ID AND A.METRIC_ID=E.METRIC_ID    
         WHERE A.YEAR=#findYear#
           AND A.TYPE_ID='02'
           AND A.DELETE_DT IS NULL  
           <isNotEmpty property="findMetricGrpId" prepend="AND">
       		A.METRIC_GRP_ID = #findMetricGrpId#
       	   </isNotEmpty> 
         ORDER BY A.METRIC_GRP_ID, A.SC_DEPT_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가항목 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_MAT_ITEM
	==================================================================
	-->
	<select id="getItemList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.CODE_ID, A.CODE_NM, 'CODE_'||A.CODE_ID AS COL_NM 
          FROM BSC_CODE A
         WHERE A.CODE_GRP_ID = '150'
           AND A.DELETE_DT IS NULL
         ORDER BY A.SORT_ORDER
	</select>	
	
	<!--
	==================================================================   
	  # 설명	: 가감점반영 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_IPE_METRIC_EVAL_RESULT
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR                  
			 , EVAL_DEGREE_ID        
			 , METRIC_GRP_ID         
			 , METRIC_ID             
			 , EVAL_METRIC_SCORE     
			 , ADJUST_SCORE          
			 , FINAL_METRIC_SCORE    
		  FROM BSC_IPE_METRIC_EVAL_RESULT 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
		   AND METRIC_GRP_ID = #metricGrpId#
		   AND METRIC_ID = #metricId#	      
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 가감점반영 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_IPE_METRIC_EVAL_RESULT
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		<selectKey resultClass="java.lang.String" keyProperty="SEQ" >
			SELECT F_PGM_SERI('BSC_IPE_METRIC_EVAL_RESULT','','','','','') SEQ FROM DUAL
		</selectKey>
		INSERT INTO BSC_IPE_METRIC_EVAL_RESULT ( 
			   YEAR
			 , EVAL_DEGREE_ID
			 , METRIC_GRP_ID
			 , METRIC_ID
			 , EVAL_METRIC_SCORE
			 , ADJUST_SCORE
			 , FINAL_METRIC_SCORE
			 , CREATE_DT
			 ) VALUES ( 
			   #year#
			 , #SEQ#
			 , #metricGrpId#
			 , #metricId#
			 , #evalMetricScore#
			 , #adjustScore#
			 , #finalMetricScore#
			 , SYSDATE
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 가감점반영 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_IPE_METRIC_EVAL_RESULT
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE BSC_IPE_METRIC_EVAL_RESULT 
		   SET ADJUST_SCORE           = #adjustScore# 
		 	 , FINAL_METRIC_SCORE     = EVAL_METRIC_SCORE+#adjustScore1# 
		 WHERE YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
		   AND METRIC_GRP_ID = #metricGrpId#
		   AND METRIC_ID = #metricId#		
	</update>	
	

	<!--
	==================================================================   
	  # 설명	: 가감점반영 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_IPE_METRIC_EVAL_RESULT
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM BSC_IPE_METRIC_EVAL_RESULT 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
		   AND METRIC_GRP_ID = #metricGrpId#
		   AND METRIC_ID = #metricId#
	</update>
	
	
	
	<!--
	==================================================================   
	  # 설명	: 평가진행현황 등록
	  #	기능	: INSERT
	  #	TABLE	: 
	==================================================================
	-->	
	<insert id="setEvalConfirmData" parameterClass="hashMap">
		MERGE INTO BSC_IPE_EVAL_CLOSING EC
		USING (SELECT #year# AS YEAR, #evalDegreeId# AS EVAL_DEGREE_ID, #imponEvalConfirmYn# AS IMPON_EVAL_CONFIRM_YN FROM DUAL ) IEC
		   ON (EC.YEAR = IEC.YEAR
		  AND EC.EVAL_DEGREE_ID = IEC.EVAL_DEGREE_ID)
		WHEN MATCHED THEN
		     UPDATE SET EC.IMPON_EVAL_CONFIRM_YN = IEC.IMPON_EVAL_CONFIRM_YN
		              , EC.MODIFY_DT = SYSDATE
		WHEN NOT MATCHED THEN     
		     INSERT (EC.YEAR, EC.EVAL_DEGREE_ID, EC.IMPON_EVAL_CONFIRM_YN, EC.CREATE_DT)
		     VALUES (IEC.YEAR, IEC.EVAL_DEGREE_ID, IEC.IMPON_EVAL_CONFIRM_YN, SYSDATE)
	</insert>	
	
	
	<!--
	==================================================================   
	  # 설명	: 비계량 평가 최종지표점수 실적테이블 반영
	  #	기능	: SETTING
	  #	TABLE	: BSC_ACTUAL
	==================================================================
	-->		
	<parameterMap id="imponScoreParamMap" class="java.util.HashMap">
		<parameter property="year" 		    jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>	
		<parameter property="evalDegreeId" jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>
	</parameterMap>			
	
	<!--
	==================================================================   
	  # 설명	: 비계량 평가 최종지표점수 실적테이블 반영
	  #	기능	: PROCEDURES
	  #	TABLE	: BSC_ACTUAL
	==================================================================
	-->		
	<procedure id="execEvalResultRefl" parameterMap="imponScoreParamMap">  
		{CALL SP_BSC_IPE_SCORE_REFL(?, ?)}
	</procedure>	
	
</sqlMap>


