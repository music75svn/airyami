<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.org.orgDeptPrsScore">

	<!--
	==================================================================
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	:
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />

	<!--
	==================================================================
	  # 설명	: 개인별 조직관리역량평가 결과 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: ORG_DEPT_SCORE
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR, A.EMPN, A.KOR_NM, A.CAST_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '170' AND CODE_ID = A.CAST_TC) CAST_TC_NM
		     , A.DEPT_CD, F_DEPT_FULL_NM(#findYear#, A.DEPT_CD, 'BSC_INSA_DEPT') DEPT_NM
		     , A.POS_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '171' AND CODE_ID = A.POS_TC) POS_TC_NM
		     , A.CUR_CAST_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '170' AND CODE_ID = A.CUR_CAST_TC) CUR_CAST_TC_NM
		     , A.CUR_DEPT_CD, F_DEPT_FULL_NM(#findYear#, A.CUR_DEPT_CD, 'V_DEPTINFO') CUR_DEPT_NM
		     , A.CUR_POS_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '171' AND CODE_ID = A.CUR_POS_TC) CUR_POS_TC_NM
             , TRIM(TO_CHAR(A.BSC_TOTAL_SCORE, '990.999')) BSC_TOTAL_SCORE
             , TRIM(TO_CHAR(A.PRS_TOTAL_SCORE, '990.999')) PRS_TOTAL_SCORE
             , TRIM(TO_CHAR(A.ORG_TOTAL_SCORE, '990.999')) ORG_TOTAL_SCORE
             , TRIM(TO_CHAR(A.TOTAL_SCORE, '990.999')) TOTAL_SCORE
             , A.RANKING
             , B.GRADE
             , B.SCORE
             , A.PROMO_YN
		  FROM PRS_MNG_EVAL_FINAL_RESULT A
		       LEFT OUTER JOIN ORG_DEPT_SCORE B
		            ON A.DEPT_CD = B.DEPT_CD 
		 WHERE A.YEAR = #findYear#
		   AND A.KOR_NM LIKE '%' || #findKorNm# || '%'
		 ORDER BY A.KOR_NM
	</select>

	<!--
	==================================================================
	  # 설명	: 개인별 조직관리역량평가 등록
	  #	기능	: INSERT
	  #	TABLE	: ORG_DEPT_SCORE
	==================================================================
	-->
	<insert id="insertData" parameterClass="hashMap">
		MERGE INTO ORG_DEPT_SCORE AA
		     USING (SELECT #year# AS YEAR
        		         , #deptCd# AS DEPT_CD
                 		 , UPPER(#grade#) AS GRADE
                 		 , #score# AS SCORE
              		FROM DUAL) BB
		        ON (AA.YEAR = BB.YEAR
        		AND AA.DEPT_CD = BB.DEPT_CD)
		WHEN MATCHED
		THEN
		   UPDATE SET AA.GRADE = BB.GRADE, AA.SCORE = BB.SCORE, AA.CREATE_DT = SYSDATE
		WHEN NOT MATCHED
		THEN
		   INSERT     (YEAR
		             , DEPT_CD
             		 , GRADE
		             , SCORE
		             , CREATE_DT)
		       VALUES (BB.YEAR
        		     , BB.DEPT_CD
		             , BB.GRADE
		             , BB.SCORE
		             , SYSDATE)
	</insert>
	
</sqlMap>


