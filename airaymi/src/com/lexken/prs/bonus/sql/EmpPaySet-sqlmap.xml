<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.bonus.empPaySet">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	
	
	<!--
	==================================================================
	  # 설명	: 파견직설정 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BON_DIS_SET
	==================================================================
	-->
	<select id="getConfirm" parameterClass="hashMap" resultClass="hashMap">
		SELECT TO_CHAR(S.CONFIRM_DT,'YYYY.MM.DD HH24:MI:SS') CONFIRM_DT
          FROM BON_SET S
		 WHERE S.YEAR = #findYear#
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 최상위 평가조직 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getTopDeptInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR
				, DEPT_CD
       			, DEPT_KOR_NM
    	 FROM ( SELECT YEAR, DEPT_CD, DEPT_KOR_NM FROM BSC_INSA_DEPT WHERE YEAR = #findYear# ORDER BY DISP_ORDER, DEPT_CD )
		 WHERE DEPT_CD = '0000'
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 인사조직 왼쪽트리목록 보기(미사용은 제외)
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getDeptList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR, DEPT_CD, DEPT_KOR_NM, UP_DEPT_CD, UP_USER_ID, USE_YN, DEPT_LEVL, DISP_ORDER, DEPT_GRADE, DEPT_SCORE
		  FROM BSC_INSA_DEPT
		 WHERE YEAR = #findYear#
		   AND ( USE_YN = 'T' OR DEPT_CD = '0000' )
		   AND DEPT_CD  NOT BETWEEN '1005' AND '1030' 
     	   AND DEPT_CD  NOT IN '1090' 
		 ORDER BY DISP_ORDER, DEPT_CD       
		 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 직원정보 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT	 A.YEAR
		       , A.EMPN
		       , A.KOR_NM
		       , A.DEPT_CD
		       , B.DEPT_KOR_NM
		       ,    (SELECT DEPT_KOR_NM
		               FROM BSC_INSA_DEPT
		              WHERE YEAR = A.YEAR
		                AND DEPT_CD = (SELECT UP_DEPT_CD
		                                 FROM BSC_INSA_DEPT
		                                WHERE YEAR = A.YEAR
		                                  AND DEPT_CD = A.DEPT_CD))
		         || ' '
		         || (SELECT DEPT_KOR_NM
		               FROM BSC_INSA_DEPT
		              WHERE YEAR = A.YEAR
		                AND DEPT_CD = A.DEPT_CD)
		            DEPT_FULL_NM
		       , C.CODE_NM CAST_TC_NM
		       , C.CODE_ID CAST_TC
		       , D.CODE_NM POS_TC_NM
		       , D.CODE_ID POS_TC
		       , A.EMPM_KIND_TC
		       , CASE WHEN ( SELECT SUM (WORK_MON)
              					FROM BON_EMP_SET
							   WHERE A.YEAR = YEAR AND A.EMPN = EMPN
          					GROUP BY YEAR, EMPN) IS NULL
          			  THEN ( SELECT SUM (WORK_MON)
							   FROM BSC_INSA_PCMT
							  WHERE A.YEAR = YEAR AND A.EMPN = EMPN
						   GROUP BY YEAR, EMPN)
					  ELSE ( SELECT SUM (WORK_MON)
							   FROM BON_EMP_SET
							  WHERE A.YEAR = YEAR AND A.EMPN = EMPN
						   GROUP BY YEAR, EMPN)
				END TOT_MON
		        , TO_CHAR(NVL(E.PAY, '')) PAY
        	FROM BSC_INSA A
		         LEFT OUTER JOIN BSC_INSA_DEPT B
		            ON A.YEAR = B.YEAR
		           AND A.DEPT_CD = B.DEPT_CD
		         LEFT OUTER JOIN BSC_CODE C
		            ON C.CODE_GRP_ID = '170'
		           AND C.CODE_ID = A.CAST_TC
		           AND C.YEAR = #findYear#
		         LEFT OUTER JOIN BSC_CODE D
		            ON D.CODE_GRP_ID = '171'
		           AND D.CODE_ID = A.POS_TC
		           AND D.YEAR = #findYear#
		         LEFT OUTER JOIN BON_EMP_PAY_SET E
            		ON A.YEAR = E.YEAR
          		   AND A.EMPN = E.EMPN
          		 LEFT OUTER JOIN BON_EMP_SET F
		            ON A.YEAR = F.YEAR
		           AND A.EMPN = F.EMPN
		   WHERE A.YEAR = #findYear#
		     AND A.CAST_TC NOT IN '00'
		     AND A.DEPT_CD IN (    SELECT DEPT_CD
		                             FROM BSC_INSA_DEPT
		                            WHERE YEAR = #findYear#
		                       START WITH DEPT_CD = #findDeptCd#
		                       CONNECT BY PRIOR YEAR = YEAR
		                              AND PRIOR DEPT_CD = UP_DEPT_CD)
		GROUP BY A.YEAR
		       , A.EMPN
		       , A.KOR_NM
		       , A.DEPT_CD
		       , B.DEPT_KOR_NM
		       , B.UP_DEPT_CD
		       , C.CODE_NM
		       , C.CODE_ID
		       , D.CODE_NM
		       , D.CODE_ID
		       , A.EMPM_KIND_TC
		       , E.PAY
        ORDER BY C.CODE_ID, A.DEPT_CD, A.EMPN
	
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 개인급여 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.EMPN
			 , A.SEQ
		     , B.KOR_NM
		     , C.DEPT_CD
		     , C.DEPT_KOR_NM
		     , A.PCMT_TC
		     , D.CODE_NM AS PCMT_TC_NM
		     , A.CAST_TC
		     , E.CODE_NM AS CAST_TC_NM
		     , A.POS_TC
		     , F.CODE_NM AS POS_TC_NM
		     , A.WORK_MON
		     , A.TOT_MON
		     , TO_CHAR(NVL(G.PAY, '')) PAY
		     , A.CONTENT
		     , H.START_PCMT_DATE
     		 , H.END_PCMT_DATE
		     , COUNT (*) OVER (PARTITION BY A.YEAR, a.EMPN) PAY_CNT
     		 , ROW_NUMBER () OVER (PARTITION BY A.YEAR, A.EMPN ORDER BY A.YEAR, A.SEQ) PAY_INDEX
		  FROM BON_EMP_SET A
		       LEFT OUTER JOIN BSC_INSA B
		          ON A.EMPN = B.EMPN
		         AND A.YEAR = B.YEAR
		       LEFT OUTER JOIN BSC_INSA_DEPT C
		          ON A.DEPT_CD = C.DEPT_CD
		         AND A.YEAR = C.YEAR
		       LEFT OUTER JOIN BSC_CODE D
		          ON A.PCMT_TC = D.CODE_ID
		         AND D.CODE_GRP_ID = '169'
		         AND A.YEAR = D.YEAR
		       LEFT OUTER JOIN BSC_CODE E
		          ON A.CAST_TC = E.CODE_ID
		         AND E.CODE_GRP_ID = '170'
		         AND A.YEAR = E.YEAR
		       LEFT OUTER JOIN BSC_CODE F
		          ON A.POS_TC = F.CODE_ID
		         AND F.CODE_GRP_ID = '171'
		         AND A.YEAR = F.YEAR
		       LEFT OUTER JOIN BON_EMP_PAY_SET G
		          ON A.YEAR = G.YEAR
		         AND A.EMPN = G.EMPN
		       INNER JOIN V_BSC_INSA_PCMT H
		       	  ON A.SEQ = H.SEQ
				 AND A.YEAR = H.YEAR
				 AND A.EMPN = H.EMPN
		 WHERE A.YEAR = #findYear#
		   AND A.EMPN = #findEmpn#
		         
	</select>
	
	<!--
    ==================================================================
      # 설명  : 직원급여 등록 
      # 기능  : INSERT
      # TABLE : BON_EMP_PAY_SET
    ==================================================================
    -->
	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO BON_EMP_SET (SEQ
                       , YEAR
                       , EMPN
                       , PCMT_TC
                       , DEPT_CD
                       , CAST_TC
                       , POS_TC
                       , WORK_MON
                       , TOT_MON
                       , CREATE_DT)
			   SELECT    SEQ
			           , YEAR
			           , EMPN
			           , PCMT_TC
			           , DEPT_CD
			           , CAST_TC
			           , POS_TC
			           , WORK_MON
			           , TOT_MON
			           , SYSDATE
			     FROM V_BSC_INSA_PCMT
			     WHERE YEAR = #findYear#
			     AND EMPN = #empn#
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 직원급여 수정
	  #	기능	: UPDATE
	  #	TABLE	: BON_EMP_SET
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE BON_EMP_SET 
		   SET WORK_MON          = #workMon# 
			 , CONTENT           = #content# 
			 , MODIFY_DT         = SYSDATE 
		 WHERE YEAR 			 = #year#
		   AND SEQ 				 = #seq#
		   AND empn 			 = #empn#		
	</update>
		
	<!--
	==================================================================   
	  # 설명	: 직원급여 수정
	  #	기능	: UPDATE
	  #	TABLE	: BON_EMP_SET
	==================================================================
	-->	
	<update id="updatePayData" parameterClass="hashMap">
		UPDATE BON_EMP_PAY_SET 
		   SET PAY  	         = TO_NUMBER(REPLACE(#pay#,',',''))
		 WHERE YEAR 			 = #year#
		   AND empn 			 = #empn#		
	</update>	
	
	<!--
    ==================================================================
      # 설명  : 업로드직원급여 등록 
      # 기능  : INSERT
      # TABLE : BON_EMP_PAY_SET
    ==================================================================
    -->
	<insert id="insertPayData" parameterClass="hashMap">
		
		INSERT INTO BON_EMP_PAY_SET ( 
								   YEAR
								 , EMPN
								 , PAY
								 , CREATE_DT
                     			  )
			 VALUES (			             
			 					  #findYear#
								, #empn#
								, #pay#
								, sysdate
            		)
	</insert>
    
	<!--
	==================================================================   
	  # 설명	: 직원급여 엑셀다운로드
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_PCMT
	==================================================================
	-->
	<select id="getPayExcelList" parameterClass="hashMap" resultClass="hashMap">
		   SELECT    A.YEAR
			       , A.EMPN
			       , A.KOR_NM
			       , A.DEPT_CD
			       , B.DEPT_KOR_NM
			       , A.CAST_TC
			       , D.CODE_NM AS CAST_TC_NM
			       , A.POS_TC
			       , E.CODE_NM AS POS_TC_NM
			       , E.CODE_NM AS POS_TC_NM
			       , C.PAY
			    FROM BSC_INSA A
			         LEFT OUTER JOIN BSC_INSA_DEPT B
			            ON A.YEAR = B.YEAR
			           AND A.DEPT_CD = B.DEPT_CD
			         LEFT OUTER JOIN BON_EMP_PAY_SET C
			            ON A.YEAR = C.YEAR
			           AND A.EMPN = C.EMPN
			         LEFT OUTER JOIN BSC_CODE D
			            ON A.YEAR = D.YEAR
			           AND D.CODE_GRP_ID = '170'
			           AND A.CAST_TC = D.CODE_ID
			         LEFT OUTER JOIN BSC_CODE E
			            ON A.YEAR = E.YEAR
			           AND E.CODE_GRP_ID = '171'
			           AND A.POS_TC = E.CODE_ID
			   WHERE A.YEAR = #findYear#
			     AND A.CAST_TC NOT IN '00'
			ORDER BY D.CODE_ID, A.DEPT_CD, A.EMPN
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 직원급여 총근무월수
	  #	기능	: UPDATE
	  #	TABLE	: BON_EMP_SET
	==================================================================
	-->	
	<update id="insertTotMonData" parameterClass="hashMap">
		UPDATE BON_EMP_SET
	   	   SET TOT_MON = (SELECT SUM (WORK_MON) FROM BON_EMP_SET WHERE EMPN = #empn# AND YEAR = #findYear#)
		 WHERE EMPN = #empn#
		   AND YEAR = #findYear#		
	</update>
	
	<!--
    ==================================================================
      # 설명    : 직원급여 삭제
      # 기능    : DELETE
      # TABLE   : BON_EMP_SET
    ==================================================================
    -->
    <delete id="deleteData" parameterClass="hashMap">
        DELETE FROM BON_EMP_SET
         WHERE YEAR				= #findYear#
		   
    </delete>
    
	<!--
    ==================================================================
      # 설명    : 업로드직원급여 삭제
      # 기능    : DELETE
      # TABLE   : BON_EMP_PAY_SET
    ==================================================================
    -->
    <delete id="deletePayData" parameterClass="hashMap">
        DELETE FROM BON_EMP_PAY_SET
         WHERE YEAR				= #findYear#
		   
    </delete>
	
</sqlMap>