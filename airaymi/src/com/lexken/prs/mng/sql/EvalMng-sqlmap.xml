<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.mng.evalMng">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: PRS_EVAL_GRP
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 
	<!--
	==================================================================   
	  # 설명	: 최상위 평가조직 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getTopDeptInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR
			 , DEPT_CD
			 , DEPT_KOR_NM
		  FROM ( SELECT YEAR, DEPT_CD, DEPT_KOR_NM FROM BSC_INSA_DEPT WHERE YEAR = #findYear# ORDER BY DISP_ORDER, DEPT_CD )
		WHERE DEPT_CD = '0000'
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 인사조직 왼쪽트리목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getDeptList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR
			 , DEPT_CD
			 , DEPT_KOR_NM
			 , UP_DEPT_CD
			 , UP_USER_ID
			 , USE_YN
			 , DEPT_LEVL
			 , DISP_ORDER
		  FROM BSC_INSA_DEPT
		 WHERE YEAR = #findYear#
		   AND ( DEPT_CD > '1025' 
		   		OR DEPT_CD = '0000'
   		   		OR DEPT_CD = '1000' )
<![CDATA[
   		   AND DEPT_CD <> '1090'
]]>	
		  <!--   AND DEPT_CD = #findDeptCd#   		-->
		 ORDER BY DEPT_CD, DISP_ORDER      
		 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가대상자 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: PRS_MNG_MEMBER
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
			 , A.EVAL_MEMB_EMPN
	         , A.EVAL_MEMB_EMPN_SEQ
			 , A.KOR_NM
			 , A.DEPT_CD
			 , D.DEPT_KOR_NM
	         , F_DEPT_FULL_NM(A.YEAR, A.DEPT_CD, 'BSC_INSA_DEPT') AS DEPT_FULL_NM
			 , A.CAST_TC
			 , B.CODE_NM AS CAST_TC_NM
			 , A.POS_TC
			 , C.CODE_NM AS POS_TC_NM
			 , A.EVAL_YN
			 , A.PRS_YN
			 , A.ORG_YN
	         , A.EVAL_GRP_ID
	         , A.EVAL_GRP_NM
	         , A.ASSESSOR_GRP_ID, A.ASSESSOR_GRP_NM
	         , A.MANAGER_USER_ID
	         , (SELECT KOR_NM FROM BSC_INSA WHERE A.YEAR = YEAR AND A.MANAGER_USER_ID = EMPN) AS MANAGER_USER_NM
	         , A.FROM_DT, A.TO_DT
          FROM V_PRS_MNG_MEMBER A
          LEFT OUTER JOIN BSC_CODE B
                       ON A.YEAR = B.YEAR
                      AND B.CODE_GRP_ID = '170'
                      AND B.CODE_ID = A.CAST_TC
          LEFT OUTER JOIN BSC_CODE C
                       ON A.YEAR = C.YEAR
                      AND C.CODE_GRP_ID = '171'
                      AND C.CODE_ID = A.POS_TC
		  LEFT OUTER JOIN BSC_INSA_DEPT D
            		   ON A.YEAR = D.YEAR
          AND A.DEPT_CD = D.DEPT_CD
          WHERE A.YEAR=#findYear#
	       <isNotEqual prepend="AND" property="findDeptCd" compareValue="0000">
               A.DEPT_CD IN (SELECT DEPT_CD
							   FROM BSC_INSA_DEPT
							  WHERE YEAR = #findYear#
						 START WITH DEPT_CD = #findDeptCd#
				   CONNECT BY PRIOR YEAR = YEAR
								AND PRIOR DEPT_CD = UP_DEPT_CD)
            </isNotEqual>
			<isNotEmpty prepend="AND" property="findKorNm">
	            UPPER(A.KOR_NM) LIKE  '%' || TRIM(UPPER(#findKorNm#)) ||'%'
		   	</isNotEmpty>
		   	<isNotEmpty prepend="AND" property="findCastTc">
		   		CAST_TC = #findCastTc#
		   	</isNotEmpty>
		   	<isNotEmpty prepend="AND" property="findEvalGrpId">
                EVAL_GRP_ID = #findEvalGrpId#
            </isNotEmpty>
          ORDER BY A.KOR_NM, A.EVAL_MEMB_EMPN, A.EVAL_MEMB_EMPN_SEQ
	</select>
	
	<!--
    ==================================================================   
      # 설명  : 평가대상자 상세보기
      # 기능  : SELECT
      # TABLE   : PRS_MNG_MEMBER
    ==================================================================
    -->
    <select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
        SELECT A.YEAR
             , A.EVAL_MEMB_EMPN
             , A.EVAL_MEMB_EMPN_SEQ
             , A.KOR_NM
             , A.DEPT_CD
             , (SELECT DEPT_KOR_NM FROM BSC_INSA_DEPT WHERE A.YEAR = YEAR AND A.DEPT_CD = DEPT_CD) AS DEPT_NM
             , F_DEPT_FULL_NM(A.YEAR, A.DEPT_CD, 'BSC_INSA_DEPT') AS DEPT_FULL_NM
             , A.CAST_TC
             , A.POS_TC
             , A.EVAL_YN
             , A.PRS_YN
             , A.ORG_YN
             , A.PROMO_YN
             , A.EVAL_GRP_ID
             , A.ASSESSOR_GRP_ID
             , A.MANAGER_USER_ID
             , (SELECT KOR_NM FROM BSC_INSA WHERE A.YEAR = YEAR AND A.MANAGER_USER_ID = EMPN) AS MANAGER_USER_NM
             , A.FROM_DT
             , A.TO_DT
             , A.CREATE_ID
             , A.CREATE_DT
             , A.MODIFY_ID
             , A.MODIFY_DT
          FROM PRS_MNG_MEMBER A
         WHERE A.YEAR = #year#
           AND A.EVAL_MEMB_EMPN = #evalMembEmpn#
           AND A.EVAL_MEMB_EMPN_SEQ = #evalMembEmpnSeq#
    </select>
    
    <!--
    ==================================================================
      # 설명    : 평가군
      #    기능    : SELECT
      #    TABLE    :
    ==================================================================
    -->
    <select id="getEvalGrpList" parameterClass="hashMap" resultClass="hashMap">
        SELECT
              EVAL_GRP_ID
            , EVAL_GRP_NM
        FROM PRS_EVAL_GRP
        WHERE YEAR = #findYear#
          AND EVAL_TYPE IN ('01', '02', '03', '04')
        ORDER BY SORT_ORDER
    </select>
    
    <!--
    ==================================================================
      # 설명    : 평가대상자 입력
      # 기능    : INSERT
      # TABLE   : PRS_MNG_MEMBER
    ==================================================================
    -->
    <insert id="insertData" parameterClass="hashMap">
        <selectKey resultClass="java.lang.String" keyProperty="evalMembEmpnSeq" >
            SELECT NVL(MAX(EVAL_MEMB_EMPN_SEQ),0) + 1 
            FROM PRS_MNG_MEMBER
            WHERE YEAR = #year#
            AND EVAL_MEMB_EMPN = #evalMembEmpn#
        </selectKey>
        INSERT INTO PRS_MNG_MEMBER
        (YEAR, EVAL_MEMB_EMPN, EVAL_MEMB_EMPN_SEQ, KOR_NM
        , DEPT_CD, CAST_TC, POS_TC
        , EVAL_YN, PRS_YN, ORG_YN, PROMO_YN
        , EVAL_GRP_ID, ASSESSOR_GRP_ID, MANAGER_USER_ID, FROM_DT, TO_DT
        , CREATE_ID, CREATE_DT, MODIFY_ID, MODIFY_DT)
        VALUES
        (#year#,#evalMembEmpn#,#evalMembEmpnSeq#,#korNm#
        ,#deptCd#,#castTc#,#posTc#
        ,#evalYn#,#prsYn#,#orgYn#,#promoYn#
        ,#evalGrpId#,#assessorGrpId#,#managerUserId#,#fromDt#,#toDt#
        ,#loginUserId#,SYSDATE,#loginUserId#,SYSDATE)
         
    </insert>
    
    <!--
    ==================================================================   
      # 설명  : 평가대상자 수정
      # 기능  : UPDATE
      # TABLE   : PRS_MNG_MEMBER
    ==================================================================
    --> 
    <update id="updateData" parameterClass="hashMap">
        UPDATE PRS_MNG_MEMBER
           SET EVAL_YN = #evalYn#
             , PRS_YN = #prsYn#
             , ORG_YN = #orgYn#
             , MODIFY_ID = #loginUserId#
             , MODIFY_DT = SYSDATE
             , DEPT_CD = #deptCd#
             , CAST_TC = #castTc#
             , POS_TC = #posTc#
             , EVAL_GRP_ID = #evalGrpId#
             , ASSESSOR_GRP_ID = #assessorGrpId#
             , MANAGER_USER_ID = #managerUserId#
             , FROM_DT = #fromDt#
             , TO_DT = #toDt#
         WHERE YEAR = #year#
           AND EVAL_MEMB_EMPN = #evalMembEmpn#
           AND EVAL_MEMB_EMPN_SEQ = #evalMembEmpnSeq#
    </update>
	
	<!--
    ==================================================================
      # 설명    : 평가대상자 삭제
      # 기능    : DELETE
      # TABLE   : PRS_MNG_MEMBER
    ==================================================================
    -->
    <delete id="deleteEvalMngInfo" parameterClass="hashMap">
        DELETE FROM PRS_MNG_MEMBER WHERE YEAR = #findYear#
         
    </delete>
    
	<!--
    ==================================================================
      # 설명    : 평가군별 대상자매핑 데이터 삭제
      # 기능    : DELETE
      # TABLE   : PRS_MNG_MEMBER
    ==================================================================
    -->
    <delete id="deleteEvalMngGrpInfo" parameterClass="hashMap">
        DELETE FROM PRS_MNG_EVAL_GRP_MEMBER WHERE YEAR = #findYear# 
         
    </delete>
    
    <!--
	==================================================================   
	  # 설명	: 간부평가 대상자 입력(불러오기용)
	  #	기능	: INSERT
	  #	TABLE	: PRS_MNG_MEMBER
	==================================================================
	-->	
	<insert id="insertEvalMngInfo" parameterClass="hashMap">
<![CDATA[
		INSERT INTO PRS_MNG_MEMBER
					SELECT #findYear#, EMPN, KOR_NM, DEPT_CD, CAST_TC, POS_TC, EVAL_YN, PRS_YN, ORG_YN, PROMO_YN
  					  FROM ( SELECT B.EMPN
                                  , B.KOR_NM
                                  , B.DEPT_CD
                                  , B.CAST_TC
                                  , B.POS_TC
                                  , DECODE (D.EVAL_TYPE, NULL, 'Y', '01', 'N', 'Y') EVAL_YN
       							  , DECODE (D.EVAL_TYPE, NULL, 'Y', '01', 'N', (DECODE(PRS_RATE, NULL, 'N', 'Y'))) PRS_YN
       							  , DECODE (D.EVAL_TYPE, NULL, 'Y', '01', 'N', (DECODE(ORG_RATE, NULL, 'N', 'Y'))) ORG_YN
                                  , DECODE (E.EMPN, NULL, 'N', 'Y') PROMO_YN
                               FROM BSC_CODE A, BSC_INSA B
					LEFT OUTER JOIN PRS_EXC_GRP_MEMBER C
								 ON B.YEAR = C.YEAR 
								AND B.EMPN = C.EMPN
					LEFT OUTER JOIN PRS_EXC_GRP D
								 ON C.YEAR = D.YEAR
								AND C.EXC_GRP_ID = D.EXC_GRP_ID
                    LEFT OUTER JOIN (
                                        SELECT DISTINCT EMPN
                                          FROM V_PRS_RE_MON
                                         WHERE EMPN IN (SELECT DISTINCT EMPN FROM BSC_INSA_PCMT WHERE YEAR = #findYear# AND PCMT_TC = '41' AND CAST_TC BETWEEN '10' AND '30')
                                         GROUP BY EMPN, CAST_TC
                                        HAVING SUM(WORK_MON) > 0 AND SUM(WORK_MON) < 12
                                    ) E
                                 ON B.EMPN = E.EMPN
                              WHERE A.YEAR = #findYear#
                                AND A.CODE_GRP_ID = '170'
                                AND A.CODE_ID > '00' AND A.CODE_ID <='30'
                                AND A.CODE_ID = B.CAST_TC
                                AND A.YEAR = B.YEAR
                           ORDER BY A.SORT_ORDER
       						)
]]> 					 
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 평가군별 평가대상자 1급 본부장/처실장 데이터넣기
	  #	기능	: INSERT
	  #	TABLE	: PRS_MNG_EVAL_GRP_MEMBER
	==================================================================
	-->	
	<insert id="insertEvalMngFirstInfo" parameterClass="hashMap">
		INSERT INTO PRS_MNG_EVAL_GRP_MEMBER(
			 SELECT A.YEAR, B.EVAL_GRP_ID, A.EMPN, 'N', A.PROMO_YN
			   FROM PRS_MNG_MEMBER A
			   	  , PRS_EVAL_GRP B
			  WHERE A.YEAR = #findYear#
				AND A.CAST_TC = '10'
				AND A.YEAR= B.YEAR
				AND B.EVAL_TYPE = '01'
				AND A.EVAL_YN = 'Y' AND A.PRS_YN = 'Y')
					 
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 평가군별 평가대상자 2급 지사장 데이터넣기
	  			  1급간부 승진자가 있으면 평가군에 포함해야 함
	  #	기능	: INSERT
	  #	TABLE	: PRS_MNG_EVAL_GRP_MEMBER
	==================================================================
	-->	
	<insert id="insertEvalMngSecondInfo" parameterClass="hashMap">
		INSERT INTO PRS_MNG_EVAL_GRP_MEMBER (
             SELECT A.YEAR, B.EVAL_GRP_ID, A.EMPN, 'N', A.PROMO_YN
               FROM (
                     SELECT A.YEAR, A.EMPN, A.PROMO_YN
                       FROM PRS_MNG_MEMBER A
                      WHERE A.YEAR = #findYear#
                        AND A.CAST_TC = '20' AND A.POS_TC IN ('21', '23', '24', '2A', '2C')
                        AND A.EVAL_YN = 'Y' AND A.PRS_YN = 'Y'
                      UNION ALL
                     SELECT YEAR, EMPN, 'Y'
                       FROM BSC_INSA_PCMT
                      WHERE (YEAR, EMPN) IN (
                                        SELECT YEAR, EMPN
                                          FROM PRS_MNG_MEMBER A
                                         WHERE A.YEAR = #findYear#
                                           AND A.CAST_TC = '10'
                                           AND A.EVAL_YN = 'Y' AND A.PRS_YN = 'Y' AND PROMO_YN = 'Y'
                                    )
                        AND CAST_TC = '20' AND POS_TC IN ('21', '23', '24', '2A', '2C') AND WORK_MON > 0 
                    ) A
                  , PRS_EVAL_GRP B                         
               WHERE A.YEAR= B.YEAR
                 AND B.EVAL_TYPE = '02' )
					 
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 평가군별 평가대상자 2급 부장 데이터넣기
	  			  1급간부 승진자가 있으면 평가군에 포함해야 함
	  #	기능	: INSERT
	  #	TABLE	: PRS_MNG_EVAL_GRP_MEMBER
	==================================================================
	-->	
	<insert id="insertEvalMngSecond1Info" parameterClass="hashMap">
		INSERT INTO PRS_MNG_EVAL_GRP_MEMBER (
             SELECT A.YEAR, B.EVAL_GRP_ID, A.EMPN, 'N', A.PROMO_YN
               FROM (
                     SELECT A.YEAR, A.EMPN, A.PROMO_YN
                       FROM PRS_MNG_MEMBER A
                      WHERE A.YEAR = #findYear#
                        AND A.CAST_TC = '20' AND A.POS_TC NOT IN ('21', '23', '24', '2A', '2C')
                        AND A.EVAL_YN = 'Y' AND A.PRS_YN = 'Y'
                      UNION ALL
                     SELECT YEAR, EMPN, 'Y'
                       FROM BSC_INSA_PCMT
                      WHERE (YEAR, EMPN) IN (
                                        SELECT YEAR, EMPN
                                          FROM PRS_MNG_MEMBER A
                                         WHERE A.YEAR = #findYear#
                                           AND A.CAST_TC = '10'
                                           AND A.EVAL_YN = 'Y' AND A.PRS_YN = 'Y' AND PROMO_YN = 'Y'
                                    )
                        AND CAST_TC = '20' AND POS_TC NOT IN ('21', '23', '24', '2A', '2C') AND WORK_MON > 0 
                    ) A
                  , PRS_EVAL_GRP B                         
               WHERE A.YEAR= B.YEAR
                 AND B.EVAL_TYPE = '03'  ) 
					 
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 평가군별 평가대상자 3급 부장 데이터넣기
	  			  2급간부 승진자가 있으면 평가군에 포함해야 함
	  #	기능	: INSERT
	  #	TABLE	: PRS_MNG_EVAL_GRP_MEMBER
	==================================================================
	-->	
	<insert id="insertEvalMngthirdInfo" parameterClass="hashMap">
<![CDATA[	
	  INSERT INTO PRS_MNG_EVAL_GRP_MEMBER (
             SELECT A.YEAR, B.EVAL_GRP_ID, A.EMPN, 'N', A.PROMO_YN
               FROM (
                     SELECT A.YEAR, A.EMPN, A.PROMO_YN
                       FROM PRS_MNG_MEMBER A
                      WHERE A.YEAR = #findYear#
                        AND A.CAST_TC = '30'
                        AND A.EVAL_YN = 'Y' AND A.PRS_YN = 'Y'
                      UNION ALL
                     SELECT YEAR, EMPN, 'Y'
                       FROM BSC_INSA_PCMT
                      WHERE (YEAR, EMPN) IN (
                                        SELECT YEAR, EMPN
                                          FROM PRS_MNG_MEMBER A
                                         WHERE A.YEAR = #findYear#
                                           AND A.CAST_TC = '20'
                                           AND A.EVAL_YN = 'Y' AND A.PRS_YN = 'Y' AND PROMO_YN = 'Y'
                                    )
                        AND CAST_TC = '30' AND WORK_MON > 0
                    ) A
                  , PRS_EVAL_GRP B                         
              WHERE A.YEAR= B.YEAR
                AND B.EVAL_TYPE = '04' )
]]> 
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 평가대상자 선정 수정
	  #	기능	: UPDATE
	  #	TABLE	: PRS_MNG_MEMBER
	==================================================================
	-->	
	<update id="updateEvalMngData" parameterClass="hashMap">
		UPDATE PRS_MNG_MEMBER
	   	   SET EVAL_YN = #evalYn#
			 , PRS_YN = #prsYn#
			 , ORG_YN = #orgYn#
	         , MODIFY_ID = #loginUserId#
	         , MODIFY_DT = SYSDATE
		 WHERE YEAR = #findYear#
		   AND EVAL_MEMB_EMPN = #evalMembEmpn#
	       AND EVAL_MEMB_EMPN_SEQ = #evalMembEmpnSeq#
	</update>
		
	<!--
	==================================================================   
	  # 설명	: 평가군 대상자 선정 삭제
	  #	기능	: UPDATE
	  #	TABLE	: PRS_MNG_EVAL_GRP_MEMBER
	==================================================================
	-->
		
	<delete id="updateEvalMngGrpData" parameterClass="hashMap">
		
		DELETE FROM PRS_MNG_EVAL_GRP_MEMBER
		WHERE EVAL_MEMB_EMPN = #evalMembEmpn#
		AND YEAR = #findYear#        
		
	</delete>
	
	<!--
	==================================================================   
	  # 설명	: 평가대상자 권한 삭제
	  #	기능	: DELETE
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<delete id="deleteAdminData" parameterClass="hashMap">
		DELETE FROM BSC_ADMIN
         WHERE ADMIN_GUBUN=#adminGubun#
	</delete>
	
	<!--
	==================================================================   
	  # 설명	: 권한 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<insert id="insertAdminData" parameterClass="hashMap">
		INSERT INTO BSC_ADMIN (ADMIN_GUBUN, USER_ID)
        <isEqual property="adminGubun" compareValue="81">
            SELECT DISTINCT #adminGubun#, EVAL_MEMB_EMPN
            FROM PRS_MNG_MEMBER 
           WHERE 1 = 1 
            <!--  YEAR = #findYear# -->
            AND EVAL_YN = 'Y'
        </isEqual>
        <isEqual property="adminGubun" compareValue="85">
            SELECT DISTINCT #adminGubun#, MANAGER_USER_ID
            FROM PRS_MNG_MEMBER 
           WHERE 1 = 1 
            <!--  YEAR = #findYear# -->
            AND EVAL_YN = 'Y'
            AND MANAGER_USER_ID IS NOT NULL
        </isEqual>
         
	</insert>
	
	<!--
    ==================================================================
      # 설명  : 파라미터 맵
      # 기능  : SETTING
      # TABLE   :
    ==================================================================
    -->
    <parameterMap id="delParamMap" class="java.util.HashMap">
        <parameter property="year"              jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>
        <parameter property="evalMembEmpn"      jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>
        <parameter property="evalMembEmpnSeq"   jdbcType="INTEGER"  javaType="java.lang.String" mode="IN"/>        
        <parameter property="loginUserId"       jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>
    </parameterMap>
    
    <!--
    ==================================================================
      # 설명  : 대상자 삭제
      # 기능  : PROCEDURES
      # TABLE   :
    ==================================================================
    -->
    <procedure id="deleteData" parameterMap="delParamMap">
        {CALL PG_PRS_MNG.SP_DELETE_PRS_MNG_MEMBER(?,?,?,?)}
    </procedure>
	
    <!--
    ==================================================================
      # 설명  : 파라미터 맵
      # 기능  : SETTING
      # TABLE   :
    ==================================================================
    -->
    <parameterMap id="paramMap" class="java.util.HashMap">
        <parameter property="year"          jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>
        <parameter property="loginUserId"   jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>
    </parameterMap>
    
    <!--
    ==================================================================
      # 설명  : 일괄적용 실행
      # 기능  : PROCEDURES
      # TABLE   :
    ==================================================================
    -->
    <procedure id="insertPrsMemberData" parameterMap="paramMap">
        {CALL PG_PRS_MNG.SP_PRS_MNG_MEMBER(?,?)}
    </procedure>
    
    <!--
    ==================================================================
      # 설명  : 일괄적용 실행
      # 기능  : PROCEDURES
      # TABLE   :
    ==================================================================
    -->
    <procedure id="updateManagerData" parameterMap="paramMap">
        {CALL PG_PRS_MNG.SP_UPDATE_MANAGER(?,?)}
    </procedure>
</sqlMap>


