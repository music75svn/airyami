<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="str.mon.strMetricDetail">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 이행성과지표 상세 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
             , B.STRAT_SUBJECT_ID
             , C.STRAT_SUBJECT_NM
             , G.STATUS_ID AS STRAT_SUBJECT_STATUS_ID
             , I.MANAGEMENT_ID
             , I.MANAGEMENT_NM
             , A.CSF_ID
             , B.CSF_NM
             , H.STATUS_ID AS SUBJECT_STATUS_ID
             , A.SUBJECT_METRIC_ID
             , A.SUBJECT_METRIC_NM 
             , A.CYCLE_ID
             , F_CODE_NM('008', A.CYCLE_ID, A.YEAR) AS CYCLE_NM
             , A.UNIT_ID
             , F_CODE_NM('013', A.UNIT_ID, A.YEAR) AS UNIT_NM
             , A.CHARGE_USER_ID
             , D.USER_NM AS CHARGE_USER_NM
             , A.CHARGE_DEPT_ID
             , E.SC_DEPT_NM
             , F.TARGET
             , F.ACTUAL
             , F.GOAL_RATE
             , F.STATUS_ID 
             , COUNT(C.STRAT_SUBJECT_ID) OVER(PARTITION BY A.YEAR, C.STRAT_SUBJECT_ID) AS STRAT_CNT
             , ROW_NUMBER() OVER(PARTITION BY A.YEAR, C.STRAT_SUBJECT_ID ORDER BY C.SORT_ORDER, C.STRAT_SUBJECT_ID, B.SORT_ORDER, B.CSF_ID, A.SORT_ORDER, A.SUBJECT_METRIC_ID) AS STRAT_INDEX
             , COUNT(B.CSF_ID) OVER(PARTITION BY A.YEAR, B.CSF_ID) AS SUBJECT_CNT
          	 , ROW_NUMBER() OVER(PARTITION BY A.YEAR, B.CSF_ID ORDER BY B.SORT_ORDER, B.CSF_ID, A.SORT_ORDER, A.SUBJECT_METRIC_ID) AS SUBJECT_INDEX
          FROM STR_METRIC A
               INNER JOIN BSC_CSF B ON A.YEAR = B.YEAR AND A.CSF_ID = B.CSF_ID
               INNER JOIN STR_STRAT_SUBJECT C ON A.YEAR = C.YEAR AND B.STRAT_SUBJECT_ID = C.STRAT_SUBJECT_ID
               INNER JOIN BSC_MANAGEMENT I ON C.YEAR = I.YEAR AND C.MANAGEMENT_ID = I.MANAGEMENT_ID
               LEFT OUTER JOIN V_ROLE_USER D ON A.CHARGE_USER_ID = D.USER_ID
               LEFT OUTER JOIN BSC_SC_DEPT E ON A.YEAR = E.YEAR AND A.CHARGE_DEPT_ID = E.SC_DEPT_ID AND E.DELETE_DT IS NULL
               LEFT OUTER JOIN STR_METRIC_SCORE F ON A.YEAR = F.YEAR AND F.MON = #findMon# AND A.SUBJECT_METRIC_ID = F.SUBJECT_METRIC_ID
               LEFT OUTER JOIN STR_STRAT_SUBJECT_SCORE G ON A.YEAR = G.YEAR AND F.MON = G.MON AND C.STRAT_SUBJECT_ID = G.STRAT_SUBJECT_ID
               LEFT OUTER JOIN STR_SUBJECT_SCORE H ON A.YEAR = H.YEAR AND B.CSF_ID = H.SUBJECT_ID AND H.MON = #findMon#
         WHERE A.YEAR = #findYear#
           AND A.DELETE_DT IS NULL
           
		<dynamic>
			<isNotEmpty prepend="AND" property="findManagementId">
	           	I.MANAGEMENT_ID = #findManagementId#
		   		</isNotEmpty>
                <isNotEmpty prepend="AND" property="findStratSubjectId">
                C.STRAT_SUBJECT_ID = #findStratSubjectId#
                </isNotEmpty>
				<isNotEmpty prepend="AND" property="findCsfId">
                B.CSF_ID = #findCsfId#
                </isNotEmpty>
                <isNotEmpty prepend="AND" property="findStrMetric">
	            UPPER(A.SUBJECT_METRIC_NM) LIKE  '%' || TRIM(UPPER(#findStrMetric#)) ||'%'
		   	</isNotEmpty>
	    </dynamic> 
	    
         ORDER BY C.SORT_ORDER, C.STRAT_SUBJECT_ID, B.SORT_ORDER, B.CSF_ID, A.SORT_ORDER, A.SUBJECT_METRIC_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 경영목표 조회조건목록
	  #	기능	: SELECT
	  #	TABLE	: STR_STRAT_SUBJECT
	==================================================================
	-->
	<select id="getManagement" parameterClass="hashMap" resultClass="hashMap">
	SELECT A.YEAR
			, A.MANAGEMENT_ID
			, A.MANAGEMENT_NM
			, A.SORT_ORDER
	FROM BSC_MANAGEMENT A
	WHERE A.YEAR = #findYear#
	   AND A.DELETE_DT IS NULL
	 ORDER BY A.SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 전략과제 조회조건목록
	  #	기능	: SELECT
	  #	TABLE	: STR_STRAT_SUBJECT
	==================================================================
	-->
	<select id="getStratSubjectList" parameterClass="hashMap" resultClass="hashMap">
		SELECT STRAT_SUBJECT_ID, STRAT_SUBJECT_NM 
		  FROM STR_STRAT_SUBJECT
		 WHERE YEAR = #findYear#
		 AND	DELETE_DT IS NULL
		 AND MANAGEMENT_ID = #findManagementId#
		 ORDER BY SORT_ORDER 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: CSF 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_CSF
	==================================================================
	-->
	<select id="getCsfList" parameterClass="hashMap" resultClass="hashMap">
	SELECT A.YEAR
             ,  A.CSF_ID
             ,  A.CSF_NM
             ,  A.SORT_ORDER
    FROM BSC_CSF A
    WHERE A.YEAR= #findYear#
        AND A.DELETE_DT IS NULL
        AND A.STRAT_SUBJECT_ID = #findStratSubjectId#
     ORDER BY A.CSF_NM, A.SORT_ORDER
	</select>	
	
</sqlMap>


