<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="cbe.eval.evalUserCheck">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: CBE_EVAL_MASTER
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 평가대상자확인 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: CBE_EVAL_MASTER
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR,
               A.EVAL_DEGREE_ID,
               A.EVAL_MEMB_USER_ID,
               A.NAME,
               B.WEIGHT_GRP_NM,
               C.RIVAL_GRP_NM,
              (SELECT SC_DEPT_NM
                 FROM BSC_SC_DEPT
                WHERE YEAR=A.YEAR
                  AND SC_DEPT_ID=ITEM_FRS_DEPT_ID)  ITEM_FRS_DEPT_NM,
              (SELECT SC_DEPT_NM
                 FROM BSC_SC_DEPT
                WHERE YEAR=A.YEAR
                  AND SC_DEPT_ID=ITEM_SEC_DEPT_ID)  ITEM_SEC_DEPT_NM,
              (SELECT SC_DEPT_NM
                 FROM BSC_SC_DEPT
                WHERE YEAR=A.YEAR
                  AND SC_DEPT_ID=ITEM_TEAM_ID)  ITEM_TEAM_NM,
               A.JIKGUB_NM,
               D.CODE_NM EVAL_METHOD_GBN                 
          FROM CBE_EVAL_MASTER A
          LEFT OUTER JOIN CBE_WEIGHT_GRP B ON A.YEAR=B.YEAR AND A.EVAL_DEGREE_ID=B.EVAL_DEGREE_ID AND A.WEIGHT_GRP_ID=B.WEIGHT_GRP_ID
          LEFT OUTER JOIN CBE_RIVAL_GRP C ON A.YEAR=C.YEAR AND A.EVAL_DEGREE_ID=C.EVAL_DEGREE_ID AND A.RIVAL_GRP_ID=C.RIVAL_GRP_ID
          LEFT OUTER JOIN BSC_CODE D ON D.CODE_GRP_ID='155' AND D.CODE_ID=A.EVAL_METHOD_GBN
         WHERE A.YEAR=#findYear#
           AND A.EVAL_DEGREE_ID=#findEvalDegreeId#
           <isNotEmpty property="findEvalMembUserId">
	         AND A.EVAL_MEMB_USER_ID = #findEvalMembUserId# 
	       </isNotEmpty>
	       <isNotEmpty property="findEvalMembUserNm">
	         AND A.NAME LIKE '%'||#findEvalMembUserNm#||'%'
	       </isNotEmpty>
         ORDER BY A.JIKGUB_ID, A.NAME
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가대상자확인 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: CBE_EVAL_MASTER
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR                  
			 , EVAL_DEGREE_ID        
			 , EVAL_MEMB_USER_ID     
			 , NAME                  
			 , SC_DEPT_ID            
			 , JIKGUB_ID             
			 , JIKGUB_NM             
			 , POS_ID                
			 , POS_NM                
			 , WEIGHT_GRP_ID         
			 , RIVAL_GRP_ID          
			 , ITEM_FRS_DEPT_ID      
			 , ITEM_SEC_DEPT_ID      
			 , ITEM_TEAM_ID          
			 , WORK_TERM             
			 , EVAL_METHOD_GBN       
			 , EXCE_EVAL_REASON      
		  FROM CBE_EVAL_MASTER 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
		   AND EVAL_MEMB_USER_ID = #evalMembUserId#	      
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가대상자확인 등록
	  #	기능	: INSERT
	  #	TABLE	: CBE_EVAL_MASTER
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		<selectKey resultClass="java.lang.String" keyProperty="SEQ" >
			SELECT F_PGM_SERI('CBE_EVAL_MASTER','','','','','') SEQ FROM DUAL
		</selectKey>
		INSERT INTO CBE_EVAL_MASTER ( 
			   YEAR
			 , EVAL_DEGREE_ID
			 , EVAL_MEMB_USER_ID
			 , NAME
			 , SC_DEPT_ID
			 , JIKGUB_ID
			 , JIKGUB_NM
			 , POS_ID
			 , POS_NM
			 , WEIGHT_GRP_ID
			 , RIVAL_GRP_ID
			 , ITEM_FRS_DEPT_ID
			 , ITEM_SEC_DEPT_ID
			 , ITEM_TEAM_ID
			 , WORK_TERM
			 , EVAL_METHOD_GBN
			 , EXCE_EVAL_REASON
			 , CREATE_DT
			 ) VALUES ( 
			   #year#
			 , #SEQ#
			 , #evalMembUserId#
			 , #name#
			 , #scDeptId#
			 , #jikgubId#
			 , #jikgubNm#
			 , #posId#
			 , #posNm#
			 , #weightGrpId#
			 , #rivalGrpId#
			 , #itemFrsDeptId#
			 , #itemSecDeptId#
			 , #itemTeamId#
			 , #workTerm#
			 , #evalMethodGbn#
			 , #exceEvalReason#
			 , SYSDATE
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 평가대상자확인 수정
	  #	기능	: UPDATE
	  #	TABLE	: CBE_EVAL_MASTER
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE CBE_EVAL_MASTER 
		   SET NAME                   = #name# 
			 , SC_DEPT_ID             = #scDeptId# 
			 , JIKGUB_ID              = #jikgubId# 
			 , JIKGUB_NM              = #jikgubNm# 
			 , POS_ID                 = #posId# 
			 , POS_NM                 = #posNm# 
			 , WEIGHT_GRP_ID          = #weightGrpId# 
			 , RIVAL_GRP_ID           = #rivalGrpId# 
			 , ITEM_FRS_DEPT_ID       = #itemFrsDeptId# 
			 , ITEM_SEC_DEPT_ID       = #itemSecDeptId# 
			 , ITEM_TEAM_ID           = #itemTeamId# 
			 , WORK_TERM              = #workTerm# 
			 , EVAL_METHOD_GBN        = #evalMethodGbn# 
			 , EXCE_EVAL_REASON       = #exceEvalReason# 
			 , MODIFY_DT              = SYSDATE 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
		   AND EVAL_MEMB_USER_ID = #evalMembUserId#		
	</update>	
	

	<!--
	==================================================================   
	  # 설명	: 평가대상자확인 삭제
	  #	기능	: UPDATE
	  #	TABLE	: CBE_EVAL_MASTER
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM CBE_EVAL_MASTER 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
		   AND EVAL_MEMB_USER_ID = #evalMembUserId#
	</update>
	
	
</sqlMap>


