<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.level.levelMapping">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: BSC_LEVEL_EVAL_MAPPING
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 난이도평가 평가단/지표 매핑관리 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_LEVEL_EVAL_MAPPING
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR, A.EVAL_USER_GRP_ID, A.METRIC_ID, 
               A.CREATE_DT, A.MODIFY_DT,
               B.METRIC_NM,
               C.SC_DEPT_NM,
               D.EVAL_USER_GRP_NM,
               D.EVAL_CLOSING_YN,
               CASE WHEN NVL(X.CNT,0) = 0 THEN 'N' ELSE 'Y' END EVAL_SUBMIT_YN    
          FROM BSC_LEVEL_EVAL_MAPPING A
               INNER JOIN BSC_METRIC B
               ON A.YEAR = B.YEAR
               AND A.METRIC_ID = B.METRIC_ID
               AND B.DELETE_DT IS NULL
               INNER JOIN BSC_SC_DEPT C
               ON B.YEAR = C.YEAR
               AND B.SC_DEPT_ID = C.SC_DEPT_ID
               AND C.DELETE_DT IS NULL
               INNER JOIN BSC_LEVEL_EVAL_USER_GRP D
               ON A.YEAR = D.YEAR
               AND A.EVAL_USER_GRP_ID = D.EVAL_USER_GRP_ID
               LEFT OUTER JOIN  (SELECT YEAR, EVAL_USER_GRP_ID, COUNT(1) CNT              
                                   FROM BSC_LEVEL_EVAL_USER             
                                  WHERE YEAR = #findYear#
                                    AND EVAL_SUBMIT_YN = 'Y'           
                                  GROUP BY YEAR, EVAL_USER_GRP_ID) X
               ON A.YEAR = X.YEAR
               AND A.EVAL_USER_GRP_ID = X.EVAL_USER_GRP_ID
         WHERE A.YEAR = #findYear#
           <isNotEmpty property="findUserGrpId" prepend="AND">
           A.EVAL_USER_GRP_ID = #findUserGrpId#
           </isNotEmpty>
         ORDER BY D.SORT_ORDER, B.SORT_ORDER, C.SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 난이도평가 평가단/지표 매핑관리 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_LEVEL_EVAL_MAPPING
	==================================================================
	-->
	<select id="getMetricList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR, A.EVAL_USER_GRP_ID, A.METRIC_ID, 
               A.CREATE_DT, A.MODIFY_DT,
               B.METRIC_NM,
               C.SC_DEPT_NM
          FROM BSC_LEVEL_EVAL_MAPPING A
               INNER JOIN BSC_METRIC B
               ON A.YEAR = B.YEAR
               AND A.METRIC_ID = B.METRIC_ID
               AND B.DELETE_DT IS NULL
               INNER JOIN BSC_SC_DEPT C
               ON B.YEAR = C.YEAR
               AND B.SC_DEPT_ID = C.SC_DEPT_ID
               AND C.DELETE_DT IS NULL
         WHERE A.YEAR = #findYear#
           AND A.EVAL_USER_GRP_ID = #evalUserGrpId#
         ORDER BY B.SORT_ORDER, C.SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 난이도평가 평가단/지표 매핑관리 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_LEVEL_EVAL_MAPPING
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR                  
			 , EVAL_USER_GRP_ID      
			 , METRIC_ID             
		  FROM BSC_LEVEL_EVAL_MAPPING 
		 WHERE 1 = 1 
		   AND YEAR = #findYear#
		   AND EVAL_USER_GRP_ID = #evalUserGrpId#
		   AND METRIC_ID = #metricId#	      
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 난이도평가 평가단/지표 매핑관리 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_LEVEL_EVAL_MAPPING
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO BSC_LEVEL_EVAL_MAPPING ( 
			   YEAR
			 , EVAL_USER_GRP_ID
			 , METRIC_ID
			 , CREATE_DT
			 ) VALUES ( 
			   #findYear#
			 , #evalUserGrpId#
			 , #metricId#
			 , SYSDATE
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 난이도평가 평가단/지표 매핑관리 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_LEVEL_EVAL_MAPPING
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE BSC_LEVEL_EVAL_MAPPING 
		   SET 			 , MODIFY_DT              = SYSDATE 
		 WHERE 1 = 1 
		   AND YEAR = #findYear#
		   AND EVAL_USER_GRP_ID = #evalUserGrpId#
		   AND METRIC_ID = #metricId#		
	</update>	
	

	<!--
	==================================================================   
	  # 설명	: 난이도평가 평가단/지표 매핑관리 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_LEVEL_EVAL_MAPPING
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM BSC_LEVEL_EVAL_MAPPING 
		 WHERE 1 = 1 
		   AND YEAR = #findYear#
		   AND EVAL_USER_GRP_ID = #evalUserGrpId#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 난이도평가 평가단/지표 매핑관리 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_LEVEL_EVAL_MAPPING
	==================================================================
	-->	
	<update id="deleteMetricData" parameterClass="hashMap">
		DELETE FROM BSC_LEVEL_EVAL_MAPPING 
		 WHERE 1 = 1 
		   AND YEAR = #findYear#
		   AND EVAL_USER_GRP_ID = #evalUserGrpId#
		   AND METRIC_ID = #metricId#
	</update>
	
	
</sqlMap>


