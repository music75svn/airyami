<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.base.perspective">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: BSC_PERSPECTIVE
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 관점관리 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_PERSPECTIVE
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR, A.PERSPECTIVE_ID, A.PERSPECTIVE_NM, A.SORT_ORDER,
		        (SELECT COUNT(*) 
                FROM BSC_DEPT_STRATEGY
              WHERE YEAR= #findYear#
                  AND PERSPECTIVE_ID=A.PERSPECTIVE_ID) CNT    
          FROM BSC_PERSPECTIVE A
         WHERE A.YEAR = #findYear#
           <isEqual prepend="AND" property="findUseYn" compareValue="Y">
       	   A.DELETE_DT IS NULL
           </isEqual>
           <isNotEqual prepend="AND" property="findUseYn" compareValue="Y">
           A.DELETE_DT IS NOT NULL
           </isNotEqual>
         ORDER BY A.SORT_ORDER  
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 관점관리 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_PERSPECTIVE
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR                  
			 , PERSPECTIVE_ID        
			 , PERSPECTIVE_NM        
			 , SORT_ORDER        
			 , CASE WHEN DELETE_DT IS NULL THEN 'Y' ELSE 'N' END AS USE_YN         
		  FROM BSC_PERSPECTIVE 
		 WHERE YEAR = #year#
		   AND PERSPECTIVE_ID = #perspectiveId#	  
    </select>
	
	<!--
	==================================================================   
	  # 설명	: 관점관리 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_PERSPECTIVE
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		<selectKey resultClass="java.lang.String" keyProperty="SEQ" >
			SELECT 'P'||LPAD(NVL(MAX(SUBSTR(PERSPECTIVE_ID,2,6)),0)+1,6,'0') FROM BSC_PERSPECTIVE WHERE YEAR=#year#
		</selectKey>
		INSERT INTO BSC_PERSPECTIVE ( 
			   YEAR
			 , PERSPECTIVE_ID
			 , PERSPECTIVE_NM
			 , SORT_ORDER
			 , CREATE_DT
			 , DELETE_DT
			 ) VALUES ( 
			   #year#
			 , #SEQ#
			 , #perspectiveNm#
			 , #sortOrder#
			 , SYSDATE
			 ,
			 <isEqual property="useYn" compareValue="Y">
		     NULL
		     </isEqual>
		     <isNotEqual property="useYn" compareValue="Y">
		     SYSDATE
		     </isNotEqual>
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 관점관리 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_PERSPECTIVE
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE BSC_PERSPECTIVE 
		   SET PERSPECTIVE_NM         = #perspectiveNm# 
			 , SORT_ORDER             = #sortOrder# 
			 , MODIFY_DT              = SYSDATE 
			 ,
			 <isEqual property="useYn" compareValue="Y">
	         DELETE_DT = NULL
	         </isEqual>
	         <isNotEqual property="useYn" compareValue="Y">
	         DELETE_DT = SYSDATE
	         </isNotEqual>
		 WHERE YEAR = #year#
		   AND PERSPECTIVE_ID = #perspectiveId#		
	</update>	
	

	<!--
	==================================================================   
	  # 설명	: 관점관리 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_PERSPECTIVE
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		UPDATE BSC_PERSPECTIVE 
		   SET DELETE_DT       = SYSDATE 
		 WHERE YEAR = #year#
		   AND PERSPECTIVE_ID = #perspectiveId#
	</update>
	
	
</sqlMap>


