<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.system.systemLoginMorPos">

	<!--
	==================================================================
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	:
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />


	<!--
	==================================================================
	  # 설명	: 시스템 사용현황(직위별) 목록 보기
	  #	기능	: SELECT
	  #	TABLE	:
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		    SELECT DISTINCT
                        T1.YEAR
                      , T2.POS_CD
                      , T2.POS_NM
                      , F_ISNULL(MAX(DECODE(MON,'01', COUNT(T1.USER_ID), '')) OVER (PARTITION BY T1.YEAR, T2.POS_CD, T2.POS_NM),0) A
                      , F_ISNULL(MAX(DECODE(MON,'02', COUNT(T1.USER_ID), '')) OVER (PARTITION BY T1.YEAR, T2.POS_CD, T2.POS_NM),0) B
                      , F_ISNULL(MAX(DECODE(MON,'03', COUNT(T1.USER_ID), '')) OVER (PARTITION BY T1.YEAR, T2.POS_CD, T2.POS_NM),0) C
                      , F_ISNULL(MAX(DECODE(MON,'04', COUNT(T1.USER_ID), '')) OVER (PARTITION BY T1.YEAR, T2.POS_CD, T2.POS_NM),0) D
                      , F_ISNULL(MAX(DECODE(MON,'05', COUNT(T1.USER_ID), '')) OVER (PARTITION BY T1.YEAR, T2.POS_CD, T2.POS_NM),0) E
                      , F_ISNULL(MAX(DECODE(MON,'06', COUNT(T1.USER_ID), '')) OVER (PARTITION BY T1.YEAR, T2.POS_CD, T2.POS_NM),0) F
                      , F_ISNULL(MAX(DECODE(MON,'07', COUNT(T1.USER_ID), '')) OVER (PARTITION BY T1.YEAR, T2.POS_CD, T2.POS_NM),0) G
                      , F_ISNULL(MAX(DECODE(MON,'08', COUNT(T1.USER_ID), '')) OVER (PARTITION BY T1.YEAR, T2.POS_CD, T2.POS_NM),0) H
                      , F_ISNULL(MAX(DECODE(MON,'09', COUNT(T1.USER_ID), '')) OVER (PARTITION BY T1.YEAR, T2.POS_CD, T2.POS_NM),0) I
                      , F_ISNULL(MAX(DECODE(MON,'10', COUNT(T1.USER_ID), '')) OVER (PARTITION BY T1.YEAR, T2.POS_CD, T2.POS_NM),0) J
                      , F_ISNULL(MAX(DECODE(MON,'11', COUNT(T1.USER_ID), '')) OVER (PARTITION BY T1.YEAR, T2.POS_CD, T2.POS_NM),0) K
                      , F_ISNULL(MAX(DECODE(MON,'12', COUNT(T1.USER_ID), '')) OVER (PARTITION BY T1.YEAR, T2.POS_CD, T2.POS_NM),0) L
                 FROM BSC_LOG_LIST T1
                 INNER JOIN V_ROLE_USER T2
                     ON T1.USER_ID=T2.USER_ID
		     		  AND T2.USER_ID NOT IN (SELECT USER_ID FROM BSC_ADMIN WHERE ADMIN_GUBUN='01')
                  INNER JOIN BSC_SC_DEPT_MAPPING T3
                     ON T1.YEAR=T3.YEAR
                     AND T3.DEPT_ID=T2.DEPT_ID
                 INNER JOIN BSC_SC_DEPT T4
                     ON T1.YEAR=T4.YEAR
                   AND T3.SC_DEPT_ID=T4.SC_DEPT_ID
                     AND T4.DELETE_DT IS NULL
                 WHERE T1.YEAR=#findYear#
                 AND GBN='L'
                 GROUP BY
                 T1.YEAR, MON, T2.POS_CD, T2.POS_NM
                 ORDER BY T1.YEAR, T2.POS_CD
	</select>
	<!--
	==================================================================
	  # 설명	: 시스템 사용현황(직위별) 차트(도넛) 데이터
	  #	기능	: SELECT
	  #	TABLE	:
	==================================================================
	-->
	<select id="getChar1List" parameterClass="hashMap" resultClass="hashMap">
		 SELECT DISTINCT POS_CD, POS_NM, COUNT (T1.USER_ID) COUNT
		    FROM BSC_LOG_LIST T1
		         INNER JOIN V_ROLE_USER T2
		            ON T1.USER_ID = T2.USER_ID
		                AND T2.USER_ID NOT IN (SELECT USER_ID
		                                        FROM BSC_ADMIN
		                                       WHERE ADMIN_GUBUN = '01')
		         INNER JOIN BSC_SC_DEPT_MAPPING T3
		            ON T1.YEAR = T3.YEAR AND T3.DEPT_ID = T2.DEPT_ID
		         INNER JOIN BSC_SC_DEPT T4
		            ON     T1.YEAR = T4.YEAR
		               AND T3.SC_DEPT_ID = T4.SC_DEPT_ID
		               AND T4.DELETE_DT IS NULL
		   WHERE T1.YEAR = #findYear#  AND GBN = 'L'
		GROUP BY POS_CD, POS_NM
		ORDER BY POS_CD
	</select>
	<!--
	==================================================================
	  # 설명	: 시스템 사용현황(직위별) 차트(막대그래프) 데이터
	  #	기능	: SELECT
	  #	TABLE	:
	==================================================================
	-->
	<select id="getChar2List" parameterClass="hashMap" resultClass="hashMap">
		  SELECT T2.MON, NVL (T1.COUNT, 0) COUNT
		    FROM    (  SELECT DISTINCT T1.YEAR, MON, COUNT (T1.USER_ID) COUNT
		                 FROM BSC_LOG_LIST T1
		                      INNER JOIN V_ROLE_USER T2
		                         ON T1.USER_ID = T2.USER_ID
		                            AND T2.USER_ID NOT IN (SELECT USER_ID
		                                                     FROM BSC_ADMIN
		                                                    WHERE ADMIN_GUBUN = '01')
		                      INNER JOIN BSC_SC_DEPT_MAPPING T3
		                         ON T1.YEAR = T3.YEAR AND T3.DEPT_ID = T2.DEPT_ID
		                      INNER JOIN BSC_SC_DEPT T4
		                         ON     T1.YEAR = T4.YEAR
		                         AND T3.SC_DEPT_ID = T4.SC_DEPT_ID
		                         AND T4.DELETE_DT IS NULL
		                WHERE T1.YEAR = #findYear# AND GBN = 'L'
		             GROUP BY T1.YEAR, MON) T1
		         RIGHT JOIN
		            (SELECT
		            		CODE_ID MON
		             FROM BSC_CODE
		             WHERE CODE_GRP_ID = '024'
		             AND YEAR = '9999'
		             ORDER BY SORT_ORDER) T2
		         ON T1.MON = T2.MON
		ORDER BY T2.MON
	</select>
	<!--
	==================================================================
	  # 설명	: 시스템 사용현황(직위별) 상세 보기
	  #	기능	: SELECT
	  #	TABLE	:
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
 		SELECT DISTINCT
               T1.YEAR
             , MON
             , T4.SC_DEPT_ID
             , T4.SC_DEPT_NM
             , T4.SORT_ORDER
             , T1.USER_ID
             , T2.NAME_HAN USER_NM
             , T2.POS_NM
             , COUNT(TIME) TIME
         FROM BSC_LOG_LIST T1
        INNER JOIN V_ROLE_USER T2
            ON T1.USER_ID=T2.USER_ID
            AND T2.POS_CD= #posCd#
        INNER JOIN BSC_SC_DEPT_MAPPING T3
            ON T1.YEAR=T3.YEAR
            AND T3.DEPT_ID=T2.DEPT_ID
        INNER JOIN BSC_SC_DEPT T4
            ON T1.YEAR=T4.YEAR
            AND T3.SC_DEPT_ID=T4.SC_DEPT_ID
            AND T4.DELETE_DT IS NULL
        WHERE GBN='L'
        AND T1.YEAR=#findYear#
        AND MON=#findMon#
      	AND T1.USER_ID NOT IN (SELECT USER_ID FROM BSC_ADMIN WHERE ADMIN_GUBUN='01')
        GROUP BY
        T1.YEAR, MON, T4.SC_DEPT_ID, T4.SC_DEPT_NM, T1.USER_ID, T2.NAME_HAN, T4.SORT_ORDER, T2.POS_NM
        ORDER BY T1.YEAR, T4.SORT_ORDER, T2.POS_NM
	</select>

	<!--
	==================================================================
	  # 설명	: 시스템 사용현황(직위별) 등록
	  #	기능	: INSERT
	  #	TABLE	:
	==================================================================
	-->
	<insert id="insertData" parameterClass="hashMap">

	</insert>

	<!--
	==================================================================
	  # 설명	: 시스템 사용현황(직위별) 수정
	  #	기능	: UPDATE
	  #	TABLE	:
	==================================================================
	-->
	<update id="updateData" parameterClass="hashMap">

	</update>


	<!--
	==================================================================
	  # 설명	: 시스템 사용현황(직위별) 삭제
	  #	기능	: UPDATE
	  #	TABLE	:
	==================================================================
	-->
	<update id="deleteData" parameterClass="hashMap">

	</update>


</sqlMap>


