<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="mem.eval.memMeet">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: MEM_MEET
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 
	<!--
	==================================================================   
	  # 설명	: 중간면담 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: MEM_MEET
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       A.YEAR
		     , A.EMP_NO
		     , A.EMP_NM
		     , F_DEPT_LEV2_NM(A.YEAR, A.DEPT_CD) AS DEPT_NM
		     , F_CODE_NM('170', A.CAST_TC , A.YEAR) AS CAST_NM 
		     , F_CODE_NM('171', A.POS_TC , A.YEAR) AS POS_NM
		     , NVL2(A.METRIC_STATUS_ID, F_CODE_NM('244', A.METRIC_STATUS_ID , A.YEAR), '미입력') AS METRIC_STATUS_NM
		     , (SELECT COUNT(*) FROM MEM_MEET WHERE YEAR = #findYear# AND EMP_NO = A.EMP_NO AND MEET_STATE = '01' AND DELETE_DT IS NULL) AS MEET_REQ
		     , (SELECT COUNT(*) FROM MEM_MEET WHERE YEAR = #findYear# AND EMP_NO = A.EMP_NO AND MEET_STATE = '02' AND DELETE_DT IS NULL) AS MEET_COMPLETE
		     , MAX(D.KOR_NM) AS EVAL_1_EMP_NM
		  FROM MEM_USER A
		     , MEM_METRIC B
		     , BSC_INSA D
		 WHERE A.YEAR = B.YEAR(+)
		   AND A.EMP_NO = B.EMP_NO(+)
		   AND A.YEAR = D.YEAR   
		   AND A.EVAL_1_EMP_NO = D.EMPN
		   AND A.YEAR = #findYear#
		   AND B.DELETE_DT IS NULL
	<isNotEmpty prepend="AND" property="sEmpNo">
		<isEqual property="mode" compareValue="SEARCH">
			   A.EMP_NO = #sEmpNo#
		</isEqual>
		<isNotEqual property="mode" compareValue="SEARCH">
	           (A.EVAL_1_EMP_NO = #sEmpNo# OR A.EVAL_2_EMP_NO = #sEmpNo#)
		</isNotEqual>
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="findEmpNm">
	           A.EMP_NM LIKE '%' || TRIM(#findEmpNm#) || '%'
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="findCastTc">
	           A.CAST_TC = #findCastTc#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="findPosTc">
	           A.POS_TC = #findPosTc#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="findDeptCd">
	           A.DEPT_CD = #findDeptCd#
	</isNotEmpty>
	     GROUP BY A.YEAR, A.EMP_NO, A.EMP_NM, A.DEPT_CD, A.CAST_TC, A.POS_TC, A.METRIC_STATUS_ID
		 ORDER BY A.EMP_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 중간면담 상세 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: MEM_MEET
	==================================================================
	-->
	<select id="getDetailList" parameterClass="hashMap" resultClass="hashMap">
	  SELECT
	         A.YEAR
	       , A.SEQ
	       , A.EMP_NO
	       , A.MEET_STATE
	       , F_CODE_NM('245', A.MEET_STATE , A.YEAR) AS MEET_STATE_NM
	       , TO_CHAR(TO_DATE(A.MEET_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS MEET_DT
	       , REPLACE( REPLACE ( A.TOT_OPINION, CHR(13), '' ), CHR(10), ' ' ) AS TOT_OPINION
	       , A.EVAL_1_EMP_NO
	       , B.KOR_NM AS EVAL_1_EMP_NM
	       , TO_CHAR(A.CREATE_DT, 'YYYY.MM.DD') AS REQ_DT
	    FROM MEM_MEET A
	       , BSC_INSA B
	   WHERE 1 = 1
		 AND A.EVAL_1_EMP_NO = B.EMPN
	     AND A.YEAR = B.YEAR
	     AND A.YEAR = #year#
	     AND A.EMP_NO = #empNo#
<isEqual property="findUseYn" compareValue="Y">
	     AND A.DELETE_DT IS NULL
</isEqual>
<isEqual property="findUseYn" compareValue="N">
         AND A.DELETE_DT IS NOT NULL
</isEqual>
	   ORDER BY A.SEQ
	</select>

	<!--
	==================================================================   
	  # 설명	: 중간면담 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: MEM_MEET
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       A.YEAR
		     , A.SEQ
		     , A.EMP_NO
		     , A.MEET_STATE
		     , F_CODE_NM('245', A.MEET_STATE , A.YEAR) AS MEET_STATE_NM
		     , A.MEET_DT
		     , A.TOT_OPINION
		     , A.EVAL_1_EMP_NO
		     , B.KOR_NM AS EVAL_1_EMP_NM
		     , DECODE(A.DELETE_DT, '', 'Y', 'N') AS USE_YN
		  FROM MEM_MEET A
		     , BSC_INSA B
		 WHERE A.EVAL_1_EMP_NO = B.EMPN
		   AND A.YEAR = B.YEAR
		   AND A.YEAR = #year#
		   AND A.EMP_NO = #empNo#
		   AND A.SEQ = #seq#
	</select>

	<!--
	==================================================================   
	  # 설명	: 중간면담 삭제
	  #	기능	: INSERT
	  #	TABLE	: MEM_MEET
	==================================================================
	-->	
	<update id="deleteDetailData" parameterClass="hashMap">
		UPDATE MEM_MEET
		   SET DELETE_DT = SYSDATE
		 WHERE YEAR = #year# 
		   AND EMP_NO = #empNo#
		   AND SEQ = #seq#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 중간면담 저장
	  #	기능	: INSERT
	  #	TABLE	: MEM_MEET
	==================================================================
	-->	
	<update id="saveMeetData" parameterClass="hashMap">
		UPDATE MEM_MEET
		   SET MEET_DT = REPLACE(#meetDt#, '.', '')
		     , TOT_OPINION = #totOpinion#
		 WHERE YEAR = #year# 
		   AND EMP_NO = #empNo#
		   AND SEQ = #seq#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 중간면담 면담완료
	  #	기능	: INSERT
	  #	TABLE	: MEM_MEET
	==================================================================
	-->	
	<update id="complateMeetData" parameterClass="hashMap">
		UPDATE MEM_MEET
		   SET MEET_STATE = #meetState#
		 WHERE YEAR = #year# 
		   AND EMP_NO = #empNo#
		   AND SEQ = #seq#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 지표별면담 내용 저장여부 조회
	  #	기능	: SELECT
	  #	TABLE	: MEM_MEET
	==================================================================
	-->
	<select id="getMeetByMetricYn" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       DECODE(COUNT(*), 0, 'N', 'Y') AS MEET_BY_METRIC_YN
		  FROM MEM_MEET_METRIC A
		 WHERE 1 = 1
		   AND A.YEAR = #year#
		   AND A.EMP_NO = #empNo#
		   AND A.SEQ = #seq#
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 지표별 중간면담 초기 등록
	  #	기능	: INSERT
	  #	TABLE	: MEM_MEET_METRIC
	==================================================================
	-->
	<insert id="insertMeetByMetricInitData" parameterClass="hashMap">		
		INSERT INTO MEM_MEET_METRIC (
		       YEAR
		     , METRIC_ID
		     , EMP_NO
		     , SEQ
		     , BASE_MON
		     , CREATE_DT		     
			 )
		SELECT
		       A.YEAR
		     , A.METRIC_ID
		     , A.EMP_NO
		     , #seq# AS SEQ
		     , MAX(MON) AS BASE_MON
		     , SYSDATE
		  FROM MEM_METRIC A
		     , MEM_ACT_IN B
		 WHERE A.YEAR = #year#
		   AND A.EMP_NO = #empNo#
		   AND A.YEAR = B.YEAR(+)
		   AND A.METRIC_ID = B.METRIC_ID(+)
		   AND B.VALUE(+) IS NOT NULL
		   AND A.DELETE_DT IS NULL
		 GROUP BY A.YEAR
		     , A.EMP_NO
		     , A.METRIC_ID
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 지표별 중간면담 삭제
	  #	기능	: INSERT
	  #	TABLE	: MEM_MEET_METRIC
	==================================================================
	-->	
	<update id="deleteMeetByMetricInitData" parameterClass="hashMap">
		DELETE MEM_MEET_METRIC
		 WHERE YEAR = #year# 
		   AND EMP_NO = #empNo#
		   AND SEQ = #seq#
	</update>

	<!--
	==================================================================   
	  # 설명	: 중간면담 면담완료
	  #	기능	: INSERT
	  #	TABLE	: MEM_MEET
	==================================================================
	-->	
	<update id="updateMeetByMetricInitData" parameterClass="hashMap">
		UPDATE MEM_MEET_METRIC
		   SET MEET_TYPE_CD = #meetTypeCd#
		     , ACT_CHECK_CONTENT = #actCheck#
		     , COACHING_CONTENT = #coaching#
		 WHERE YEAR = #year# 
		   AND METRIC_ID = #metricId#
		   AND EMP_NO = #empNo#
		   AND SEQ = #seq#
	</update>

	<!--
	==================================================================   
	  # 설명	: 실적입력 평가항목 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: MEM_METRIC
	==================================================================
	-->
	<select id="getEvalItemList" parameterClass="hashMap" resultClass="hashMap">
		SELECT F_CODE_NM('240', A.EVAL_GBN_ID , A.YEAR) AS EVAL_GBN_NM
		     , A.METRIC_ID
		     , A.METRIC_NM
		     , A.TYPE_ID
		     , F_CODE_NM('007', A.TYPE_ID , A.YEAR) AS TYPE_NM
		     , F_CODE_NM('013', A.UNIT , A.YEAR) AS UNIT_NM
		     , A.EVAL_CYCLE_ID
		     , F_CODE_NM('008', A.EVAL_CYCLE_ID , A.YEAR) AS EVAL_CYCLE_NM
		     , C.TGT_VALUE AS MON_GOAL
		     , A.WEIGHT
		     , D.VALUE
		     , D.FINAL_SCORE
		     , F_CODE_NM('235', D.FINAL_GRADE, #year#) AS FINAL_GRADE
		     , B.MEET_TYPE_CD
		     , F_CODE_NM('248', B.MEET_TYPE_CD, #year#) AS MEET_TYPE_NM
		     , REPLACE( REPLACE ( B.ACT_CHECK_CONTENT, CHR(13), '' ), CHR(10), '<![CDATA[<BR>]]>' ) AS ACT_CHECK_CONTENT
		     , REPLACE( REPLACE ( B.COACHING_CONTENT, CHR(13), '' ), CHR(10), '<![CDATA[<BR>]]>' ) AS COACHING_CONTENT
		     , B.ACT_CHECK_CONTENT AS ACT_CHECK_CONTENT2
		     , B.COACHING_CONTENT AS COACHING_CONTENT2
		     , B.BASE_MON
		  FROM MEM_METRIC A
		     , MEM_MEET_METRIC B
		     , MEM_METRIC_TARGET C
		     , MEM_ACT_IN D
             , BSC_CODE  E
		 WHERE 1 = 1
		       AND A.YEAR = B.YEAR(+)
		       AND A.EMP_NO = B.EMP_NO(+)
		       AND A.METRIC_ID = B.METRIC_ID(+)
		       AND B.YEAR = C.YEAR(+) 
		       AND B.METRIC_ID = C.METRIC_ID(+)
		       AND B.BASE_MON = C.MON(+)
		       AND B.YEAR = D.YEAR(+) 
		       AND B.METRIC_ID = D.METRIC_ID(+)
		       AND B.BASE_MON = D.MON(+)
		       AND A.YEAR = #year#
		       AND A.EMP_NO = #empNo#
		       AND B.SEQ(+) = #seq#
        	   AND A.DELETE_DT IS NULL
        	   AND C.DELETE_DT IS NULL
		       AND A.YEAR = E.YEAR
		       AND A.EVAL_GBN_ID = E.CODE_ID  
		       AND E.CODE_GRP_ID = '240'
        	   AND E.DELETE_DT IS NULL
	     ORDER BY E.SORT_ORDER 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 지표 명 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA
	==================================================================
	-->
	<select id="getMetricNm" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       METRIC_NM
		  FROM MEM_METRIC A
		 WHERE 1 = 1
		   AND A.YEAR = #year#
		   AND A.METRIC_ID = #metricId#
		   AND A.DELETE_DT IS NULL
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 종합의견 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA
	==================================================================
	-->
	<select id="getTotOpinionInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       REPLACE( REPLACE ( A.TOT_OPINION, CHR(13), '' ), CHR(10), '<![CDATA[<BR>]]>' ) AS TOT_OPINION
		  FROM MEM_MEET A
		 WHERE 1 = 1
		   AND A.YEAR = #year#
		   AND A.EMP_NO = #empNo#
		   AND A.SEQ = #seq#
		   AND A.DELETE_DT IS NULL
	</select>
</sqlMap>


