<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.insa.insa">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	
	<!--
	==================================================================   
	  # 설명	: 최상위 평가조직 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getTopDeptInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR
				, DEPT_CD
       			, DEPT_KOR_NM
    	 FROM ( SELECT YEAR, DEPT_CD, DEPT_KOR_NM FROM BSC_INSA_DEPT WHERE YEAR = #findYear# ORDER BY DISP_ORDER DESC, DEPT_CD )
		WHERE DEPT_CD = '0000'
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 인사조직 왼쪽트리목록 보기(미사용은 제외)
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getDeptList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR, DEPT_CD, DEPT_KOR_NM, UP_DEPT_CD, UP_USER_ID, USE_YN, DEPT_LEVL, DISP_ORDER, DEPT_GRADE, DEPT_SCORE
		  FROM BSC_INSA_DEPT
		 WHERE YEAR = #findYear#
		   AND ( USE_YN = 'T' OR DEPT_CD = '0000' )
<!-- 		<isEqual property="exceptDirector" compareValue="Y" prepend="AND">
		<![CDATA[
				DEPT_CD <> '1000' AND UP_DEPT_CD <> '1000'
		]]>
		</isEqual>
 -->		
		 ORDER BY DISP_ORDER, DEPT_CD       
		 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 인사정보 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
			 , A.EMPN
			 , A.KOR_NM
			 , A.DEPT_CD
			 , B.DEPT_KOR_NM
             , (SELECT DEPT_KOR_NM FROM BSC_INSA_DEPT WHERE YEAR = A.YEAR AND DEPT_CD = (SELECT UP_DEPT_CD FROM BSC_INSA_DEPT WHERE YEAR = A.YEAR AND DEPT_CD = A.DEPT_CD)) 
                    || ' ' || (SELECT DEPT_KOR_NM FROM BSC_INSA_DEPT WHERE YEAR = A.YEAR AND DEPT_CD = A.DEPT_CD) DEPT_FULL_NM
			 , C.CODE_NM CAST_TC
			 , D.CODE_NM POS_TC
			 , A.EMPM_KIND_TC
			 , (  SELECT SUM (WORK_MON)
					FROM BSC_INSA_PCMT
				   WHERE A.YEAR = YEAR
					 AND A.EMPN = EMPN
				GROUP BY YEAR, EMPN) AS MON
		  FROM BSC_INSA A
	LEFT OUTER JOIN BSC_INSA_DEPT B
				 ON A.YEAR = B.YEAR
				AND A.DEPT_CD = B.DEPT_CD
	LEFT OUTER JOIN BSC_CODE C
				 ON C.CODE_GRP_ID = '170'
				AND C.CODE_ID = A.CAST_TC
				AND C.YEAR = #findYear#
	LEFT OUTER JOIN BSC_CODE D
				 ON D.CODE_GRP_ID = '171'
				AND D.CODE_ID = A.POS_TC
				AND D.YEAR = #findYear#                                                                
		 WHERE A.YEAR = #findYear#  
		   AND A.DEPT_CD IN (SELECT DEPT_CD
							   FROM BSC_INSA_DEPT
							  WHERE YEAR = #findYear#
						 START WITH DEPT_CD = #findDeptCd#
				   CONNECT BY PRIOR YEAR = YEAR
								AND PRIOR DEPT_CD = UP_DEPT_CD)
		 GROUP BY A.YEAR
				, A.EMPN
				, A.KOR_NM
				, A.DEPT_CD
				, B.DEPT_KOR_NM
				, B.UP_DEPT_CD
				, C.CODE_NM
				, D.CODE_NM
				, A.EMPM_KIND_TC
		 ORDER BY A.DEPT_CD, A.EMPN	
	
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 인사정보 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
			 , A.EMPN
			 , A.SER
			 , A.ORG_PCMT_DATE
			 , A.KOR_NM
			 , A.PCMT_TC
			 , A.PCMT_TC_NM
			 , A.DEPT_CD
			 , B.DEPT_KOR_NM
			 , A.CAST_TC
			 , A.POS_TC
			 , C.CODE_NM POS_TC_NM
			 , A.START_PCMT_DATE
			 , A.END_PCMT_DATE
			 , A.EMPM_KIND_TC
			 , A.EMPM_KIND_TC_NM
			 , A.WORK_MON
		  FROM BSC_INSA_PCMT A
	LEFT OUTER JOIN BSC_INSA_DEPT B
				 ON A.YEAR = B.YEAR
				AND A.DEPT_CD = B.DEPT_CD
	LEFT OUTER JOIN BSC_CODE C
				 ON C.CODE_GRP_ID = '171'
				AND A.YEAR = C.YEAR
				AND A.POS_TC = C.CODE_ID				
		WHERE A.YEAR = #findYear#
		   AND A.EMPN = #findEmpn#
	  ORDER BY A.START_PCMT_DATE
		         
	</select>
	
	<!--
    ==================================================================
      # 설명  : 발령대상자 수정 
      # 기능  : UPDATE
      # TABLE : BSC_INSA_PCMT
    ==================================================================
    -->
	<insert id="insertPcmtInfoData" parameterClass="hashMap">
		INSERT INTO BSC_INSA_PCMT (YEAR
								 , EMPN
								 , SER
								 , ORG_PCMT_DATE
								 , KOR_NM
								 , PCMT_TC
								 , PCMT_TC_NM
								 , DEPT_CD
								 , DEPT_KOR_NM
								 , CAST_TC
								 , POS_TC
								 , EMPM_KIND_TC
								 , EMPM_KIND_TC_NM
								 , USE_YN
								 , START_PCMT_DATE
								 , END_PCMT_DATE
								 , WORK_DAY
								 , WORK_MON
                     			  )
			 VALUES (              #year#
								 , #empn#
				  <dynamic>
					<isNotEmpty property="ser">
				      			 , #ser#
					</isNotEmpty>
					<isEmpty property="ser">
				     			 , (SELECT NVL(MAX(SER)+1,0) FROM BSC_INSA_PCMT) 
					</isEmpty>
					<isNotEmpty property="orgStartDt">
				      			 , REPLACE (#orgStartDt#, '.', '')
					</isNotEmpty>
					<isEmpty property="orgStartDt">
				 				, REPLACE (#pcmtStartDt#, '.', '')
					</isEmpty>
				  </dynamic>         
								, #korNm#
								, #pcmtTc#
								, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = #findYear# AND CODE_GRP_ID = '169'AND CODE_ID =#pcmtTc#)
								, #deptCd#
								, (SELECT DEPT_KOR_NM FROM BSC_INSA_DEPT WHERE YEAR =#findYear# AND DEPT_CD = #deptCd#)
								, #castTc#
								, #posTc#
								, #empmKindTc#
								, (SELECT CODE_NM FROM BSC_CODE WHERE CODE_GRP_ID = '172' AND CODE_ID = #empmKindTc# )
								, (SELECT USE_YN FROM BSC_INSA_DEPT WHERE YEAR =#findYear# AND DEPT_CD = #deptCd#)
								, REPLACE (#pcmtStartDt#, '.', '')
								, REPLACE (#pcmtEndDt#, '.', '')
								, TO_DATE(REPLACE(#pcmtEndDt#, '.', '')) - TO_DATE(REPLACE(#pcmtStartDt#, '.', ''))+ 1
								, #workMon#
            		)
	</insert>
    
    <!--
	==================================================================   
	  # 설명	: 발령정보 총근무월수
	  #	기능	: UPDATE
	  #	TABLE	: BSC_INSA_PCMT
	==================================================================
	-->	
	<update id="insertotMonData" parameterClass="hashMap">
		UPDATE BSC_INSA_PCMT
	   	   SET TOT_MON = (SELECT SUM (WORK_MON) FROM BSC_INSA_PCMT WHERE EMPN = #empn# AND YEAR = #findYear#)
		 WHERE EMPN = #empn#
		   AND YEAR = #findYear#		
	</update>	
	
	<!--
    ==================================================================
      # 설명    : 발령정보 삭제
      # 기능    : DELETE
      # TABLE   : BSC_INSA_PCMT
    ==================================================================
    -->
    <delete id="deletePcmtInfoData" parameterClass="hashMap">
        DELETE FROM BSC_INSA_PCMT
         WHERE YEAR				= #year#
		   AND EMPN				= #empn#
		   AND ORG_PCMT_DATE	= REPLACE(#orgStartDt#,'.','')
		   AND SER    			= #ser#
    </delete>
    
	<!--
	==================================================================   
	  # 설명	: 직위코드 가져오기
	  #	기능	: SELECT
	  #	TABLE	: BSC_CODE
	==================================================================
	-->
	<select id="getPosTc" parameterClass="hashMap" resultClass="hashMap">
		 SELECT   A.CODE_ID AS POS_TC
				, A.CODE_NM AS POS_TC_NM
        		, '['||A.ETC1||']'||' '|| A.CODE_NM AS POS_TC_FULL
    	   FROM BSC_CODE A
		  WHERE CODE_GRP_ID = '171'
			AND YEAR = #findYear# 
			ORDER BY SORT_ORDER        

		         
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 인사정보 엑셀다운로드
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA
	==================================================================
	-->
	<select id="getInsaExcelList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
			 , A.EMPN
			 , A.KOR_NM
			 , A.DEPT_CD
			 , B.DEPT_KOR_NM
			 , A.CAST_TC
			 , A.POS_TC
			 , (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = #findYear# AND CODE_GRP_ID = '170' AND CODE_ID = A.CAST_TC) CAST_TC_NM
        	 , (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = #findYear# AND CODE_GRP_ID = '171' AND CODE_ID = A.POS_TC) POS_TC_NM
			 , C.CODE_NM EMPM_KIND_NM
			 , (  SELECT SUM (WORK_MON)
					FROM BSC_INSA_PCMT
				   WHERE A.YEAR = YEAR
					 AND A.EMPN = EMPN
				GROUP BY YEAR, EMPN) AS MON
		  FROM BSC_INSA A
	LEFT OUTER JOIN BSC_INSA_DEPT B
				 ON A.YEAR = B.YEAR
				AND A.DEPT_CD = B.DEPT_CD
	LEFT OUTER JOIN BSC_CODE C
				 ON C.CODE_GRP_ID = '172'
				AND A.EMPM_KIND_TC = C.CODE_ID				
		 WHERE A.YEAR = #findYear#
		   AND A.DEPT_CD IN ( SELECT DEPT_CD
								FROM BSC_INSA_DEPT
							   WHERE YEAR = #findYear#
						  START WITH DEPT_CD = #findDeptCd#
					CONNECT BY PRIOR YEAR = YEAR
								 AND PRIOR DEPT_CD = UP_DEPT_CD)
	  ORDER BY A.DEPT_CD, A.EMPN
		         
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 발령정보 엑셀다운로드
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_PCMT
	==================================================================
	-->
	<select id="getPcmtExcelList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
			 , A.EMPN
			 , A.KOR_NM
			 , A.PCMT_TC
			 , A.PCMT_TC_NM
			 , A.DEPT_CD
			 , B.DEPT_KOR_NM
			 , C.CODE_NM CAST_TC_NM
			 , D.CODE_NM POS_TC_NM
			 , A.START_PCMT_DATE
			 , A.END_PCMT_DATE
			 , A.EMPM_KIND_TC
			 , A.EMPM_KIND_TC_NM
			 , A.WORK_DAY
			 , A.TOT_MON
			 , A.WORK_MON
		  FROM BSC_INSA_PCMT A
	LEFT OUTER JOIN BSC_INSA_DEPT B
				 ON A.YEAR = B.YEAR
				AND A.DEPT_CD = B.DEPT_CD
	LEFT OUTER JOIN BSC_CODE C
				 ON C.CODE_GRP_ID = '170'
				AND A.YEAR = C.YEAR
				AND A.CAST_TC = C.CODE_ID
	LEFT OUTER JOIN BSC_CODE D
				 ON D.CODE_GRP_ID = '171'
				AND A.YEAR = D.YEAR
				AND A.POS_TC = D.CODE_ID
		 WHERE A.YEAR = #findYear#
		   AND A.DEPT_CD IN ( SELECT DEPT_CD
								FROM BSC_INSA_DEPT
							   WHERE YEAR = #findYear#
						  START WITH DEPT_CD = #findDeptCd#
							 CONNECT BY PRIOR YEAR = YEAR
								 AND PRIOR DEPT_CD = UP_DEPT_CD)
	  ORDER BY A.DEPT_CD, A.EMPN, A.START_PCMT_DATE
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 인사정보 입력(불러오기용)
	  #	기능	: INSERT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->	
	<insert id="insertInsaDept" parameterClass="hashMap">
		CALL KGS_INSA.BSC_INSA_DEPT(#findYear#)
	</insert>
		
	<!--
	==================================================================   
	  # 설명	: 발령정보 입력(불러오기용)
	  #	기능	: INSERT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->	
	<insert id="insertPcmtInfo" parameterClass="hashMap">
		CALL KGS_INSA.BSC_INSA_PCMT(#findYear#)
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 인사정보 입력(불러오기용)
	  #	기능	: INSERT
	  #	TABLE	: BSC_INSA
	==================================================================
	-->	
	<insert id="insertInsaInfo" parameterClass="hashMap">
		CALL KGS_INSA.BSC_INSA(#findYear#)
	</insert>
	
	<!--
	==================================================================   
	  # 설명	:  확정여부 확인
	  #	기능	: SELECT
	  #	TABLE	: PRS_CLOSING
	==================================================================
	-->	
	<select id="getConfirmYn" parameterClass="hashMap" resultClass="hashMap">
		SELECT INSA_INFO_YN
		  FROM PRS_CLOSING 
		 WHERE YEAR = #findYear#	
	</select>
	
	<!--
	==================================================================   
	  # 설명	:  확정 수정
	  #	기능	: UPDATE
	  #	TABLE	: PRS_CLOSING
	==================================================================
	-->	
	<insert id="insertInsaYnData" parameterClass="hashMap">
		MERGE INTO PRS_CLOSING A
        USING DUAL
           ON (A.YEAR = #findYear# )
         WHEN MATCHED THEN
                UPDATE SET A.INSA_INFO_YN = #insaYn#
                		 , A.MODIFY_DT = SYSDATE
         WHEN NOT MATCHED THEN
                INSERT (YEAR, INSA_INFO_YN, CREATE_DT)
                VALUES (#findYear#, #insaYn#, SYSDATE)
	</insert>
	
</sqlMap>