<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.mngCon.talkMngCon">

    <!--
    ==================================================================   
      # 설명    : typeAlias 선언
      #    기능    : SETTING
      #    TABLE    : 
    ==================================================================
    -->
    <typeAlias alias="hashMap"             type="java.util.HashMap" />
    
    <!--
    ==================================================================   
      # 설명    : 중간면담 목록 보기
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getTalkList" parameterClass="hashMap" resultClass="hashMap">
        SELECT A.YEAR
             , A.EVAL_MEMB_EMPN
             , A.EVAL_MEMB_EMPN_SEQ
             , A.KOR_NM
             , A.DEPT_CD
             , F_DEPT_FULL_NM(A.YEAR,A.DEPT_CD,'BSC_INSA_DEPT') DEPT_FULL_NM
             , A.CAST_TC
             , A.POS_TC
             , F_CODE_NM('170', A.CAST_TC , A.YEAR) CAST_TC_NM 
             , F_CODE_NM('171', A.POS_TC , A.YEAR) POS_TC_NM 
             , A.EVAL_YN
             , A.EVAL_GRP_ID
             , A.FROM_DT
             , A.TO_DT
             , B.PLAN_STATUS_ID
             , CASE WHEN B.PLAN_STATUS_ID IS NULL THEN '미입력' ELSE  F_CODE_NM('217', B.PLAN_STATUS_ID , B.YEAR)  END PLAN_STATUS_NM
             , A.PLAN_YN
             , B.APPROVE_DT
             ,  (SELECT COUNT(*) FROM CON_MNG_TALK 
                 WHERE A.YEAR = YEAR AND A.EVAL_MEMB_EMPN = EVAL_MEMB_EMPN AND A.EVAL_MEMB_EMPN_SEQ = EVAL_MEMB_EMPN_SEQ) TALK_CNT 
             , B1.ASSESSOR_EMPN
             , C1.KOR_NM       AS APPROVE_USER_NM
        FROM V_CON_MNG_MEMBER A
         LEFT OUTER JOIN CON_MNG_PLAN B ON A.YEAR = B.YEAR AND A.EVAL_MEMB_EMPN = B.EVAL_MEMB_EMPN AND A.EVAL_MEMB_EMPN_SEQ = B.EVAL_MEMB_EMPN_SEQ
          LEFT OUTER JOIN (
          SELECT A.YEAR
                     , A.DEPT_CD
                     <![CDATA[
                     , (SELECT EMPN FROM BSC_INSA WHERE YEAR = A.YEAR AND ROWNUM = '1' 
                     AND DEPT_CD = A.DEPT_CD AND POS_TC IN ('12', '21', '22', '2C', '31', '32', '34', '39') 
                     AND EMPN IN (SELECT EMPN FROM BSC_INSA_PCMT WHERE YEAR = #findYear#
                     AND END_PCMT_DATE = #findYear# ||'1231' and pcmt_tc <> '34')) ASSESSOR_EMPN
                     ]]>
                  FROM BSC_INSA_DEPT A
                 WHERE A.DEPT_CD IN (SELECT DEPT_CD
                                       FROM BSC_INSA_DEPT
                                      WHERE YEAR = #findYear#
                                 START WITH DEPT_CD = '0000'
                           CONNECT BY PRIOR YEAR = YEAR
                                        AND PRIOR DEPT_CD = UP_DEPT_CD)
                   AND A.DEPT_CD > '1090'
                   AND A.DEPT_CD IN (
                                        SELECT A.DEPT_CD
                                          FROM BSC_INSA_DEPT A
                                          LEFT OUTER JOIN BSC_INSA_DEPT B
                                            ON A.YEAR = B.YEAR AND A.USE_YN = B.USE_YN AND A.DEPT_CD = B.UP_DEPT_CD
                                         WHERE A.YEAR = #findYear#
                                           AND A.DEPT_CD > '1090'
                                         GROUP BY A.DEPT_CD
                                        HAVING COUNT(B.DEPT_CD) = 0
                                   )
                   AND A.YEAR = #findYear#
              ORDER BY A.DEPT_CD
              ) B1 ON A.YEAR = B1.YEAR  and A.DEPT_CD = B1.DEPT_CD
               LEFT OUTER JOIN BSC_INSA C1 ON B1.YEAR = C1.YEAR AND B1.ASSESSOR_EMPN = C1.EMPN
        WHERE A.YEAR= #findYear#
          AND A.EVAL_YN ='Y'
          <!-- AND A.PLAN_YN ='Y'  -->
          <isNotEqual prepend="AND" property="findDeptCd" compareValue="0000">
              A.DEPT_CD IN (SELECT DEPT_CD
						   FROM BSC_INSA_DEPT
						  WHERE YEAR = #findYear#
					 START WITH DEPT_CD = #findDeptCd#
			   CONNECT BY PRIOR YEAR = YEAR
							AND PRIOR DEPT_CD = UP_DEPT_CD)
        </isNotEqual>
        <isNotEmpty prepend="AND" property="findKorNm">
            UPPER(A.KOR_NM) LIKE  '%' || TRIM(UPPER(#findKorNm#)) ||'%'
	   	</isNotEmpty>
	   	<isNotEqual prepend="AND" property="isAdmin" compareValue="Y">
	   	    (
        </isNotEqual>  	
	   	<isEqual property="isManager" compareValue="Y">
             B1.ASSESSOR_EMPN = #loginUserId#
        </isEqual>
        <isNotEmpty property="findEvalMembEmpn" >
            <isEqual property="isManager" compareValue="Y">
                OR
            </isEqual>
			A.EVAL_MEMB_EMPN = #findEvalMembEmpn#
		</isNotEmpty>
		<isNotEqual property="isAdmin" compareValue="Y">
            )
        </isNotEqual>
		  ORDER BY A.KOR_NM, A.EVAL_MEMB_EMPN, A.EVAL_MEMB_EMPN_SEQ   
    </select>
     

    <!--
    ==================================================================   
      # 설명    : 직원개인업무성과 중간면담 목록 보기
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getList" parameterClass="hashMap" resultClass="hashMap">
        SELECT A.TALK_SEQ
			 , A.TALK_USER_ID
			 , A.TALK_USER_NM
		 	 , A.TALK_DT
			 , A.TALK_CONTENT
			 , A.ANSWER_DT
			 , A.ANSWER_CONTENT  
			 , (SELECT KOR_NM FROM BSC_INSA WHERE YEAR = #findYear# AND EMPN = A.EVAL_MEMB_EMPN) AS ANSWER_USER_NM
	    FROM CON_MNG_TALK A
	    	WHERE A.YEAR		 	  = #findYear#
		  AND A.EVAL_MEMB_EMPN      = #evalMembEmpn#
		  AND A.EVAL_MEMB_EMPN_SEQ  = #evalMembEmpnSeq#    
	    ORDER BY A.TALK_SEQ  
    </select>
    
    <!--
    ==================================================================   
      # 설명    : 직원개인업무성과 중간면담 상세 보기
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
         SELECT TALK_SEQ
			 , TALK_USER_ID
			 , TALK_USER_NM
		 	 , TALK_DT
			 , TALK_CONTENT
			 , ANSWER_DT
			 , ANSWER_CONTENT 
	    FROM CON_MNG_TALK
		WHERE YEAR		 	  	  = #findYear#
		  AND EVAL_MEMB_EMPN      = #evalMembEmpn#
		  AND EVAL_MEMB_EMPN_SEQ  = #evalMembEmpnSeq#
		  AND TALK_SEQ 			  = #talkSeq#           
    </select>
    
    <!--
    ==================================================================   
      # 설명    : 직원개인업무성과 중간면담 등록
      #    기능    : INSERT
      #    TABLE    : 
    ==================================================================
    -->    
    <insert id="insertData" parameterClass="hashMap">
        <selectKey resultClass="java.lang.String" keyProperty="SEQ" >
            SELECT NVL(MAX(TALK_SEQ)+1,1) AS SEQ
			  FROM CON_MNG_TALK
			 WHERE YEAR       		   = #findYear#
			  AND  EVAL_MEMB_EMPN      = #evalMembEmpn#
			  AND  EVAL_MEMB_EMPN_SEQ  = #evalMembEmpnSeq#
        </selectKey>
        INSERT INTO  CON_MNG_TALK ( 
        				YEAR
					, EVAL_MEMB_EMPN
					, EVAL_MEMB_EMPN_SEQ
					, TALK_SEQ
					, TALK_USER_ID
					, TALK_USER_NM
					, TALK_DEPT_CD
					, TALK_DEPT_NM
					, TALK_CAST_TC
					, TALK_CAST_NM
					, TALK_POS_TC
					, TALK_POS_NM
					, TALK_DT
					, TALK_CONTENT
					, ANSWER_DT
					, ANSWER_CONTENT
					, CREATE_ID
					, CREATE_DT
				)
				 SELECT  #findYear#, #evalMembEmpn# , #evalMembEmpnSeq# , #SEQ#
 						, A.EMPN , A.KOR_NM , A.DEPT_CD , B.DEPT_KOR_NM , A.CAST_TC
                        , F_CODE_NM('170', A.CAST_TC , A.YEAR) CAST_TC_NM , A.POS_TC
               			, F_CODE_NM('171', A.POS_TC , A.YEAR) POS_TC_NM  , #talkDt# AS TALK_DT
               			, #talkContent#, #answerDt# AS ANSWER_DT, #answerContent# , A.EMPN AS CREATE_ID , SYSDATE AS CREATE_DT
         			 FROM BSC_INSA A
			        LEFT OUTER JOIN BSC_INSA_DEPT B ON A.YEAR = B.YEAR AND A.DEPT_CD = B.DEPT_CD  
			         WHERE A.YEAR = #findYear#  AND  A.EMPN  = #talkUserId#
           
    </insert>    
    
    <!--
    ==================================================================   
      # 설명    : 직원개인업무성과 중간면담 등록
      #    기능    : INSERT
      #    TABLE    : 
    ==================================================================
    -->    
    <insert id="insertAdminData" parameterClass="hashMap">
        <selectKey resultClass="java.lang.String" keyProperty="SEQ" >
            SELECT NVL(MAX(TALK_SEQ)+1,1) AS SEQ
			  FROM CON_MNG_TALK
			 WHERE YEAR       		   = #findYear#
			  AND  EVAL_MEMB_EMPN      = #evalMembEmpn#
			  AND  EVAL_MEMB_EMPN_SEQ  = #evalMembEmpnSeq#
        </selectKey>
        INSERT INTO  CON_MNG_TALK ( 
        				YEAR
					, EVAL_MEMB_EMPN
					, EVAL_MEMB_EMPN_SEQ
					, TALK_SEQ
					, TALK_USER_ID
					, TALK_USER_NM
					, TALK_DEPT_CD
					, TALK_DEPT_NM
					, TALK_CAST_TC
					, TALK_CAST_NM
					, TALK_POS_TC
					, TALK_POS_NM
					, TALK_DT
					, TALK_CONTENT
					, ANSWER_DT
					, ANSWER_CONTENT
					, CREATE_ID
					, CREATE_DT
				)
				 SELECT  #findYear#, #evalMembEmpn# , #evalMembEmpnSeq# , #SEQ#,
 						  A.USER_ID , A.USER_NM , A.DEPT_CD , A.DEPT_NM, A.CAST_TC , A.CAST_TC_NM  ,           
            				A.POS_CD ,  A.POS_NM, #talkDt# AS TALK_DT
               			, #talkContent#, #answerDt# AS ANSWER_DT, #answerContent#, A.USER_ID AS CREATE_ID , SYSDATE AS CREATE_DT
         			 FROM V_ROLE_USER A
			         WHERE A.USER_ID  = #talkUserId#
           
    </insert>    
    
    <!--
    ==================================================================   
      # 설명    : 직원개인업무성과 중간면담 수정
      #    기능    : UPDATE
      #    TABLE    : 
    ==================================================================
    -->    
    <update id="updateData" parameterClass="hashMap">
         UPDATE  CON_MNG_TALK
           SET ( TALK_USER_ID
			  , TALK_USER_NM
			  , TALK_DEPT_CD
			  , TALK_DEPT_NM
			  , TALK_CAST_TC
			  , TALK_CAST_NM
			  , TALK_POS_TC
			  , TALK_POS_NM
			  , TALK_DT
			  , TALK_CONTENT
			  , ANSWER_DT
			  , ANSWER_CONTENT
			  , MODIFY_ID
			  , MODIFY_DT
				) = (
				 SELECT   A.EMPN , A.KOR_NM , A.DEPT_CD , B.DEPT_KOR_NM , A.CAST_TC
                        , F_CODE_NM('170', A.CAST_TC , A.YEAR) CAST_TC_NM , A.POS_TC
               			, F_CODE_NM('171', A.POS_TC , A.YEAR) POS_TC_NM  , #talkDt# AS TALK_DT
               			, #talkContent#, #answerDt# AS ANSWER_DT, #answerContent# , A.EMPN AS MODIFY_ID , SYSDATE AS MODIFY_DT
         			 FROM BSC_INSA A
			        LEFT OUTER JOIN BSC_INSA_DEPT B ON A.YEAR = B.YEAR AND A.DEPT_CD = B.DEPT_CD  
			         WHERE A.YEAR = #findYear#  AND  A.EMPN  = #approveUserId#
			     )
			     WHERE YEAR		 	  	   = #findYear#
				   AND EVAL_MEMB_EMPN      = #evalMembEmpn#
				   AND EVAL_MEMB_EMPN_SEQ  = #evalMembEmpnSeq#
				   AND TALK_SEQ 		   = #talkSeq# 
        
    </update>    
    
    <!--
    ==================================================================   
      # 설명    : 직원개인업무성과 중간면담 수정
      #    기능    : UPDATE
      #    TABLE    : 
    ==================================================================
    -->    
    <update id="updateAdminData" parameterClass="hashMap">
         UPDATE  CON_MNG_TALK
           SET ( TALK_USER_ID
			  , TALK_USER_NM
			  , TALK_DEPT_CD
			  , TALK_DEPT_NM
			  , TALK_CAST_TC
			  , TALK_CAST_NM
			  , TALK_POS_TC
			  , TALK_POS_NM
			  , TALK_DT
			  , TALK_CONTENT
			  , ANSWER_DT
			  , ANSWER_CONTENT
			  , MODIFY_ID
			  , MODIFY_DT
				) = (
				 SELECT   A.USER_ID , A.USER_NM , A.DEPT_CD , A.DEPT_NM , A.CAST_TC
                        , A.CAST_TC_NM , A.POS_CD , A.POS_NM , #talkDt# AS TALK_DT
               			, #talkContent#, #answerDt# AS ANSWER_DT, #answerContent# , A.USER_ID AS MODIFY_ID , SYSDATE AS MODIFY_DT
         			 FROM V_ROLE_USER A
			         WHERE A.USER_ID  = #approveUserId#
			     )
			     WHERE YEAR		 	  	   = #findYear#
				   AND EVAL_MEMB_EMPN      = #evalMembEmpn#
				   AND EVAL_MEMB_EMPN_SEQ  = #evalMembEmpnSeq#
				   AND TALK_SEQ 		   = #talkSeq# 
        
    </update>    
    

    <!--
    ==================================================================   
      # 설명    : 직원개인업무성과 중간면담 삭제
      #    기능    : UPDATE
      #    TABLE    : 
    ==================================================================
    -->    
    <update id="deleteData" parameterClass="hashMap">
         DELETE FROM  CON_MNG_TALK
        WHERE YEAR		 	  	  = #findYear#
		  AND EVAL_MEMB_EMPN      = #evalMembEmpn#
		  AND EVAL_MEMB_EMPN_SEQ  = #evalMembEmpnSeq#
		  AND TALK_SEQ 			  = #talkSeq#  
    </update>
    
    
</sqlMap>


