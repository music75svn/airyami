<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >


<sqlMap namespace="cateTree">
	<typeAlias alias="ValueMap" type="egovframework.airyami.cmm.util.ValueMap"/>
	
	<select id="cateTree.getCateList" parameterClass="Map" resultClass="ValueMap" >

	SELECT  /* CateTree_Mysql.xml  cateTree.getCateList */
	        hi.CATE_CODE
	       ,B.CATE_NAME
	       ,hi.UPPER_CATE_CODE 
	       ,LEVEL 
	       ,hi.CATE_LEVEL
           ,CATE_ORDER
           ,CASE  
           		WHEN CATE_LEVEL = 1 
		        THEN CATE_ORDER * 1000000
		        WHEN CATE_LEVEL = 2 
		        THEN (SELECT CATE_ORDER * 1000000 FROM TB_CATEGORY WHERE CATE_CODE = substring(hi.CATE_CODE, 1, 3))
		             + CATE_ORDER * 10000
		        WHEN CATE_LEVEL = 3 
		        THEN (SELECT CATE_ORDER * 1000000 FROM TB_CATEGORY WHERE CATE_CODE = substring(hi.CATE_CODE, 1, 3))
		             + (SELECT CATE_ORDER * 10000 FROM TB_CATEGORY WHERE CATE_CODE = substring(hi.CATE_CODE, 1, 5))
		             + CATE_ORDER * 100
				WHEN CATE_LEVEL = 4 
		        THEN (SELECT CATE_ORDER * 1000000 FROM TB_CATEGORY WHERE CATE_CODE = substring(hi.CATE_CODE, 1, 3))
		             + (SELECT CATE_ORDER * 10000 FROM TB_CATEGORY WHERE CATE_CODE = substring(hi.CATE_CODE, 1, 5))
		             + (SELECT CATE_ORDER * 100 FROM TB_CATEGORY WHERE CATE_CODE = substring(hi.CATE_CODE, 1, 7))
		             + CATE_ORDER
		        ELSE CATE_ORDER
			  END AS ORDERS
	  FROM (
	  		SELECT @RNUM := @RNUM + 1 AS LEVEL_ORDER
	  			  ,A.*
	  	      FROM(
					SELECT hierarchy_connect_by_parent_eq_prior_id_cate(CATE_CODE) AS CATE_CODE, @level AS level
					  FROM (
							SELECT  @start_with := (SELECT UPPER_CATE_CODE 
							                          FROM TB_CATEGORY 
							                         WHERE CATE_LEVEL = 0
							                        ),
									@id := @start_with,
									@level := 0
							) vars
						  ,TB_CATEGORY
					 WHERE  @id IS NOT NULL
	  	          )A
	  	         ,(SELECT @RNUM:=0) TMP
   		   ) ho       
   		  ,(SELECT A.*
		          ,IFNULL(B.CATE_ORDER, 0) AS UPPER_CATE_ORDER
	          FROM TB_CATEGORY A
				   LEFT OUTER JOIN TB_CATEGORY B
				   ON B.CATE_CODE = A.UPPER_CATE_CODE
		  ) hi
		  ,TB_CATEGORY_NM B
	 WHERE hi.CATE_CODE = ho.CATE_CODE
	   AND hi.CATE_CODE 		= B.CATE_CODE
	   AND B.LANG_CD = #LANG_CD#
     ORDER BY ORDERS
	</select>
	
	<select id="cateTree.selectCate" parameterClass="Map" resultClass="ValueMap" >
			SELECT  /* CateTree_Mysql.xml  cateTree.selectCate */
				  	A.CATE_CODE
			      , A.UPPER_CATE_CODE
			      , IFNULL((SELECT CATE_NAME FROM TB_CATEGORY_NM WHERE CATE_CODE = A.UPPER_CATE_CODE), ' ') AS UPPER_CATE_NAME
			      , B.CATE_NAME
			      , A.CATE_LEVEL
			      , A.CATE_ORDER
			      , A.USE_YN
			      , IF((SELECT COUNT(1) 
	                      FROM TB_CATEGORY C 
						 WHERE C.CATE_CODE LIKE CONCAT(A.CATE_CODE, '%')) = 1, 'Y', 'N') AS ISLEAF_YN      
			  FROM TB_CATEGORY A
				  ,TB_CATEGORY_NM B
			 WHERE A.CATE_CODE = B.CATE_CODE 
			   AND A.CATE_CODE = #CATE_CODE#
			   AND B.LANG_CD = #LANG_CD#
	</select>
	
	
	<select id="cateTree.selectCateOrderMax" parameterClass="Map" resultClass="java.lang.Integer" >
			  SELECT /* CateTree_Mysql.xml  cateTree.selectCateOrderMax */ 
			         IFNULL(MAX(CATE_ORDER), 1) AS MAX_CATE_ORDER
	            FROM TB_CATEGORY
	           WHERE UPPER_CATE_CODE = #UPPER_CATE_CODE#
	</select>
	
	<update id="cateTree.updateCate" parameterClass="Map" >
			UPDATE TB_CATEGORY /* CateTree_Mysql.xml  cateTree.updateCate */ 
			SET  
				 CATE_ORDER    = #CATE_ORDER# 
				,USE_YN        = #USE_YN#       
				,UPDATE_USER_ID   = #LOGIN_ID#
				,UPDATE_DT        = DATE_FORMAT(now(), '%Y%m%d')    
			WHERE CATE_CODE = #CATE_CODE#
	</update>
	 
	<update id="cateTree.updateCateNm" parameterClass="Map" >
		INSERT /* CateTree_Mysql.xml  cateTree.updateCateNm */
		  INTO TB_CATEGORY_NM
			(
			CATE_CODE,
			LANG_CD,
			CATE_NAME,
			INSERT_USER_ID,
			INSERT_DT)
			VALUES
			(
			#CATE_CODE#,
			#LANG_CD#,
			#CATE_NAME#,
			#LOGIN_ID#,
			DATE_FORMAT(now(), '%Y%m%d%H%i%s')
			)
		ON DUPLICATE KEY UPDATE
			CATE_NAME = #CATE_NAME#,
			UPDATE_USER_ID = #LOGIN_ID#,
			UPDATE_DT = DATE_FORMAT(now(), '%Y%m%d%H%i%s'
			)
	</update> 
	
	<update id="cateTree.updateCateOrderDown" parameterClass="Map" >
			UPDATE TB_CATEGORY /* CateTree_Mysql.xml  cateTree.updateCateOrderDown */
			SET    
				 CATE_ORDER    		= CATE_ORDER - 1 
				,UPDATE_USER_ID     = #LOGIN_ID#         
				,UPDATE_DT        	= DATE_FORMAT(now(), '%Y%m%d%H%i%s') 
			WHERE UPPER_CATE_CODE 	= #UPPER_CATE_CODE#
			  AND CATE_ORDER <![CDATA[ > ]]> #OLD_CATE_ORDER#
			  AND CATE_ORDER <![CDATA[ <= ]]> #CATE_ORDER#
	</update> 
	
	
	<update id="cateTree.updateCateOrderUp" parameterClass="Map" >
			UPDATE TB_CATEGORY /* CateTree_Mysql.xml  cateTree.updateCateOrderUp */
			SET    
				CATE_ORDER    		= CATE_ORDER + 1 
				,UPDATE_USER_ID     = #LOGIN_ID#         
				,UPDATE_DT        	= DATE_FORMAT(now(), '%Y%m%d%H%i%s')
			WHERE UPPER_CATE_CODE 	= #UPPER_CATE_CODE#
			  AND CATE_ORDER <![CDATA[ < ]]>  #OLD_CATE_ORDER#
			  AND CATE_ORDER  <![CDATA[ >= ]]> #CATE_ORDER#
	</update> 
	
	<insert id="cateTree.insertCate" parameterClass="Map" >
		INSERT INTO TB_CATEGORY /* CateTree_Mysql.xml  cateTree.insertCate */
			(CATE_CODE
			,UPPER_CATE_CODE
			,CATE_LEVEL
			,CATE_ORDER
			,USE_YN
			,INSERT_USER_ID
			,INSERT_DT
			,UPDATE_USER_ID
			,UPDATE_DT) 
		VALUES( 
			 #CATE_CODE# 
			,#UPPER_CATE_CODE#
			,#CATE_LEVEL#
			,#CATE_ORDER# 
			,#USE_YN#
			,#LOGIN_ID#
			,DATE_FORMAT(now(), '%Y%m%d%H%i%s')
			,#LOGIN_ID#
			,DATE_FORMAT(now(), '%Y%m%d%H%i%s')
			)
	</insert>
	
	<insert id="cateTree.insertCateNm" parameterClass="Map" >
		INSERT /* CateTree_Mysql.xml  cateTree.insertCateNm */
		  INTO TB_CATEGORY_NM(
		       CATE_CODE
		      ,LANG_CD
		      ,CATE_NAME
		      ,INSERT_USER_ID
			  ,INSERT_DT
			  ,UPDATE_USER_ID
			  ,UPDATE_DT)
		VALUES(
		       #CATE_CODE#
		      ,#LANG_CD#
		      ,#CATE_NAME#
		      ,#LOGIN_ID#
			  ,DATE_FORMAT(now(), '%Y%m%d%H%i%s')
			  ,#LOGIN_ID#
			  ,DATE_FORMAT(now(), '%Y%m%d%H%i%s')
		      )
	</insert>
	
	<select id="cateTree.selectInsertedCate" parameterClass="Map" resultClass="ValueMap"  >
		SELECT /* CateTree_Mysql.xml cateTree.selectInsertedCate */
		       CONCAT(#UPPER_CATE_CODE#, IF(IFNULL(MAX(CATE_CODE), '9999') = '9999', '01', LPAD(CONVERT(SUBSTRING(MAX(CATE_CODE), LENGTH(UPPER_CATE_CODE)+1, 2), UNSIGNED) + 1, 2, '0'))) AS CATE_CODE
		      ,(SELECT CATE_LEVEL + 1 FROM TB_CATEGORY WHERE CATE_CODE = #UPPER_CATE_CODE#) AS CATE_LEVEL
		      ,IFNULL(MAX(CATE_ORDER), 0) + 1 AS CATE_ORDER
		  FROM TB_CATEGORY
		 WHERE UPPER_CATE_CODE = #UPPER_CATE_CODE#
		   AND CATE_CODE != '1999'	/*template 메뉴제외 */
	</select>
	
	<delete id="cateTree.deleteCateNm" parameterClass="Map">
	DELETE /* CateTree_Mysql.xml  cateTree.deleteCateNm */
	  FROM TB_CATEGORY_NM
	 WHERE CATE_CODE = #CATE_CODE#
	</delete>
	
	<delete id="cateTree.deleteCate" parameterClass="Map">
	DELETE /* CateTree_Mysql.xml  cateTree.deleteCate */
	  FROM TB_CATEGORY
	 WHERE CATE_CODE = #CATE_CODE#
	</delete>
	
</sqlMap>