<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.matrix.matrixItemWeight">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: BSC_MAT_ITEM
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 평가항목가중치 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_MAT_ITEM
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR,
               A.ITEM_GRP_ID,
               A.ITEM_GRP_NM,
               B.ITEM_ID,
               B.ITEM_NM, WEIGHT,
               COUNT(B.ITEM_ID) OVER(PARTITION BY A.YEAR, A.ITEM_GRP_ID) ITEM_CNT      
          FROM BSC_MAT_ITEM_GRP A
          LEFT OUTER JOIN BSC_MAT_ITEM B ON A.YEAR=B.YEAR AND A.ITEM_GRP_ID=B.ITEM_GRP_ID
         WHERE A.YEAR=#findYear#
         ORDER BY A.SORT_ORDER, B.SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가항목가중치 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_MAT_ITEM
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR                  
			 , ITEM_ID               
			 , ITEM_NM               
			 , ITEM_GRP_ID           
			 , CONTENT               
			 , SORT_ORDER            
			 , WEIGHT                
		  FROM BSC_MAT_ITEM 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND ITEM_ID = #itemId#	      
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가항목가중치 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_MAT_ITEM
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		<selectKey resultClass="java.lang.String" keyProperty="SEQ" >
			SELECT F_PGM_SERI('BSC_MAT_ITEM','','','','','') SEQ FROM DUAL
		</selectKey>
		INSERT INTO BSC_MAT_ITEM ( 
			   YEAR
			 , ITEM_ID
			 , ITEM_NM
			 , ITEM_GRP_ID
			 , CONTENT
			 , SORT_ORDER
			 , CREATE_DT
			 , WEIGHT
			 ) VALUES ( 
			   #year#
			 , #SEQ#
			 , #itemNm#
			 , #itemGrpId#
			 , #content#
			 , #sortOrder#
			 , SYSDATE
			 , #weight#
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 평가항목가중치 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_MAT_ITEM
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE BSC_MAT_ITEM 
		   SET WEIGHT                 = #weight# 
		 WHERE YEAR = #year#
		   AND ITEM_ID = #itemId#		
	</update>	
	

	<!--
	==================================================================   
	  # 설명	: 평가항목가중치 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_MAT_ITEM
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM BSC_MAT_ITEM 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND ITEM_ID = #itemId#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 년마감 여부 보기
	  #	기능	: SELECT
	  #	TABLE	: STR_METRIC_CLOSING
	==================================================================
	-->
	<select id="getYearClosingYn" parameterClass="hashMap" resultClass="java.lang.String">
			SELECT CASE WHEN COUNT(*)=0 THEN 'N' ELSE 'Y' END CLOSING_YN
              FROM BSC_MAT_EVAL_USER_GRP
             WHERE YEAR =#findYear#
               AND EVAL_CLOSING_YN='Y'
	</select>	
	
</sqlMap>


