<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="str.tam.targetStatus">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: STR_METRIC_TARGET_STATUS
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 목표입력/승인현황 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: STR_METRIC_TARGET_STATUS
	==================================================================
	-->
	<select id="getInsertList" parameterClass="hashMap" resultClass="hashMap">
		SELECT * 
          FROM (
	        SELECT YEAR,
                    CHARGE_USER_ID, 
                    CHARGE_USER_NM,
                    EMAIL,
                    CHARGE_DEPT_ID,
                    CHARGE_DEPT_NM,
                    COUNT(DISTINCT SUBJECT_METRIC_ID) TOT_CNT,
                    COUNT(CASE WHEN TARGET_STATUS_ID = '01' THEN 1 END) AS CNT01,
                    COUNT(CASE WHEN TARGET_STATUS_ID = '02' THEN 1 END) AS CNT02,
                    COUNT(CASE WHEN TARGET_STATUS_ID = '03' THEN 1 END) AS CNT03,
                    COUNT(CASE WHEN TARGET_STATUS_ID = '04' THEN 1 END) AS CNT04,
                    COUNT(CASE WHEN TARGET_STATUS_ID = '05' THEN 1 END) AS CNT05
	           FROM(         
	                    SELECT A.YEAR,
                                A.SUBJECT_METRIC_ID,
                                A.CHARGE_USER_ID,
                                B.USER_NM AS CHARGE_USER_NM,
                                B.EMAIL,
                                A.CHARGE_DEPT_ID,
                                C.DEPT_NM AS CHARGE_DEPT_NM,
                                NVL(D.TARGET_STATUS_ID, '01') AS TARGET_STATUS_ID
	                      FROM STR_METRIC A
	                      LEFT OUTER JOIN V_ROLE_USER B ON A.CHARGE_USER_ID = B.USER_ID 
	                      LEFT OUTER JOIN V_DEPTINFO C ON A.CHARGE_DEPT_ID = C.DEPT_ID
	                      LEFT OUTER JOIN STR_METRIC_TARGET_STATUS D ON A.YEAR=D.YEAR AND A.SUBJECT_METRIC_ID=D.SUBJECT_METRIC_ID
	                     WHERE A.YEAR=#findYear#
	                       AND A.METRIC_ID IS NULL
	                    )
	            GROUP BY YEAR, CHARGE_USER_ID, CHARGE_USER_NM, EMAIL, CHARGE_DEPT_ID, CHARGE_DEPT_NM
		   )
		 WHERE 1=1    
		 <dynamic>
		   	<isEqual prepend="AND" property="findStatus" compareValue="Y">
            	TOT_CNT = CNT04
		    </isEqual>
		    <isEqual prepend="AND" property="findStatus" compareValue="N">
            	TOT_CNT != CNT04
		    </isEqual>  
	    </dynamic>
		 ORDER BY CHARGE_USER_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 목표승인현황 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: STR_METRIC_TARGET_STATUS
	==================================================================
	-->
	<select id="getApproveList" parameterClass="hashMap" resultClass="hashMap">
		SELECT * 
          FROM (
	        SELECT YEAR,
                    APPROVE_USER_ID, 
                    APPROVE_USER_NM,
                    EMAIL,
                    APPROVE_DEPT_ID,
                    APPROVE_DEPT_NM,
                    COUNT(DISTINCT SUBJECT_METRIC_ID) TOT_CNT,
                    COUNT(CASE WHEN TARGET_STATUS_ID = '01' THEN 1 END) AS CNT01,
                    COUNT(CASE WHEN TARGET_STATUS_ID = '02' THEN 1 END) AS CNT02,
                    COUNT(CASE WHEN TARGET_STATUS_ID = '03' THEN 1 END) AS CNT03,
                    COUNT(CASE WHEN TARGET_STATUS_ID = '04' THEN 1 END) AS CNT04,
                    COUNT(CASE WHEN TARGET_STATUS_ID = '05' THEN 1 END) AS CNT05
	           FROM(         
	                    SELECT A.YEAR,
                                A.SUBJECT_METRIC_ID,
                                A.APPROVE_USER_ID,
                                B.USER_NM AS APPROVE_USER_NM,
                                B.EMAIL,
                                A.APPROVE_DEPT_ID,
                                C.DEPT_NM AS APPROVE_DEPT_NM,
                                NVL(D.TARGET_STATUS_ID, '01') AS TARGET_STATUS_ID
	                      FROM STR_METRIC A
	                      LEFT OUTER JOIN V_ROLE_USER B ON A.APPROVE_USER_ID = B.USER_ID 
	                      LEFT OUTER JOIN V_DEPTINFO C ON A.CHARGE_DEPT_ID = C.DEPT_ID
	                      LEFT OUTER JOIN STR_METRIC_TARGET_STATUS D ON A.YEAR=D.YEAR AND A.SUBJECT_METRIC_ID=D.SUBJECT_METRIC_ID
	                     WHERE A.YEAR=#findYear#
	                       AND A.METRIC_ID IS NULL
	                    )
	            GROUP BY YEAR, APPROVE_USER_ID, APPROVE_USER_NM, EMAIL, APPROVE_DEPT_ID, APPROVE_DEPT_NM
		   )
		 WHERE 1=1    
		 <dynamic>
		   	<isEqual prepend="AND" property="findStatus" compareValue="Y">
            	TOT_CNT = CNT04
		    </isEqual>
		    <isEqual prepend="AND" property="findStatus" compareValue="N">
            	TOT_CNT != CNT04
		    </isEqual>  
	    </dynamic>
		 ORDER BY APPROVE_USER_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 파라미터 맵
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<parameterMap id="paramMap" class="java.util.HashMap">
		<parameter property="year" 			jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>
	</parameterMap>	
	
	<!--
	==================================================================   
	  # 설명	: 데이터집계관리 프로시저 호출
	  #	기능	: CALL PROCEDURE
	  #	TABLE	: 
	==================================================================
	-->	
	<procedure id="callSpTargetProc"  parameterMap="paramMap">
		{CALL  SP_STR_TARGET(?)} 
    </procedure>
	
		
</sqlMap>


