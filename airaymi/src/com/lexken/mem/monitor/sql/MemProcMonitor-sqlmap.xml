<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="mem.monitor.memProcMonitor">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: MEM_DISSENT
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 업무진행사항 모니터링 지표관리현황
	  #	기능	: SELECT
	  #	TABLE	: BSC_CODE, MEM_USER
	==================================================================
	-->
	<select id="getMetricInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       SUM(MAX(METRIC_STATUS_COUNT)) AS METRIC_STATUS_COUNT_TOT
		     , MAX(DECODE(METRIC_STATUS_ID, '01', SUM(METRIC_STATUS_COUNT))) AS METRIC_STATUS_COUNT_01
		     , MAX(DECODE(METRIC_STATUS_ID, '02', SUM(METRIC_STATUS_COUNT))) AS METRIC_STATUS_COUNT_02
		     , MAX(DECODE(METRIC_STATUS_ID, '03', SUM(METRIC_STATUS_COUNT))) AS METRIC_STATUS_COUNT_03
		     , MAX(DECODE(METRIC_STATUS_ID, '04', SUM(METRIC_STATUS_COUNT))) AS METRIC_STATUS_COUNT_04
		     , MAX(DECODE(METRIC_STATUS_ID, '05', SUM(METRIC_STATUS_COUNT))) AS METRIC_STATUS_COUNT_05
		  FROM(  
		    SELECT A.CODE_ID AS METRIC_STATUS_ID
		         , A.CODE_NM AS METRIC_STATUS_NM
		         , NVL(B.METRIC_STATUS_COUNT, 0) AS METRIC_STATUS_COUNT
		      FROM (
		            SELECT A.CODE_ID, A.CODE_NM, SORT_ORDER FROM BSC_CODE A WHERE A.CODE_GRP_ID = '244' AND A.DELETE_DT IS NULL
		         ) A
		         , (
		            SELECT
		                   A.YEAR
		                 , NVL(A.METRIC_STATUS_ID, '01') AS METRIC_STATUS_ID
		                 , COUNT(NVL(A.METRIC_STATUS_ID, '01')) AS METRIC_STATUS_COUNT
		              FROM MEM_USER A
		             WHERE A.YEAR = #findYear#
		             GROUP BY A.YEAR, A.METRIC_STATUS_ID
		         ) B
		     WHERE 1 = 1
		       AND A.CODE_ID = B.METRIC_STATUS_ID(+)
			) A
		 GROUP BY A.METRIC_STATUS_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 업무진행사항 모니터링 실적입력현황
	  #	기능	: SELECT
	  #	TABLE	: MEM_USER, MEM_JOB_DESC, MEM_METRIC, MEM_ACT_IN
	==================================================================
	-->
	<select id="getActInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       COUNT(A.EMP_NO) AS ACT_TOT_COUNT
		     , COUNT(B.EMP_NO) AS DESC_COUNT
		     , COUNT(A.EMP_NO) - COUNT(B.EMP_NO) AS NOT_DESC_COUNT
		     , COUNT(A.EMP_NO) - COUNT(C.EMP_NO) AS ACT_COUNT
		     , COUNT(C.EMP_NO) AS NOT_ACT_COUNT
		  FROM MEM_USER A
		     , MEM_JOB_DESC B
		     , (
				SELECT DISTINCT
		               M.YEAR
                     , M.MON
                     , C.EMP_NO
		          FROM MEM_METRIC C
                     , MEM_METRIC_MON M
		             , MEM_ACT_IN D
		         WHERE 1=1
                   AND C.YEAR = M.YEAR
		           AND C.METRIC_ID = M.METRIC_ID
		           AND M.YEAR = D.YEAR(+)
		           AND M.METRIC_ID = D.METRIC_ID(+)
		           AND M.MON = D.MON(+)
		           AND M.YEAR = #findYear#
		           AND M.MON = LPAD(#findMon#, 2, '0')
                   AND C.TYPE_ID = '01'
                   AND D.VALUE IS NULL
                   AND C.DELETE_DT IS NULL
                   AND M.DELETE_DT IS NULL
		     ) C
		 WHERE 1 = 1
		   AND A.YEAR = #findYear#
		   AND A.YEAR = B.YEAR(+)
		   AND A.EMP_NO = B.EMP_NO(+)
		   AND A.YEAR = C.YEAR(+)
		   AND A.EMP_NO = C.EMP_NO(+)
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 업무진행사항 모니터링 면담관리현황
	  #	기능	: SELECT
	  #	TABLE	: MEM_USER, MEM_MEET
	==================================================================
	-->
	<select id="getMeetInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       COUNT(A.EMP_NO) AS TOT_COUNT
		     , NVL(MAX(Q1.REQ_COUNT), 0) AS Q1_REQ_COUNT
		     , NVL(MAX(Q1.COM_COUNT), 0) AS Q1_COM_COUNT
		     , NVL(MAX(Q2.REQ_COUNT), 0) AS Q2_REQ_COUNT
		     , NVL(MAX(Q2.COM_COUNT), 0) AS Q2_COM_COUNT
		     , NVL(MAX(Q3.REQ_COUNT), 0) AS Q3_REQ_COUNT
		     , NVL(MAX(Q3.COM_COUNT), 0) AS Q3_COM_COUNT
		     , NVL(MAX(Q4.REQ_COUNT), 0) AS Q4_REQ_COUNT
		     , NVL(MAX(Q4.COM_COUNT), 0) AS Q4_COM_COUNT
		  FROM MEM_USER A
		     , (SELECT
		               A.YEAR
		             , COUNT(DECODE(A.MEET_STATE, '01', A.EMP_NO)) AS REQ_COUNT
		             , COUNT(DECODE(A.MEET_STATE, '02', A.EMP_NO)) AS COM_COUNT
		          FROM MEM_MEET A
		         WHERE 1 = 1
		           AND A.YEAR = #findYear#
		           AND TO_CHAR(A.CREATE_DT, 'MM') IN ('01', '02', '03')
		           AND A.DELETE_DT IS NULL
		         GROUP BY A.YEAR
		     ) Q1
		     , (SELECT
		               A.YEAR
		             , COUNT(DECODE(A.MEET_STATE, '01', A.EMP_NO)) AS REQ_COUNT
		             , COUNT(DECODE(A.MEET_STATE, '02', A.EMP_NO)) AS COM_COUNT
		          FROM MEM_MEET A
		         WHERE 1 = 1
		           AND A.YEAR = #findYear#
		           AND TO_CHAR(A.CREATE_DT, 'MM') IN ('04', '05', '06')
		           AND A.DELETE_DT IS NULL
		         GROUP BY A.YEAR
		     ) Q2
		     , (SELECT
		               A.YEAR
		             , COUNT(DECODE(A.MEET_STATE, '01', A.EMP_NO)) AS REQ_COUNT
		             , COUNT(DECODE(A.MEET_STATE, '02', A.EMP_NO)) AS COM_COUNT
		          FROM MEM_MEET A
		         WHERE 1 = 1
		           AND A.YEAR = #findYear#
		           AND TO_CHAR(A.CREATE_DT, 'MM') IN ('07', '08', '09')
		           AND A.DELETE_DT IS NULL
		         GROUP BY A.YEAR
		     ) Q3
		     , (SELECT
		               A.YEAR
		             , COUNT(DECODE(A.MEET_STATE, '01', A.EMP_NO)) AS REQ_COUNT
		             , COUNT(DECODE(A.MEET_STATE, '02', A.EMP_NO)) AS COM_COUNT
		          FROM MEM_MEET A
		         WHERE 1 = 1
		           AND A.YEAR = #findYear#
		           AND TO_CHAR(A.CREATE_DT, 'MM') IN ('10', '11', '12')
		           AND A.DELETE_DT IS NULL
		         GROUP BY A.YEAR
		     ) Q4
		 WHERE A.YEAR = #findYear#
		   AND A.YEAR = Q1.YEAR(+)
		   AND A.YEAR = Q2.YEAR(+)
		   AND A.YEAR = Q3.YEAR(+)
		   AND A.YEAR = Q4.YEAR(+)
		 GROUP BY A.YEAR
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 업무진행사항 모니터링 지표관리현황 직원목록
	  #	기능	: SELECT
	  #	TABLE	: MEM_USER, V_ROLE_USER
	==================================================================
	-->
	<select id="getMetricEmpList" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       A.EMP_NO
		     , A.EMP_NM
		     , A.DEPT_CD
		     , F_DEPT_LEV2_NM(A.YEAR, A.DEPT_CD) AS DEPT_NM
		     , A.CAST_TC
			 , F_CODE_NM('170', A.CAST_TC , A.YEAR) AS CAST_NM 
		     , A.POS_TC
			 , F_CODE_NM('171', A.POS_TC , A.YEAR) AS POS_NM
		     , A.EVAL_1_EMP_NM
		     , B.EMAIL
		  FROM MEM_USER A
		     , V_ROLE_USER B
		 WHERE 1 = 1
		   AND A.EMP_NO = B.USER_ID(+)
		   AND A.YEAR = #findYear#
		   AND NVL(A.METRIC_STATUS_ID, '01') = #metricStatusId#
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 업무진행사항 모니터링 면담관리 직원목록
	  #	기능	: SELECT
	  #	TABLE	: MEM_USER, MEM_MEET
	==================================================================
	-->
	<select id="getMeetEmpList" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       A.EMP_NO
		     , A.EMP_NM
		     , A.DEPT_CD
		     , F_DEPT_LEV2_NM(A.YEAR, A.DEPT_CD) AS DEPT_NM
		     , A.CAST_TC
			 , F_CODE_NM('170', A.CAST_TC , A.YEAR) AS CAST_NM 
		     , A.POS_TC
			 , F_CODE_NM('171', A.POS_TC , A.YEAR) AS POS_NM
		     , A.EVAL_1_EMP_NM
		     , B.EMAIL
		  FROM MEM_MEET C
		     , MEM_USER A
		     , V_ROLE_USER B
		 WHERE 1 = 1
		   AND C.YEAR = A.YEAR
		   AND C.EMP_NO = A.EMP_NO
		   AND A.EMP_NO = B.USER_ID(+)
		   AND C.MEET_STATE = #meetState#
		   AND C.YEAR = #findYear#
		   AND C.DELETE_DT IS NULL
	<isEqual property="quarter" compareValue="1">
		   AND TO_CHAR(C.CREATE_DT, 'MM') IN ('01', '02', '03')
	</isEqual>
	<isEqual property="quarter" compareValue="2">
		   AND TO_CHAR(C.CREATE_DT, 'MM') IN ('04', '05', '06')
	</isEqual>
	<isEqual property="quarter" compareValue="3">
		   AND TO_CHAR(C.CREATE_DT, 'MM') IN ('07', '08', '09')
	</isEqual>
	<isEqual property="quarter" compareValue="4">
		   AND TO_CHAR(C.CREATE_DT, 'MM') IN ('10', '11', '12')
	</isEqual>
	</select>

	<!--
	==================================================================   
	  # 설명	: 실적입력 지행사항 입력
	  #	기능	: SELECT
	  #	TABLE	: MEM_USER, MEM_METRIC, MEM_METRIC_MON, MEM_ACT_IN
	==================================================================
	-->
	<select id="getActInEmpList" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       A.EMP_NO
		     , A.EMP_NM
		     , A.DEPT_CD
		     , F_DEPT_LEV2_NM(A.YEAR, A.DEPT_CD) AS DEPT_NM
		     , A.CAST_TC
			 , F_CODE_NM('170', A.CAST_TC , A.YEAR) AS CAST_NM 
		     , A.POS_TC
			 , F_CODE_NM('171', A.POS_TC , A.YEAR) AS POS_NM
		     , A.EVAL_1_EMP_NM
		     , B.EMAIL
		  FROM MEM_USER A
		     , V_ROLE_USER B
		 WHERE 1 = 1
		   AND A.EMP_NO = B.USER_ID(+)
		   AND A.YEAR = #findYear#
		   AND A.EMP_NO NOT IN (
				SELECT DISTINCT
                       C.EMP_NO
		          FROM MEM_METRIC C
                     , MEM_METRIC_MON M
		             , MEM_ACT_IN D
		         WHERE 1=1
                   AND C.YEAR = M.YEAR
		           AND C.METRIC_ID = M.METRIC_ID
		           AND M.YEAR = D.YEAR(+)
		           AND M.METRIC_ID = D.METRIC_ID(+)
		           AND M.MON = D.MON(+)
		           AND M.YEAR = #findYear#
		           AND M.MON = LPAD(#findMon#, 2, '0')
                   AND C.TYPE_ID = '01'
                   AND D.VALUE IS NULL
                   AND C.DELETE_DT IS NULL
                   AND M.DELETE_DT IS NULL
		   )
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 실적입력 지행사항 미입력
	  #	기능	: SELECT
	  #	TABLE	: MEM_USER, MEM_METRIC, MEM_METRIC_MON, MEM_ACT_IN
	==================================================================
	-->
	<select id="getActNotInEmpList" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       A.EMP_NO
		     , A.EMP_NM
		     , A.DEPT_CD
		     , F_DEPT_LEV2_NM(A.YEAR, A.DEPT_CD) AS DEPT_NM
		     , A.CAST_TC
			 , F_CODE_NM('170', A.CAST_TC , A.YEAR) AS CAST_NM 
		     , A.POS_TC
			 , F_CODE_NM('171', A.POS_TC , A.YEAR) AS POS_NM
		     , A.EVAL_1_EMP_NM
		     , B.EMAIL
		  FROM MEM_USER A
		     , V_ROLE_USER B
		 WHERE 1 = 1
		   AND A.EMP_NO = B.USER_ID(+)
		   AND A.YEAR = #findYear#
		   AND A.EMP_NO IN (
				SELECT DISTINCT
                       C.EMP_NO
		          FROM MEM_METRIC C
                     , MEM_METRIC_MON M
		             , MEM_ACT_IN D
		         WHERE 1=1
                   AND C.YEAR = M.YEAR
		           AND C.METRIC_ID = M.METRIC_ID
		           AND M.YEAR = D.YEAR(+)
		           AND M.METRIC_ID = D.METRIC_ID(+)
		           AND M.MON = D.MON(+)
		           AND M.YEAR = #findYear#
		           AND M.MON = LPAD(#findMon#, 2, '0')
                   AND C.TYPE_ID = '01'
                   AND D.VALUE IS NULL
                   AND C.DELETE_DT IS NULL
                   AND M.DELETE_DT IS NULL
		   )
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 자기성과기술서 작성현황 제출
	  #	기능	: SELECT
	  #	TABLE	: MEM_USER, MEM_JOB_DESC
	==================================================================
	-->
	<select id="getDescInEmpList" parameterClass="hashMap" resultClass="hashMap">
        SELECT
		       A.EMP_NO
		     , A.EMP_NM
		     , A.DEPT_CD
		     , F_DEPT_LEV2_NM(A.YEAR, A.DEPT_CD) AS DEPT_NM
		     , A.CAST_TC
			 , F_CODE_NM('170', A.CAST_TC , A.YEAR) AS CAST_NM 
		     , A.POS_TC
			 , F_CODE_NM('171', A.POS_TC , A.YEAR) AS POS_NM
		     , A.EVAL_1_EMP_NM
		     , B.EMAIL
		  FROM MEM_USER A
		     , V_ROLE_USER B
		     , MEM_JOB_DESC C
		 WHERE 1 = 1
		   AND A.YEAR = #findYear#
		   AND A.YEAR = C.YEAR(+)
		   AND A.EMP_NO = C.EMP_NO(+)
		   AND A.EMP_NO = B.USER_ID(+)
           AND C.EMP_NO IS NOT NULL
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 자기성과기술서 작성현황 미제출
	  #	기능	: SELECT
	  #	TABLE	: MEM_USER, MEM_JOB_DESC
	==================================================================
	-->
	<select id="getDescNotInEmpList" parameterClass="hashMap" resultClass="hashMap">
        SELECT
		       A.EMP_NO
		     , A.EMP_NM
		     , A.DEPT_CD
		     , F_DEPT_LEV2_NM(A.YEAR, A.DEPT_CD) AS DEPT_NM
		     , A.CAST_TC
			 , F_CODE_NM('170', A.CAST_TC , A.YEAR) AS CAST_NM 
		     , A.POS_TC
			 , F_CODE_NM('171', A.POS_TC , A.YEAR) AS POS_NM
		     , A.EVAL_1_EMP_NM
		     , B.EMAIL
		  FROM MEM_USER A
		     , V_ROLE_USER B
		     , MEM_JOB_DESC C
		 WHERE 1 = 1
		   AND A.YEAR = #findYear#
		   AND A.YEAR = C.YEAR(+)
		   AND A.EMP_NO = C.EMP_NO(+)
		   AND A.EMP_NO = B.USER_ID(+)
           AND C.EMP_NO IS NULL
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가진행사항 모니터링 이의신청 직원목록
	  #	기능	: SELECT
	  #	TABLE	: MEM_USER, MEM_DISSENT
	==================================================================
	-->
	<select id="getDissentEmpList" parameterClass="hashMap" resultClass="hashMap">
		SELECT
		       A.EMP_NO
		     , A.EMP_NM
		     , A.DEPT_CD
		     , F_DEPT_LEV2_NM(A.YEAR, A.DEPT_CD) AS DEPT_NM
		     , A.CAST_TC
			 , F_CODE_NM('170', A.CAST_TC , A.YEAR) AS CAST_NM 
		     , A.POS_TC
			 , F_CODE_NM('171', A.POS_TC , A.YEAR) AS POS_NM
		     , A.EVAL_1_EMP_NM
		     , B.EMAIL
		  FROM MEM_DISSENT C
		     , MEM_USER A
		     , V_ROLE_USER B
		 WHERE 1 = 1
		   AND C.YEAR = A.YEAR
		   AND C.EMP_NO = A.EMP_NO
		   AND C.DELETE_DT IS NULL
		   AND A.EMP_NO = B.USER_ID(+)
	<isNotEmpty property="procStatusId">
		   AND C.PROC_STATUS_ID = #procStatusId#
	</isNotEmpty>
		   AND C.YEAR = #findYear#
		   AND C.DELETE_DT IS NULL
	</select>
</sqlMap>