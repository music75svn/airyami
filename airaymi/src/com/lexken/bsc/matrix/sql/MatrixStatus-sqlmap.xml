<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.matrix.matrixStatus">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: BSC_MAT_EVAL_USER
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 평가진행현황 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_MAT_EVAL_USER
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT
              A.EVAL_USER_ID USER_ID ,
              B.USER_NM ,
              B.DEPT_ID ,
              C.DEPT_F_NM DEPT_NM,
              B.JIKGUB_NM,
              B.POS_NM,
              B.EMAIL,
              A.EVAL_USER_GRP_ID,
              D.EVAL_USER_GRP_NM,
              F_CODE_NM('143', A.EVAL_SUBMIT_YN, A.YEAR) EVAL_SUBMIT_YN,
              EVAL_SUBMIT_YN AS SUBMIT_YN        
         FROM BSC_MAT_EVAL_USER A                        
         LEFT OUTER JOIN V_ROLE_USER B ON A.EVAL_USER_ID = B.USER_ID                         
         LEFT OUTER JOIN V_DEPTINFO C ON B.DEPT_ID = C.DEPT_ID     
         INNER JOIN BSC_MAT_EVAL_USER_GRP D ON A.YEAR=D.YEAR AND A.EVAL_USER_GRP_ID=D.EVAL_USER_GRP_ID        
         WHERE A.YEAR = #findYear#          
           AND A.EVAL_USER_GRP_ID =#findEvalUserGrpId#
           <dynamic>
	       		<isNotEmpty property="findEvalSubmitYn" prepend="AND">
	       			A.EVAL_SUBMIT_YN = #findEvalSubmitYn#
	       		</isNotEmpty>
	       	</dynamic>  
         ORDER BY B.USER_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가진행현황 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_MAT_EVAL_USER
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR                  
			 , EVAL_USER_GRP_ID      
			 , EVAL_USER_ID          
			 , EVAL_SUBMIT_YN        
		  FROM BSC_MAT_EVAL_USER 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND EVAL_USER_GRP_ID = #evalUserGrpId#
		   AND EVAL_USER_ID = #evalUserId#	      
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가군 마감정보 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_MAT_EVAL_USER_GRP
	==================================================================
	-->
	<select id="getEvalUserInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR                  
             , A.EVAL_USER_GRP_ID      
             , A.EVAL_USER_GRP_NM          
             , A.EVAL_CLOSING_YN
             ,(SELECT COUNT(*) 
                  FROM BSC_MAT_EVAL_USER B
                 WHERE A.YEAR=B.YEAR      
                     AND A.EVAL_USER_GRP_ID=B.EVAL_USER_GRP_ID
               ) USER_CNT
               ,(SELECT COUNT(*) 
                  FROM BSC_MAT_EVAL_USER B
                 WHERE A.YEAR=B.YEAR      
                     AND A.EVAL_USER_GRP_ID=B.EVAL_USER_GRP_ID
                     AND B.EVAL_SUBMIT_YN='Y') SUBMIT_CNT        
          FROM BSC_MAT_EVAL_USER_GRP A 
         WHERE A.YEAR = #findYear#
           AND A.EVAL_USER_GRP_ID = #findEvalUserGrpId#
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가진행현황 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_MAT_EVAL_USER
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		<selectKey resultClass="java.lang.String" keyProperty="SEQ" >
			<!-- SELECT F_PGM_SERI('BSC_MAT_EVAL_USER','','','','','') SEQ FROM DUAL -->
			SELECT 'K'||LPAD(NVL(MAX(SUBSTR(EVAL_USER_GRP_ID,2,6)),0)+1,6,'0') SEQ FROM BSC_MAT_EVAL_USER
		</selectKey>
		INSERT INTO BSC_MAT_EVAL_USER ( 
			   YEAR
			 , EVAL_USER_GRP_ID
			 , EVAL_USER_ID
			 , EVAL_SUBMIT_YN
			 , CREATE_DT
			 ) VALUES ( 
			   #year#
			 , #SEQ#
			 , #evalUserId#
			 , #evalSubmitYn#
			 , SYSDATE
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 평가마감 취소
	  #	기능	: UPDATE
	  #	TABLE	: BSC_MAT_EVAL_USER_GRP
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE BSC_MAT_EVAL_USER_GRP 
		   SET EVAL_CLOSING_YN  = 'N', MODIFY_DT=SYSDATE 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND EVAL_USER_GRP_ID = #evalUserGrpId#
	</update>	
	

	<!--
	==================================================================   
	  # 설명	: 평가진행현황 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_MAT_EVAL_USER
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM BSC_MAT_EVAL_USER 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND EVAL_USER_GRP_ID = #evalUserGrpId#
		   AND EVAL_USER_ID = #evalUserId#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 파라미터 맵
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->		
	<parameterMap id="paramMap" class="java.util.HashMap">
		<parameter property="year" 				jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>	
		<parameter property="evalUserGrpId" 	jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>
	</parameterMap>	
	
	<!--
	==================================================================   
	  # 설명	: 평가마감 실행
	  #	기능	: PROCEDURES
	  #	TABLE	: 
	==================================================================
	-->		
	<procedure id="execData" parameterMap="paramMap">  
		{CALL SP_BSC_MATRIX_SCORE(?, ?)}
	</procedure>
	
	
	
	
</sqlMap>


