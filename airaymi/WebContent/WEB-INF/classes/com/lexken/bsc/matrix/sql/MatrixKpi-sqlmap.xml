<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.matrix.matrixKpi">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: BSC_MAT_EVAL_MAPPING
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 평가단별지표 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_MAT_EVAL_MEMB_KPI_POOL
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR,
               A.EVAL_USER_GRP_ID,
               C.EVAL_USER_GRP_NM,
               A.METRIC_GRP_ID,
               B.METRIC_GRP_NM,
               F_CODE_NM('142', B.POOL_GUBUN, A.YEAR) POOL_GUBUN_NM,
               A.CHOICE_YN,
               (SELECT COUNT(*)
                  FROM BSC_MAT_EVAL_USER C
                 WHERE A.YEAR=C.YEAR
                     AND A.EVAL_USER_GRP_ID=C.EVAL_USER_GRP_ID
                     AND C.EVAL_SUBMIT_YN='Y') SUBMIT_CNT
          FROM BSC_MAT_EVAL_MAPPING A
         LEFT OUTER JOIN BSC_METRIC_GRP B ON A.YEAR=B.YEAR 
                AND A.METRIC_GRP_ID=B.METRIC_GRP_ID AND B.DELETE_DT IS NULL
         LEFT OUTER JOIN BSC_MAT_EVAL_USER_GRP C ON A.YEAR=C.YEAR
               AND A.EVAL_USER_GRP_ID = C.EVAL_USER_GRP_ID       
         WHERE A.YEAR =#findYear#
         <dynamic>
       		<isNotEmpty property="findPoolGubun" prepend="AND">
       			B.POOL_GUBUN = #findPoolGubun#
       		</isNotEmpty>
       		<isNotEmpty property="findEvalUserGrpId" prepend="AND">
       			A.EVAL_USER_GRP_ID = #findEvalUserGrpId#
       		</isNotEmpty>
       	</dynamic>  
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가단 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_MAT_EVAL_GRP
	==================================================================
	-->
	<select id="getMatEvalList" parameterClass="hashMap" resultClass="hashMap">
		SELECT 
               YEAR,
               EVAL_USER_GRP_ID,
               EVAL_USER_GRP_NM
          FROM BSC_MAT_EVAL_USER_GRP
         WHERE YEAR = #findYear#
         ORDER BY SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가단별지표 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_MAT_EVAL_MAPPING
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR                  
			 , EVAL_USER_GRP_ID      
			 , METRIC_GRP_ID         
			 , CHOICE_YN             
		  FROM BSC_MAT_EVAL_MAPPING
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND EVAL_USER_GRP_ID = #evalUserGrpId#
		   AND METRIC_GRP_ID = #metricGrpId#	      
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가단 평가대상지표 전체 POOL
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC_GRP
	==================================================================
	-->
	<select id="getTotPoolList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR,
               METRIC_GRP_ID,
               '['||F_CODE_NM('142', POOL_GUBUN, YEAR)||']'||METRIC_GRP_NM METRIC_GRP_NM
          FROM BSC_METRIC_GRP
         WHERE YEAR=#year#
           AND DELETE_DT IS NULL
           AND METRIC_GRP_ID NOT IN(
                             SELECT METRIC_GRP_ID 
                               FROM BSC_MAT_EVAL_MAPPING
                              WHERE YEAR=#year#
                                AND EVAL_USER_GRP_ID=#evalUserGrpId#
                                     )
         <dynamic>
       		<isNotEmpty property="poolGubun" prepend="AND">
       			POOL_GUBUN = #poolGubun#
       		</isNotEmpty>
       	</dynamic>  
       	ORDER BY  POOL_GUBUN, METRIC_GRP_NM   
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가단 선택된 평가대상지표 전체 POOL
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC_GRP, BSC_MAT_EVAL_MAPPING
	==================================================================
	-->
	<select id="getSubPoolList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR,
               A.METRIC_GRP_ID,
               '['||F_CODE_NM('142', A.POOL_GUBUN, A.YEAR)||']'||A.METRIC_GRP_NM METRIC_GRP_NM
          FROM BSC_METRIC_GRP A
         INNER JOIN BSC_MAT_EVAL_MAPPING B ON A.YEAR=B.YEAR AND A.METRIC_GRP_ID=B.METRIC_GRP_ID AND B.EVAL_USER_GRP_ID=#evalUserGrpId#
         WHERE A.YEAR=#year#
         ORDER BY  A.POOL_GUBUN, A.METRIC_GRP_NM    
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가단별지표 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_MAT_EVAL_MAPPING
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO BSC_MAT_EVAL_MAPPING ( 
			   YEAR
			 , EVAL_USER_GRP_ID
			 , METRIC_GRP_ID
			 , CHOICE_YN
			 , CREATE_DT
			 ) VALUES ( 
			   #year#
			 , #evalUserGrpId#
			 , #metricGrpId#
			 , 'N'
			 , SYSDATE
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 평가단별지표 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_MAT_EVAL_MAPPING
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE BSC_MAT_EVAL_MAPPING 
		   SET CHOICE_YN              = #choiceYn# 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND EVAL_USER_GRP_ID = #evalUserGrpId#
		   AND METRIC_GRP_ID = #metricGrpId#		
	</update>	
	

	<!--
	==================================================================   
	  # 설명	: 평가단별지표 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_MAT_EVAL_MAPPING
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM BSC_MAT_EVAL_MAPPING 
		 WHERE YEAR = #year#
		   AND EVAL_USER_GRP_ID = #evalUserGrpId#
		   AND METRIC_GRP_ID = #metricGrpId#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 평가단별지표 결과삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_MAT_EVAL
	==================================================================
	-->	
	<update id="deleteEvalData" parameterClass="hashMap">
		DELETE FROM BSC_MAT_EVAL 
		 WHERE YEAR = #year#
		   AND METRIC_GRP_ID = #metricGrpId#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 평가단별지표 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_MAT_EVAL_MAPPING
	==================================================================
	-->	
	<update id="deleteAllData" parameterClass="hashMap">
		DELETE FROM BSC_MAT_EVAL_MAPPING 
		 WHERE YEAR = #year#
		   AND EVAL_USER_GRP_ID = #evalUserGrpId#
		   AND CHOICE_YN NOT IN('Y')
	</update>
	
	
</sqlMap>


