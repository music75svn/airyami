<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.bonus.bonPaySet">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	
	<!--
	==================================================================   
	  # 설명	: 성과급 설정 보기
	  #	기능	: SELECT
	  #	TABLE	: BON_SET
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
	 SELECT A.STAND_PAY      																				<!-- 기준월봉 -->
          , A.ORG_GRA_RATE   																				<!-- 기관등급 지급율 -->
          , (A.STAND_PAY - (SELECT NVL(SUM(SEP_PAY),0) FROM BON_DIS_SET WHERE YEAR = #findYear#)) INSIDE_REAL_PAY 	<!-- 자체성과급 지급가능액(기준월봉 - 파견직격려금총액) -->
	 	  ,	ROUND(A.GOV_EST,-1) GOV_EST																		<!-- 정부평가성과급 지급가능액 : 기준월봉 * 기관등급 지급율 -->
          , ROUND((SELECT SUM(PAY) FROM BON_EMP_PAY_SET WHERE YEAR = #findYear#),-1) SUM_PAY        		<!-- 직  원 기본급 총액 -->
          , ROUND((SELECT NVL(SUM(SEP_PAY),0) FROM BON_DIS_SET WHERE YEAR = #findYear#),-1) SUM_SEP_PAY    		<!-- 파견직 격려금 총액 -->
          , (SELECT SUM(NVL(VERI_BON_SAL,BON_SAL)) FROM BON_DIR WHERE YEAR = #findYear#) GOV_DIR_PAY        <!-- 정부평가성과급(임원) 필요재원 : 지급해야 하는 성과급 1 -->
          , (SELECT SUM(GOV_PAY) FROM BON_EMP WHERE YEAR = #findYear#) GOV_EMP_PAY                          <!-- 정부평가성과급(직원) 필요재원 : 지급해야 하는 성과급 2 -->                    
          , ((SELECT SUM(GOV_PAY) FROM BON_EMP WHERE YEAR = #findYear#)+
             (SELECT SUM(BON_SAL) FROM BON_DIR WHERE YEAR = #findYear#)) GOV_SUM_PAY          				<!-- 정부평가성과급(전체) 필요재원 : 지급해야 하는 성과급 1+2 -->
          , NVL(A.GOV_EMP_REAL_RATE, A.ORG_GRA_RATE) GOV_EMP_REAL_RATE 										<!--정부평가성과금 실지급율 : 공통 지급 비율(초기값:기관등급 지급율)-->
          , ROUND(A.GOV_EST-((SELECT SUM(GOV_PAY) FROM BON_EMP WHERE YEAR = #findYear#)+
             		   (SELECT SUM(NVL(VERI_BON_SAL,BON_SAL)) FROM BON_DIR WHERE YEAR = #findYear#)),0) GOV_EMP_VER_PAY	<!-- 정부평가성과급 검증액 : 검증집계 후 예산차 -->
          , ROUND((SELECT NVL(SUM(INSIDE_PAY),0) FROM BON_EMP WHERE YEAR = #findYear#),0) INSIDE_STAND_PAY  						<!-- 자체성과급 필요재원 : 지급해야 하는 성과급   -->
          , NVL(A.INSIDE_REAL_RATE,ROUND((A.STAND_PAY - (SELECT NVL(SUM(SEP_PAY),0) FROM BON_DIS_SET WHERE YEAR = #findYear#)) / 
           		                         (SELECT NVL(SUM(PAY),0) FROM BON_EMP_PAY_SET WHERE YEAR = #findYear#) * 100 ,5)) INSIDE_REAL_RATE	<!-- 자체성과급 실지급율 : 공통 지급 비율(초기값:기준월봉/직원기본급총액) -->
          , (SELECT NVL(SUM(INSIDE_PAY),0) FROM BON_EMP WHERE YEAR = #findYear#) INSIDE_CAL_PAY
          , ROUND(((A.STAND_PAY - (SELECT NVL(SUM(SEP_PAY),0) FROM BON_DIS_SET WHERE YEAR = #findYear#))-
             (SELECT NVL(SUM(INSIDE_PAY),0) FROM BON_EMP WHERE YEAR = #findYear#)),0)INSIDE_VER_PAY 				<!-- 자체성과급 검증액 : 검증집계 후 예산차 --> 
          , INIT_AGG_DT
          , VERI_AGG_DT
          , TO_CHAR(CONFIRM_DT,'YYYY.MM.DD HH24:MI:SS') CONFIRM_DT
  FROM BON_SET A,
         (SELECT  
                      ROUND(D.RATE * (SELECT NVL(SUM(GOV_PAY),0) FROM BON_EMP WHERE YEAR = #findYear#),-1) GOV_EMP_REAL_PAY 	<!--정평 직원 가능액 -->
                    , ROUND(D.RATE * (SELECT NVL(SUM(BON_SAL),0) FROM BON_DIR WHERE YEAR = #findYear#),-1) GOV_DIR_REAL_PAY   <!--정평 임원 가능액 -->
             FROM DUAL,
         (SELECT  
                      ((SELECT GOV_EST FROM BON_SET WHERE YEAR = #findYear#) /            <!-- 정평 예산 /  (정평직원+정평임원) = 부족율 -->
                      ((SELECT NVL(SUM(GOV_PAY),0) FROM BON_EMP WHERE YEAR = #findYear#) +  
                      (SELECT NVL(SUM(BON_SAL),0) FROM BON_DIR WHERE YEAR = #findYear#))) RATE
             FROM DUAL) D) B
	WHERE YEAR = #findYear#
	</select>
	
	
	<!--
	==================================================================   
	  # 설명	: 파라미터 맵
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->		
	<parameterMap id="paramMap" class="java.util.HashMap">
		<parameter property="year" 			jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>	
	</parameterMap>			
	
	<!--
	==================================================================   
	  # 설명	: 성과급 실행
	  #	기능	: PROCEDURES
	  #	TABLE	: 
	==================================================================
	-->		
	<procedure id="callInitialAggregate" parameterMap="paramMap">  
		{CALL SP_BON_EMP(?)}
	</procedure>
	
	<!--
    ==================================================================
      # 설명  : 임원 성과연봉 초기집계
      # 기능  : INSERT
      # TABLE : BON_DIR_SAL_SET
    ==================================================================
    -->
	<insert id="insertBonDirInit" parameterClass="hashMap">
		  INSERT INTO BON_DIR (
						       YEAR,
						       EMPN,
						       DEPT_CD,
						       CAST_TC,
						       POS_TC,
						       WORK_MON,
						       TOT_MON,
						       SALARY,
						       RATE,
						       CONTENT,
						       BON_SAL,
						       TOT_BON_SAL
							  )
						SELECT C.*
							 , SUM (BON_SAL) OVER (PARTITION BY YEAR, EMPN) TOT_BON_SAL
						  FROM
							   (SELECT A.YEAR,
								       A.EMPN,
								       A.DEPT_CD,
								       A.CAST_TC,
								       A.POS_TC,
								       A.WORK_MON,
								       A.TOT_MON,
								       A.SALARY,
								       A.RATE,
								       A.CONTENT,								     
								       CASE
								          WHEN A.POS_TC = '00'
								          THEN
								             ROUND(A.SALARY * (A.RATE/100) * A.WORK_MON/12,-1)
								          WHEN A.POS_TC = '01'
								          THEN
								             ROUND(A.SALARY * (A.RATE/100) * A.WORK_MON/12,-1)
								          ELSE
								             ROUND(A.SALARY * (A.RATE/100) * A.WORK_MON/12,-1)
								       END
								          BON_SAL								          
								  FROM BON_DIR_SAL_SET A
								     , BON_SET B         
								 WHERE A.YEAR = B.YEAR
								   AND A.YEAR = #year#
								 ) C
	</insert>
	
	<!--
    ==================================================================
      # 설명  : 임원 성과연봉 검증집계
      # 기능  : UPDATE
      # TABLE : BON_DIR
    ==================================================================
    -->
	<update id="updateBonDirVeri" parameterClass="hashMap">
		UPDATE BON_DIR A SET 
		    VERI_TOT_BON_SAL = (SELECT SUM (VERI_BON_SAL) OVER (PARTITION BY YEAR, EMPN) VERI_TOT_BON_SAL
		    				  FROM 
		    					   (SELECT B.YEAR
                            			 , B.EMPN
                            			 , B.DEPT_CD
                            			 , B.CAST_TC
                            			 , B.POS_TC
		    					   		 , ROUND(B.BON_SAL * ((#sumBolSal# * ((SELECT GOV_EST FROM BON_SET WHERE YEAR = #year#) /     
		    														 		  ((SELECT SUM (GOV_PAY) FROM BON_EMP WHERE YEAR = #year#) + 
		    														           (SELECT SUM (BON_SAL) FROM BON_DIR WHERE YEAR = #year#)))) / #sumBolSal#),-1) VERI_BON_SAL 
				                      FROM BON_DIR B 
				                     WHERE B.YEAR = #year#) C
				             WHERE A.YEAR = C.YEAR
				               AND A.EMPN = C.EMPN
				               AND A.DEPT_CD = C.DEPT_CD
				               AND A.CAST_TC = C.CAST_TC
				               AND A.POS_TC = C.POS_TC)
			, TOT_BON_SAL =   (SELECT ROUND(B.BON_SAL * ((#sumBolSal# * ((SELECT GOV_EST FROM BON_SET WHERE YEAR = #year#) /     
                                                                         ((SELECT SUM (GOV_PAY) FROM BON_EMP WHERE YEAR = #year#) + 
                                                                         (SELECT SUM (BON_SAL) FROM BON_DIR WHERE YEAR = #year#)))) / #sumBolSal#),-1) VERI_BON_SAL 
                                 FROM BON_DIR B 
                                WHERE B.YEAR = #year#
                          	      AND A.YEAR = B.YEAR
                          		  AND A.EMPN = B.EMPN
                          		  AND A.DEPT_CD = B.DEPT_CD
                          		  AND A.CAST_TC = B.CAST_TC
                          		  AND A.POS_TC = B.POS_TC)            
	</update>	

	<!--
    ==================================================================
      # 설명  : 임원 성과연봉 
      # 기능  : INSERT
      # TABLE : BON_DIR
    ==================================================================
    -->
    <select id="getSumBolSal" parameterClass="hashMap" resultClass="java.lang.String">
    	SELECT NVL(SUM(BON_SAL),0) FROM BON_DIR WHERE YEAR = #year#
    </select>
    
	<!--
	==================================================================   
	  # 설명	: 초기집계 초기화
	  #	기능	: UPDATE
	  #	TABLE	: BON_SET
	==================================================================
	-->	
	<update id="updateInitReset" parameterClass="hashMap">
		UPDATE BON_SET SET 
			   GOV_EMP_REAL_RATE	= null
			 , INSIDE_REAL_RATE		= null
			 , VERI_AGG_DT			= null
		 WHERE YEAR = #year#		   	
	</update>    

	<!--
    ==================================================================
      # 설명    : 임원 성과연봉 삭제
      # 기능    : DELETE
      # TABLE   : BON_DIR_SAL_SET
    ==================================================================
    -->
    <delete id="deleteBonDir" parameterClass="hashMap">
        DELETE FROM BON_DIR
         WHERE YEAR	= #findYear#
    </delete>

	<!--
	==================================================================   
	  # 설명	: 초기집계 시간 저장
	  #	기능	: UPDATE
	  #	TABLE	: BON_SET
	==================================================================
	-->	
	<update id="updateInitAggDt" parameterClass="hashMap">
		UPDATE BON_SET 
		   SET INIT_AGG_DT              = SYSDATE 
		 WHERE YEAR = #year#		   	
	</update>	
	
	<!--
	==================================================================   
	  # 설명	: 지급기준 지급율 저장
	  #	기능	: UPDATE
	  #	TABLE	: BON_SET
	==================================================================
	-->	
	<update id="updateRateDate" parameterClass="hashMap">
		UPDATE BON_SET 
		   SET GOV_EMP_REAL_RATE = #govEmpRealRate#
		     , INSIDE_REAL_RATE = #insideRealRate#
		 WHERE YEAR = #year#		   	
	</update>	
	
	<!--
	==================================================================   
	  # 설명	: 지급기준 검증집계 시간 저장
	  #	기능	: UPDATE
	  #	TABLE	: BON_SET
	==================================================================
	-->	
	<update id="updateDate" parameterClass="hashMap">
		UPDATE BON_SET 
		   SET VERI_AGG_DT             = SYSDATE 
		 WHERE YEAR = #year#		   	
	</update>	    		

	<!--
	==================================================================   
	  # 설명	: 지급기준 검증집계 확정시간 저장
	  #	기능	: UPDATE
	  #	TABLE	: BON_SET
	==================================================================
	-->	
	<update id="updateConfirm" parameterClass="hashMap">
		UPDATE BON_SET 
		   SET CONFIRM_DT             = SYSDATE 
		 WHERE YEAR = #year#		   	
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 지급기준 검증집계 확정취소시간 저장
	  #	기능	: UPDATE
	  #	TABLE	: BON_SET
	==================================================================
	-->	
	<update id="updateConfirmCancel" parameterClass="hashMap">
		UPDATE BON_SET 
		   SET INIT_AGG_DT			  = null
		   	 , VERI_AGG_DT			  = null	
		     , CONFIRM_DT             = null
		     , CANCEL_DT              = SYSDATE 
		 WHERE YEAR = #year#		   	
	</update>	
		
	<!--
	==================================================================   
	  # 설명	: 
	  #	기능	: INSERT
	  #	TABLE	: 
	==================================================================
	-->	
	<insert id="insertDirConf" parameterClass="hashMap">
	INSERT INTO BON_DIR_CONF
		SELECT  YEAR
			  , EMPN
			  , DEPT_CD
			  , CAST_TC
			  , POS_TC
			  , WORK_MON
			  , TOT_MON
			  , SALARY
			  , RATE
			  , CONTENT
			  , BON_SAL
			  , TOT_BON_SAL
			  , VERI_BON_SAL
			  , VERI_TOT_BON_SAL
		  FROM BON_DIR 
		 WHERE YEAR = #year#		   	
	</insert>
	
	<!--
    ==================================================================
      # 설명    : 
      # 기능    : DELETE
      # TABLE   : 
    ==================================================================
    -->
    <delete id="deleteDirConf" parameterClass="hashMap">
        DELETE FROM BON_DIR_CONF
         WHERE YEAR	= #findYear#
    </delete>		
	
		<!--
	==================================================================   
	  # 설명	: 
	  #	기능	: INSERT
	  #	TABLE	: 
	==================================================================
	-->	
	<insert id="insertEmpConf" parameterClass="hashMap">
	INSERT INTO BON_EMP_CONF
		SELECT  SEQ
			  , YEAR
			  , EMPN
			  , INSIDE_PAY
			  , GOV_PAY
			  , TOT_PAY
			  , CREATE_DT
		  FROM BON_EMP
		 WHERE YEAR = #year#		   	
	</insert>
	
	<!--
    ==================================================================
      # 설명    : 
      # 기능    : DELETE
      # TABLE   : 
    ==================================================================
    -->
    <delete id="deleteEmpConf" parameterClass="hashMap">
        DELETE FROM BON_EMP_CONF
         WHERE YEAR	= #findYear#
    </delete>	
	
</sqlMap>


