#*************************************************************************
* CLASS 명      : evalResultMngList
* 작 업 자      : 정철수
* 작 업 일      : 2012년 11월 6일
* 기    능      : 경영평가결과입력
* ---------------------------- 변 경 이 력 --------------------------------
* 번호    작 업 자     작   업   일       변 경 내 용           비  고
* ----  --------  -----------------  -------------------------  -----------
*  1     정철수      2012년 11월 6일             최 초 작 업
**************************************************************************#
#set($curr_url = $!{context_path} + "/gov/result/evalResultMng/evalResultMngList.vw")
<script type="text/javascript" language="javascript" >
//<![CDATA[

	var J = jQuery;

	J(document).ready(function(){

		/******************************************
		 * 데이터 그리드 출력
		 ******************************************/
		var str = J('#formFind').serialize();
		var arrGrade = new Array("A+","A0","B+","B0","C","D+","D0","E+","E0");

		jQuery("#list").jqGrid({



			url          :"$!{context_path}/gov/result/evalResultMng/evalResultMngList_xml.vw" + "?" + str,
			mtype        :"POST",
			datatype     :"json",
			jsonReader   : {
    						page   : "page",
    						total  : "total",
    						root   : "rows",
    						records: function(obj){return obj.length;},
    						repeatitems: false,
    						id     : "id"
    				       },
			height       : $!{jqGrid_height},
			width        : $!{jqGrid_width},
			colNames     :[
			   			   '평가범주', '평가부문', '정평지표', '지표유형', '평가방법코드', '평가방법'
						 , '가중치', '비계량등급', '점수'
						 , 'GM_SCORE_ID', '평가년도', '평가범주코드', '평가부문코드', '정평지표코드', '지표유형코드'
						 , 'ECG_CNT', 'EC_CNT', 'ECG_ROWNUM', 'EC_ROWNUM'
						  ],
			colModel     :[
							{name:'EVAL_CAT_GRP_NM'      ,index:'EVAL_CAT_GRP_NM'      ,width:200   ,align:'left' 	,sortable:false ,cellattr: attrSettingEvalCatGrp},
                            {name:'EVAL_CAT_NM'          ,index:'EVAL_CAT_NM'          ,width:200   ,align:'left' 	,sortable:false ,cellattr: attrSettingEvalCat},
                            {name:'GOV_METRIC_NM'        ,index:'GOV_METRIC_NM'        ,width:300   ,align:'left' 	,sortable:false ,formatter:linkUpdate},
							{name:'GM_GBN_NM'        	 ,index:'GM_GBN_NM'        	   ,width:150   ,align:'center' ,sortable:false },
							{name:'EVAL_METHOD_ID'       ,index:'EVAL_METHOD_ID'       ,width:150   ,align:'center' ,sortable:false },
							{name:'EVAL_METHOD_NM'       ,index:'EVAL_METHOD_NM'       ,width:150   ,align:'center' ,sortable:false },
                            {name:'GM_WEIGHT'            ,index:'GM_WEIGHT'            ,width:100   ,align:'center' ,sortable:false },
                            {name:'GM_GRADE'             ,index:'GM_GRADE'             ,width:100   ,align:'center' ,sortable:false ,formatter:setGradeInput},
                            {name:'GM_SCORE'             ,index:'GM_SCORE'             ,width:150   ,align:'center' ,sortable:false ,formatter:setScoreInput},

                            {name:'GM_SCORE_ID'          ,index:'GM_SCORE_ID'          ,width:150   ,align:'center' },
							{name:'YEAR'                 ,index:'YEAR'                 ,width:150   ,align:'center' },
                            {name:'EVAL_CAT_GRP_ID'      ,index:'EVAL_CAT_GRP_ID'      ,width:150   ,align:'center' },
                            {name:'EVAL_CAT_ID'          ,index:'EVAL_CAT_ID'          ,width:150   ,align:'center' },
							{name:'GOV_METRIC_ID'        ,index:'GOV_METRIC_ID'        ,width:150   ,align:'center' },
							{name:'GM_GBN_ID'        	 ,index:'GM_GBN_ID'        	   ,width:150   ,align:'center' },

							{name:'ECG_CNT'              ,index:'ECG_CNT'              ,width:150   ,align:'center' },
                            {name:'EC_CNT'               ,index:'EC_CNT'               ,width:150   ,align:'center' },
                            {name:'ECG_ROWNUM'           ,index:'ECG_ROWNUM'           ,width:150   ,align:'center' },
                            {name:'EC_ROWNUM'            ,index:'EC_ROWNUM'            ,width:150   ,align:'center' }
							],
			rowNum       : $!{jqGrid_rownum},
			autowidth    : false,
			viewrecords  : true,
			loadonce     : true,
			multiselect  : false,
			cellEdit     : true,
			gridview     : true,
			caption		 :"경영평가결과입력",
			footerrow	 : true,
			userDataOnFooter : true,
			loadComplete : function() {
                				var grid = J("#list");
                				grid.jqGrid('footerData', 'set', {EVAL_METHOD_NM:"총계"});
                				calculateSumGridColumn(grid, "GM_WEIGHT");
								grid.jqGrid('footerData', 'set', {GM_SCORE:calculateSumColumn(grid,"GM_SCORE_ID")});
								/******************************************
                            	 * 점수에 숫자(정수)만 입력받기
                            	 ******************************************/
                        		J("#formList input[name=govMetricScores]").numeric({allow:"."}).css("ime-mode", "disabled"); //숫자만 입력받기

								J("#formList input[name=govMetricScores]").each(function(){
                        			var keyupStatus = "N";
                        			$(this).bind('keyup',function(){
                        				if( ((event.keyCode >= 48) && (event.keyCode <= 57)) || ((event.keyCode >= 96) && (event.keyCode <= 105)) ){
                        					keyupStatus = "Y";
                        				}else {
										}
                        			});


                        			$(this).bind('focusout',function(){

										var tmp = "";
										var inputObj = $(this).attr("id");
										var inputRownum = inputObj.replace("govMetricScore_", "");	// jqGrid 의 rownum 가져오기
										var inputRowObject = J("#list").getRowData(inputRownum);
										var gmWeight = inputRowObject.GM_WEIGHT;

										var inputVal = parseFloat($(this).val()) + 0;
                            			var MAX_SCORE = parseFloat(gmWeight);
                            			var MIN_SCORE = 0;

                            			if( keyupStatus == "Y" ){
											// 평가항목 점수 범위 확인
                            				if( MAX_SCORE < inputVal || MIN_SCORE > inputVal ){
                            					$(this).val('');
                            					$(this).focus();
												keyupStatus = "N";
                            					J.showMsgBox("점수는 가중치보다 클 수 없습니다.", null, null);
												return false;
                            				}

											// 화면 상 평가항목 그룹 별,전체 평점 계산
											var inputList = J("#formList input[name=govMetricScores]");

											var allInputVal = 0;
											J.each(inputList, function(index, item){
                            					if( item.value != "" ){
                            						allInputVal = allInputVal + parseFloat( item.value );
                            					}else {
                            					}
                            				});
											grid.jqGrid('footerData', 'set', {GM_SCORE:allInputVal} );
                            			}
										keyupStatus = "N";
                        			});

                        		});


								/*
								J("#formList input[name=govMetricGrades]").each(function(){
                        			var keyupStatus = "N";
                        			$(this).bind('keyup',function(){
										keyupStatus = "Y";

                        			});

                        			$(this).bind('focusout',function(){
										var isValidate = false;
										var tmpGrade = $(this).val();
										for (var i = 0; i < arrGrade.length; i++) {
                            				if( tmpGrade == arrGrade[i] ){
                        						isValidate = true;
                        						break;
                        					}
                            			}

										if( keyupStatus == "Y" ){
											// 평가항목 등급 확인
                            				if( !isValidate ){
                            					$(this).val('');
                            					$(this).focus();
												keyupStatus = "N";
                            					J.showMsgBox("평가등급은  A+,A0,B+,B0,C,D+,D0,E+,E0 중 하나여야 합니다.", null, null);
												return false;
                            				}
                            			}
										keyupStatus = "N";

                        			});

                        		});
                        		*/


                            }
		})
		.jqGrid('hideCol',"GM_SCORE_ID").jqGrid('hideCol',"YEAR").jqGrid('hideCol',"EVAL_CAT_GRP_ID").jqGrid('hideCol',"EVAL_CAT_ID").jqGrid('hideCol',"GOV_METRIC_ID").jqGrid('hideCol',"GM_GBN_ID")
		.jqGrid('hideCol',"ECG_CNT").jqGrid('hideCol',"EC_CNT").jqGrid('hideCol',"ECG_ROWNUM").jqGrid('hideCol',"EC_ROWNUM")
		.setGridWidth($!{jqGrid_width});

		/******************************************
		 * 조회
		 ******************************************/
		J("#formFind").submit(function(event) {
			//submit 하기전 작업추가
		});


		/******************************************
		 * 저장
		 ******************************************/
		J("#btnInsert").click(function() {
			goInsert();
			return false;
		});

		/******************************************
		 * 점수/등급 초기화 버튼 클릭 이벤트
		 ******************************************/
		J("#btnInit").click(function() {
			goInit();
			return false;
		});

		/******************************************
		 * 엑셀다운로드 버튼 클릭 이벤트
		 ******************************************/
		J("#btnExcelDown").click(function() {
			excelDownload();
			return false;
		});
	});

	/*****************************************
	 * 평가범주 Rowspan 설정
	 ******************************************/
	function attrSettingEvalCatGrp(rowId, val, rowObject, cm) {
		var result;
		var index = rowObject.ECG_ROWNUM;
		var rowSpan = rowObject.ECG_CNT;

		if(index == 1) {
			result = ' rowspan="' + rowSpan + '"';
		} else {
			result = ' style="display:none"';
		}
		return result;
	}

	/*****************************************
	 * 평가부문 Rowspan 설정
	 ******************************************/
	function attrSettingEvalCat(rowId, val, rowObject, cm) {
		var result;
		var index = rowObject.EC_ROWNUM;
		var rowSpan = rowObject.EC_CNT;

		if(index == 1) {
			result = ' rowspan="' + rowSpan + '"';
		} else {
			result = ' style="display:none"';
		}
		return result;
	}

	/******************************************
	 * 비계량지표 등급 input 설정
	 ******************************************/
	function setGradeInput(cellvalue, options, rowObject){
		var retVal = "";
		var gmGbnId = rowObject.GM_GBN_ID;
		var gmGovMetricId = rowObject.GOV_METRIC_ID;
		if( null != gmGovMetricId  ){
    		if( "02" == gmGbnId ){		// 비계량지표
    			retVal = "<input type='text' id='govMetricGrade_" + options.rowId + "' name='govMetricGrades' class='inputbox w60' value='" + cellvalue + "' maxlength='2'/>";
    		}else {
    			retVal = "<input type='hidden' id='govMetricGrade_" + options.rowId + "' name='govMetricGrades' class='inputbox w60' value='' maxlength='2'/>";
    		}
		}
		return retVal;
	}

	/******************************************
	 * 지표 점수 input 설정
	 ******************************************/
	function setScoreInput(cellvalue, options, rowObject){
		var retVal = cellvalue;
		var gmGovMetricId = rowObject.GOV_METRIC_ID;
		if( null != gmGovMetricId  ){
			retVal = "<input type='text' id='govMetricScore_" + options.rowId + "' name='govMetricScores' class='inputbox w100' value='" + cellvalue + "' maxlength='10'/>";
		}
		return retVal;
	}

	/******************************************
	 * grid column의 합계 계산
	 ******************************************/
	function calculateSumColumn(grid, column_id) {
        var totalAmount = 0;
        var columnIndex = getColumnIndexByName(grid, column_id);
		var rows = grid[0].rows;
		var rowsCount = rows.length;
		var row = "";
		var ob = [];

        for(var i = 0; i < rowsCount; i++) {
            row = rows[i];
            if (row.className.indexOf("jqgrow") != -1) {
                totalAmount += Number(getTextFromCell(row.cells[columnIndex]));
            }
        }
		totalAmount = Math.round( totalAmount * 1000 ) / 1000;
		return totalAmount;
	}




	/******************************************
	 * jqGrid 수정페이지 링크
	 ******************************************/
	function linkUpdate(cellvalue, options, rowObject) {
		return '<a href=javascript:goGovMetricPop(' + options.rowId + ')>' + cellvalue + '<//a>';
	}

	/******************************************
	 * 저장
	 ******************************************/
	function goInsert() {
		var isCheck = false;
		var isOK = true;
		
		var arrGrades = new Array("A+","A0","B+","B0","C","D+","D0","E+","E0");
		var arrOldGrades = new Array("S","A","B","C","D","E");
		
		var ids = J("#list").jqGrid('getDataIDs');
		
		for (var i = 0; i < ids.length; i++) {
			var rowdata = J("#list").getRowData(ids[i]);
		
			if(rowdata.EVAL_METHOD_ID == '02') {
				//var grade = document.createElement(rowdata.GM_GRADE).value ;
				var grade = J("input[name=govMetricGrades]").eq(i).val();
				
				if(grade !="") {
    				isCheck =  false;
    			    			
	    			for (var j = 0; j < arrGrades.length; j++) {
			    			if( grade == arrGrades[j] ){
								isCheck = true;
								break;
							}
			    	}
			    	
					if (isCheck == false) {
			    				J.showMsgBox("9등급 평가등급은  A+,A0,B+,B0,C,D+,D0,E+,E0 중 하나여야 합니다.", null, null);
			    				isOK = false;
			    				break;
		    		}
    			}
	    			
	    	} else if (rowdata.EVAL_METHOD_ID == '01') {
		    	//var grade = document.createElement(rowdata.GM_GRADE).value ;
		    	var grade = J("input[name=govMetricGrades]").eq(i).val();
    			
    			if(grade !="") {
    				isCheck =  false;
    			    			
	    			for (var j = 0; j < arrOldGrades.length; j++) {
		    			if( grade == arrOldGrades[j] ){
							isCheck = true;
							break;
						}
			    	}
					
					if(!isCheck) {
	    				J.showMsgBox("6등급 평가등급은  S,A,B,C,D,E 중 하나여야 합니다.", null, null);
	    				isOK = false;
	    				break;
		    		}				    	
	    		}
			}
		}
		
		if(isOK) {
			J.showConfirmBox("저장하시겠습니까?", "insertDo"); //insertDo() 콜백함수 호출
		}
	}

	/******************************************
	 * 저장처리
	 ******************************************/
	function insertDo() {
		var ids = J("#list").jqGrid('getDataIDs');
		var rowdata = "";
		var govMetricIds = "";
		var grades = "";
		var grade  = "";
        var scores = "";
		var score  = "";

		for (var i = 0; i < ids.length; i++) {
			rowdata = J("#list").getRowData(ids[i]);
			govMetricIds += rowdata.GOV_METRIC_ID + '|';
		}

		J("#formList input[name=govMetricGrades]").each(function(){
			grade = $(this).val()==""?"none":$(this).val();
			grades += grade + '|';
		});

		J("#formList input[name=govMetricScores]").each(function(){
			score = $(this).val()==""?"none":$(this).val();
			scores += score + '|';
		});

		J("#govMetricIds").val(govMetricIds);
		J("#govGrades").val(grades);
		J("#govScores").val(scores);
		J("#year").val(J("#findYear").val());
		J("#mode").val("ADD");


		//첨부파일 확장자 체크
		var fileChk = true;
		var fileChoose = true;
		J(":file", "#formList").each(function(index, item) {
			var fileFullName = J("input[name=" + item.name + "]").val();

			if( 0 < fileFullName.length ){
    			var src = getFileExtension(fileFullName);

    			if (!((src.toLowerCase() == "xls") || (src.toLowerCase() == "xlsx") || (src.toLowerCase() == "ppt") || (src.toLowerCase() == "pptx")||
    				  (src.toLowerCase() == "doc") || (src.toLowerCase() == "docx") || (src.toLowerCase() == "hwp") || (src.toLowerCase() == "pdf") ||
    				  (src.toLowerCase() == "zip") || (src.toLowerCase() == "txt")  || (src.toLowerCase() == "gif") || (src.toLowerCase() == "jpg") ||
    			      (src.toLowerCase() == "png") || (src.toLowerCase() == "png")
    			    )) {

    				fileChk = false;
        		}
			}else {
    			fileChoose = false;
			}
		});
		if(fileChoose == false) {
			J.showMsgBox("첨부할 파일을 선택해 주십시오.", null, null);
    		return;
		}

		if(fileChk == false) {
			J.showMsgBox("허용되지 않는 파일형식입니다<br/>허용되는 파일형식 : <br/>xls, xlsx, ppt, pptx, doc, docx, hwp <br/> pdf, zip, txt, gif, jpg, png, jpeg", null, null);
    		return;
		}

		document.charset='utf-8';

		J("#formList").attr("action", "$!{context_path}/gov/result/evalResultMng/evalResultMngProcess.vw?type=template").submit();
		return false;
	}

	/******************************************
	 * 점수/등급 초기화
	 ******************************************/
	function goInit() {
		J.showConfirmBox("점수/등급을 초기화 하시겠습니까?", "initDo"); //deleteDo() 콜백함수 호출
	}

	/******************************************
	 * 점수/등급 초기화 실행
	 ******************************************/
	function initDo() {
		J("#formList input[name=govMetricGrades]").each(function(){
  			$(this).val("");
		});
		J("#formList input[name=govMetricScores]").each(function(){
  			$(this).val("");
		});
		J("#list").jqGrid('footerData', 'set', {GM_SCORE:0});

		// 첨부파일 초기화
		J("#formList input[name=delAttachFiles]").each( function (){
			$(this).attr("checked","checked");
		});

		J("li[id^=fileRow]" ).remove();
	}

	/******************************************
	 * 엑셀다운로드
	 ******************************************/
	function excelDownload(){
		J("#yearNm").val(J("#findYear > option:selected").text());
		J("#formList").attr("action", "$!{context_path}/gov/result/evalResultMng/evalResultMngListExcel.vw?type=excel").submit();
		return false;
	}

	/******************************************
	 * 파일추가
	 ******************************************/
	var fileIndex = 0;

	function fileAttachAdd() {
		J("#fileAttach").append("<li id=\"fileRow" + fileIndex + "\"><input type=\"file\" name=\"file" + fileIndex + "\" class=\"input\" size=\"70\" /> <input type=\"button\" value=\"삭제\" onclick=\"deleteRow(" + fileIndex + ")\" class=\"input\" size=\"70\"></li>");
		fileIndex++;
	}

	function deleteRow(fileIndex)	{
    	J("#fileRow" + fileIndex).remove();
    }

	/******************************************
	 * 경영평가 지표정의서  팝업
	 ******************************************/
	function goGovMetricPop(rowId) {
		var ret = J("#list").jqGrid('getRowData',rowId);
		var findYear = ret.YEAR;
		var findGovMetricId = ret.GOV_METRIC_ID;

		var param = "&amp;year=" + findYear + "&amp;govMetricId=" + findGovMetricId ;

		var url = "$!{context_path}/gov/system/govMetric/popArchiveMonList.vw?type=popup" + param;
		openWinByName(url,'popGovMetricDefine','880','650','yes');
	}

//]]>
</script>

<div id="Table">
	<div id="Table_blockContainer">
		<h1 class="none">경영평가결과입력</h1>
		<div class="tableTop">
			#parse("/WEB-INF/vl/common/template/tabs.vm")

    		<!-- search S -->
			<form id="formFind" name="formFind" method="post" action="$!{context_path}/gov/result/evalResultMng/evalResultMngList.vw?type=template">
				<input type="hidden"    id="findHighPgmId"  name="findHighPgmId"    value="$!{searchMap.txt2html("findHighPgmId")}" />
				<input type="hidden"    id="findSubPgmId"   name="findSubPgmId"     value="$!{searchMap.txt2html("findSubPgmId")}" />
				<input type="hidden"    id="findPgmId"      name="findPgmId"        value="$!{searchMap.txt2html("findPgmId")}" />

				<div class="searchBox">
    				<div><div><div>
    				<table summary="경영평가결과입력검색 조건">
						<caption class="none">경영평가결과입력 검색 조건</caption>
						<thead><tr><th></th></tr></thead>
        				<tbody>
            				<tr>
								<td class="searchBox_tit w250">
            						<span><label for="findYear">$!{YEAR}</label></span>
            						<span class="searchBar">
            							<select id="findYear" name="findYear" class="select w80">
            								$!CS_CODE.getCodeOption("017", $!{searchMap.txt2html("findYear")})
            							</select>
            						</span>
            					</td>
            				</tr>
        				</tbody>
    				</table>
                    <input type="image" class="btnSearch" src="$!{img_path}/common/btn_search.gif" align="middle" alt="검색" />
                    </div></div></div>
    	        </div>
    		</form>
    		<!-- search E -->
			<div class="clear"></div>
		</div>

		<form id="formList" name="formList" method="post" enctype="multipart/form-data" action="$!{context_path}/gov/result/evalResultMng/evalResultMngProcess.vw?type=template">
			<input type="hidden" id="mode"       name="mode" />
			<input type="hidden" id="year"		 name="year" />
			<input type="hidden" id="yearNm"	 name="yearNm" />
			<input type="hidden" id="govMetricIds"	 name="govMetricIds" />
			<input type="hidden" id="govGrades"	 name="govGrades" />
			<input type="hidden" id="govScores"	 name="govScores" />
			<input type="hidden" id="creatUserId" name="creatUserId" value="$!{CS_LOGIN.getUser_id()}" />

			$!{searchMap.makeHiddenFind()}
			<div id="splitterBox">
				<div>
					<!-- 데이터그리드 Start -->
					<div class="blockGridListTable">
						<table id="list" summary="경영평가결과입력 조회결과">
							<caption class="none">경영평가결과입력 조회</caption>
							<thead><tr><th></th></tr></thead>
							<tbody><tr><td></td></tr></tbody>
						</table>
						<div id="pager"></div>
					</div>
					<!--// 데이터그리드 End -->


					<div class="clear h10"></div>
					<div class="blockDetail">
						<table id="attach" summary="경영평가결과입력 첨부파일">
						<caption class="none">경영평가결과입력 첨부파일</caption>
						<colgroup>
    						<col width="20%" />
        					<col width="80%" />
        				</colgroup>
        				<tbody>
    						<tr>
        						<th scope="row" >첨부파일</th>
        						<td >
    								#foreach($fileList in $fileList)
    									$!{CS_HTML.makeFileIconFileName($fileList.get("ATTACH_FILE_SUFFIX"), $fileList.get("ATTACH_FILE_NM"), $fileList.get("ATTACH_FILE_PATH"))}
    									&nbsp;&nbsp;<input type="checkbox" name="delAttachFiles" id="delAttachFile$!{fileList.get("SEQ")}" value="$!{fileList.get("SEQ")}" />&nbsp;<label for="delAttachFile$!{fileList.get("SEQ")}">첨부파일 삭제</label> <br/>
    								#end
    								<a href="javascript:fileAttachAdd();"><img src="$!{img_path}/common/btn_file.gif" class="valign_middle" alt="파일추가" /></a>&nbsp;(첨부파일 용량제한은 100M입니다)<br/>
    								<div>
    									<ul id="fileAttach">
											<li></li>
    									</ul>
    								</div>
    							</td>
        					</tr>
                        </tbody>
						</table>
					</div>


					<div class="blockButton_all">
						<div class="blockButton" style="float:left; text-align:left; width:145px;">
							<input id="btnExcelDown" type="button" align="middle" value="엑셀변환" alt="엑셀다운로드" />
						</div>
						<div class="blockButton">
							<ul>
								<li><input type="button" id="btnInsert" value="저장" /></li>
								<li><input type="submit" id="btnInit" value="초기화" /></li>
							</ul>
						</div>
					</div>
				</div>
			</div>
		</form>

	</div>
	<div class="clear"></div>
</div>
