<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="str.tam.actualStatus">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: STR_METRIC_ACTUAL
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 실적입력승인현황 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: STR_METRIC_ACTUAL
	==================================================================
	-->
	<select id="getInsertList" parameterClass="hashMap" resultClass="hashMap">
		SELECT * 
          FROM (
            SELECT YEAR,
                    CHARGE_USER_ID, 
                    CHARGE_USER_NM,
                    EMAIL,
                    CHARGE_DEPT_ID,
                    CHARGE_DEPT_NM,
                    COUNT(DISTINCT SUBJECT_METRIC_ID) TOT_CNT,
                    COUNT(CASE WHEN ACTUAL_STATUS_ID = '01' THEN 1 END) AS CNT01,
                    COUNT(CASE WHEN ACTUAL_STATUS_ID = '02' THEN 1 END) AS CNT02,
                    COUNT(CASE WHEN ACTUAL_STATUS_ID = '03' THEN 1 END) AS CNT03,
                    COUNT(CASE WHEN ACTUAL_STATUS_ID = '04' THEN 1 END) AS CNT04,
                    COUNT(CASE WHEN ACTUAL_STATUS_ID = '05' THEN 1 END) AS CNT05
               FROM(         
                        SELECT A.YEAR,
                                A.SUBJECT_METRIC_ID,
                                A.CHARGE_USER_ID,
                                B.USER_NM AS CHARGE_USER_NM,
                                B.EMAIL,
                                A.CHARGE_DEPT_ID,
                                C.DEPT_NM AS CHARGE_DEPT_NM,
                                NVL(D.ACTUAL_STATUS_ID, '01') AS ACTUAL_STATUS_ID
                          FROM STR_METRIC A
                          LEFT OUTER JOIN V_ROLE_USER B ON A.CHARGE_USER_ID = B.USER_ID 
                          LEFT OUTER JOIN V_DEPTINFO C ON A.CHARGE_DEPT_ID = C.DEPT_ID
                          INNER JOIN STR_METRIC_TARGET T ON A.YEAR=T.YEAR AND A.SUBJECT_METRIC_ID=T.SUBJECT_METRIC_ID AND T.MON= #findMon# AND T.TARGET IS NOT NULL
            			  LEFT OUTER JOIN STR_METRIC_ACTUAL D ON T.YEAR=D.YEAR AND T.SUBJECT_METRIC_ID=D.SUBJECT_METRIC_ID AND T.MON= D.MON 
                          <!-- LEFT OUTER JOIN STR_METRIC_ACTUAL D ON A.YEAR=D.YEAR AND A.SUBJECT_METRIC_ID=D.SUBJECT_METRIC_ID AND D.MON=#findMon# -->
                         WHERE A.YEAR=#findYear#
                           AND A.METRIC_ID IS NULL
                        )
                GROUP BY YEAR, CHARGE_USER_ID, CHARGE_USER_NM, EMAIL, CHARGE_DEPT_ID, CHARGE_DEPT_NM
           )
         WHERE 1=1    
         <dynamic>
		   	<isEqual prepend="AND" property="findStatus" compareValue="Y">
            	TOT_CNT = CNT04
		    </isEqual>
		    <isEqual prepend="AND" property="findStatus" compareValue="N">
            	TOT_CNT != CNT04
		    </isEqual>  
	    </dynamic>
         ORDER BY CHARGE_USER_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 실적승인현황 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: STR_METRIC_ACTUAL
	==================================================================
	-->
	<select id="getApproveList" parameterClass="hashMap" resultClass="hashMap">
		SELECT * 
          FROM (
	        SELECT YEAR,
                    APPROVE_USER_ID, 
                    APPROVE_USER_NM,
                    EMAIL,
                    APPROVE_DEPT_ID,
                    APPROVE_DEPT_NM,
                    COUNT(DISTINCT SUBJECT_METRIC_ID) TOT_CNT,
                    COUNT(CASE WHEN ACTUAL_STATUS_ID = '01' THEN 1 END) AS CNT01,
                    COUNT(CASE WHEN ACTUAL_STATUS_ID = '02' THEN 1 END) AS CNT02,
                    COUNT(CASE WHEN ACTUAL_STATUS_ID = '03' THEN 1 END) AS CNT03,
                    COUNT(CASE WHEN ACTUAL_STATUS_ID = '04' THEN 1 END) AS CNT04,
                    COUNT(CASE WHEN ACTUAL_STATUS_ID = '05' THEN 1 END) AS CNT05
	           FROM(         
	                    SELECT A.YEAR,
                                A.SUBJECT_METRIC_ID,
                                A.APPROVE_USER_ID,
                                B.USER_NM AS APPROVE_USER_NM,
                                B.EMAIL,
                                A.APPROVE_DEPT_ID,
                                C.DEPT_NM AS APPROVE_DEPT_NM,
                                NVL(D.ACTUAL_STATUS_ID, '01') AS ACTUAL_STATUS_ID
	                      FROM STR_METRIC A
	                      LEFT OUTER JOIN V_ROLE_USER B ON A.APPROVE_USER_ID = B.USER_ID 
	                      LEFT OUTER JOIN V_DEPTINFO C ON A.CHARGE_DEPT_ID = C.DEPT_ID
	                      INNER JOIN STR_METRIC_TARGET T ON A.YEAR=T.YEAR AND A.SUBJECT_METRIC_ID=T.SUBJECT_METRIC_ID AND T.MON= #findMon# AND T.TARGET IS NOT NULL
            			  LEFT OUTER JOIN STR_METRIC_ACTUAL D ON T.YEAR=D.YEAR AND T.SUBJECT_METRIC_ID=D.SUBJECT_METRIC_ID AND T.MON= D.MON
	                      <!-- LEFT OUTER JOIN STR_METRIC_ACTUAL D ON A.YEAR=D.YEAR AND A.SUBJECT_METRIC_ID=D.SUBJECT_METRIC_ID AND D.MON=#findMon# -->
	                     WHERE A.YEAR=#findYear#
	                       AND A.METRIC_ID IS NULL
	                    )
	            GROUP BY YEAR, APPROVE_USER_ID, APPROVE_USER_NM, EMAIL, APPROVE_DEPT_ID, APPROVE_DEPT_NM
		   )
		 WHERE 1=1    
		 <dynamic>
		   	<isEqual prepend="AND" property="findStatus" compareValue="Y">
            	TOT_CNT = CNT04
		    </isEqual>
		    <isEqual prepend="AND" property="findStatus" compareValue="N">
            	TOT_CNT != CNT04
		    </isEqual>  
	    </dynamic>
		 ORDER BY APPROVE_USER_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 실적입력승인현황 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: STR_METRIC_ACTUAL
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR                  
			 , MON                   
			 , SUBJECT_METRIC_ID     
			 , ACTUAL                
			 , ACTUAL_BASE           
			 , INSERT_USER_ID        
			 , APPROVE_USER_ID       
			 , APPROVE_DT            
			 , RETURN_DT             
			 , RETURN_REASON         
			 , ACTUAL_STATUS_ID      
		  FROM STR_METRIC_ACTUAL 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND MON = #mon#
		   AND SUBJECT_METRIC_ID = #subjectMetricId#	      
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 실적입력승인현황 등록
	  #	기능	: INSERT
	  #	TABLE	: STR_METRIC_ACTUAL
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		<selectKey resultClass="java.lang.String" keyProperty="SEQ" >
			SELECT F_PGM_SERI('STR_METRIC_ACTUAL','','','','','') SEQ FROM DUAL
		</selectKey>
		INSERT INTO STR_METRIC_ACTUAL ( 
			   YEAR
			 , MON
			 , SUBJECT_METRIC_ID
			 , ACTUAL
			 , ACTUAL_BASE
			 , INSERT_USER_ID
			 , APPROVE_USER_ID
			 , APPROVE_DT
			 , RETURN_DT
			 , RETURN_REASON
			 , ACTUAL_STATUS_ID
			 , CREATE_DT
			 ) VALUES ( 
			   #year#
			 , #SEQ#
			 , #subjectMetricId#
			 , #actual#
			 , #actualBase#
			 , #insertUserId#
			 , #approveUserId#
			 , #approveDt#
			 , #returnDt#
			 , #returnReason#
			 , #actualStatusId#
			 , SYSDATE
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 실적입력승인현황 수정
	  #	기능	: UPDATE
	  #	TABLE	: STR_METRIC_ACTUAL
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE STR_METRIC_ACTUAL 
		   SET ACTUAL                 = #actual# 
			 , ACTUAL_BASE            = #actualBase# 
			 , INSERT_USER_ID         = #insertUserId# 
			 , APPROVE_USER_ID        = #approveUserId# 
			 , APPROVE_DT             = #approveDt# 
			 , RETURN_DT              = #returnDt# 
			 , RETURN_REASON          = #returnReason# 
			 , ACTUAL_STATUS_ID       = #actualStatusId# 
			 , MODIFY_DT              = SYSDATE 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND MON = #mon#
		   AND SUBJECT_METRIC_ID = #subjectMetricId#		
	</update>	
	

	<!--
	==================================================================   
	  # 설명	: 실적입력승인현황 삭제
	  #	기능	: UPDATE
	  #	TABLE	: STR_METRIC_ACTUAL
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM STR_METRIC_ACTUAL 
		 WHERE 1 = 1 
		   AND YEAR = #year#
		   AND MON = #mon#
		   AND SUBJECT_METRIC_ID = #subjectMetricId#
	</update>
	
	
	
	<!--
	==================================================================   
	  # 설명	: 파라미터 맵
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<parameterMap id="paramMap" class="java.util.HashMap">
		<parameter property="year" 			jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>
		<parameter property="mon" 			jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>	
	</parameterMap>	
	
	<!--
	==================================================================   
	  # 설명	: 데이터집계관리 프로시저 호출
	  #	기능	: CALL PROCEDURE
	  #	TABLE	: 
	==================================================================
	-->	
	<procedure id="callSpStrScoreProc"  parameterMap="paramMap">
		{CALL  SP_STR_SCORE(?, ?)} 
    </procedure>
    
    
    <!--
	==================================================================   
	  # 설명	: 파라미터 맵
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<parameterMap id="paramMapActual" class="java.util.HashMap">
		<parameter property="year" 			jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>
	</parameterMap>	
	
    <!--
	==================================================================   
	  # 설명	: 데이터집계관리 프로시저 호출
	  #	기능	: CALL PROCEDURE
	  #	TABLE	: 
	==================================================================
	-->	
	<procedure id="callSpStrActualProc"  parameterMap="paramMapActual">
		{CALL  SP_STR_ACTUAL(?)} 
    </procedure>
	
	
</sqlMap>


