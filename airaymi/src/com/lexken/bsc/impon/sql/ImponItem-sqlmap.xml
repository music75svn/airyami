<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.impon.imponItem">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: BSC_IPE_ITEM
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 평가항목 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_IPE_ITEM
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap" remapResults="true">
		SELECT A.YEAR,
               F_CODE_NM('149', A.ITEM_GBN_ID,A.YEAR) ITEM_GBN_NM,
               A.EVAL_DEGREE_ID,
               A.METRIC_GRP_ID,
               A.ITEM_ID,
               A.ITEM_NM, 
               C.SUM_WEIGHT,
               <iterate property="itemArray" conjunction=",">
		     	 C.DEPT_$itemArray[]$
		       </iterate>,
               B.USER_NM AS ACT_RPT_INSERT_USER_NM
          FROM BSC_IPE_ITEM A
          LEFT OUTER JOIN V_ROLE_USER B ON A.ACT_RPT_INSERT_USER_ID=B.USER_ID
          LEFT OUTER JOIN (SELECT A.YEAR,
                                  A.EVAL_DEGREE_ID,
                                  A.METRIC_GRP_ID,
                                  A.ITEM_ID,
                                   SUM(A.WEIGHT) SUM_WEIGHT,
                                  <iterate property="itemArray" conjunction=",">
		     		 		      MAX(CASE WHEN A.METRIC_ID = '$itemArray[]$' THEN A.WEIGHT END) AS DEPT_$itemArray[]$
		     	  				  </iterate>
                             FROM BSC_IPE_ITEM_WEIGHT A
                            WHERE A.YEAR = #findYear#
                              AND A.EVAL_DEGREE_ID=#findEvalDegreeId# 
                              AND A.METRIC_GRP_ID=#findMetricGrpId# 
                            GROUP BY  A.YEAR, A.EVAL_DEGREE_ID, A.METRIC_GRP_ID, A.ITEM_ID) C 
                      ON A.YEAR=C.YEAR AND A.EVAL_DEGREE_ID=C.EVAL_DEGREE_ID AND A.METRIC_GRP_ID=C.METRIC_GRP_ID AND A.ITEM_ID=C.ITEM_ID
		 WHERE A.YEAR=#findYear#
		   AND A.EVAL_DEGREE_ID=#findEvalDegreeId# 
		   AND A.METRIC_GRP_ID=#findMetricGrpId# 
		 ORDER BY A.ITEM_GBN_ID, A.SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가항목 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_IPE_ITEM
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR                  
			 , A.EVAL_DEGREE_ID        
			 , A.METRIC_GRP_ID         
			 , A.ITEM_ID               
			 , A.ITEM_NM               
			 , A.ITEM_GBN_ID           
			 , A.ACT_RPT_INSERT_USER_ID
			 , B.USER_NM AS ACT_RPT_INSERT_USER_NM
			 , A.SORT_ORDER            
		  FROM BSC_IPE_ITEM A
		       LEFT OUTER JOIN V_ROLE_USER B ON A.ACT_RPT_INSERT_USER_ID = B.USER_ID
		 WHERE 1 = 1 
		   AND A.YEAR = #year#
		   AND A.EVAL_DEGREE_ID = #evalDegreeId#
		   AND A.METRIC_GRP_ID = #metricGrpId#
		   AND A.ITEM_ID = #itemId#	      
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가차수 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_ECM_EVAL_DEGREE
	==================================================================
	-->
	<select id="getDegreeList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR,
               EVAL_DEGREE_ID,
               EVAL_DEGREE_NM
          FROM BSC_ECM_EVAL_DEGREE
          WHERE YEAR=#findYear#
    </select>
    
    <!--
	==================================================================   
	  # 설명	: 비계량 지표 pool목록조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC_GRP
	==================================================================
	-->
	<select id="getPoolList" parameterClass="hashMap" resultClass="hashMap">
		 SELECT DISTINCT A.YEAR,
                A.METRIC_GRP_ID,
                A.METRIC_GRP_NM
           FROM BSC_METRIC_GRP A
           INNER JOIN BSC_METRIC B ON A.YEAR=B.YEAR AND A.METRIC_GRP_ID=B.METRIC_GRP_ID AND B.DELETE_DT IS NULL
          WHERE A.YEAR=#findYear#
            AND A.TYPE_ID='02'
            AND A.DELETE_DT IS NULL
          ORDER BY A.METRIC_GRP_NM 
    </select>
    
    <!--
	==================================================================   
	  # 설명	: 평가항목 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_MAT_ITEM
	==================================================================
	-->
	<select id="getItemList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.METRIC_ID, B.SC_DEPT_NM, 'DEPT_'||A.METRIC_ID AS COL_NM 
          FROM BSC_METRIC A
          LEFT OUTER JOIN BSC_SC_DEPT B ON A.YEAR=B.YEAR AND A.SC_DEPT_ID=B.SC_DEPT_ID AND B.DELETE_DT IS NULL
         WHERE A.YEAR=#findYear#
           AND A.METRIC_GRP_ID=#findMetricGrpId#
           AND A.DELETE_DT IS NULL
         ORDER BY B.SORT_ORDER
	</select>	
	
	 <!--
	==================================================================   
	  # 설명	: 평가항목 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_MAT_ITEM
	==================================================================
	-->
	<select id="getItemWeightList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.METRIC_ID
		     , B.SC_DEPT_NM
		     , C.WEIGHT
          FROM BSC_METRIC A
               LEFT OUTER JOIN BSC_SC_DEPT B ON A.YEAR=B.YEAR AND A.SC_DEPT_ID=B.SC_DEPT_ID AND B.DELETE_DT IS NULL
               LEFT OUTER JOIN BSC_IPE_ITEM_WEIGHT C ON A.YEAR=C.YEAR AND A.METRIC_ID=C.METRIC_ID AND C.EVAL_DEGREE_ID=#evalDegreeId# AND C.ITEM_ID=#itemId#
         WHERE A.YEAR=#year#
           AND A.METRIC_GRP_ID=#metricGrpId#
           AND A.DELETE_DT IS NULL
         ORDER BY B.SORT_ORDER
   </select>	
	
	<!--
	==================================================================   
	  # 설명	: 경평지표관리 코드 채번
	  #	기능	: SELECT
	  #	TABLE	: GOV_METRIC
	==================================================================
	-->
	<select id="getItemId" parameterClass="hashMap" resultClass="java.lang.String">
		SELECT 'I'||LPAD(NVL(MAX(SUBSTR(ITEM_ID,2,6)),0)+1,6,'0') FROM BSC_IPE_ITEM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가항목 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_IPE_ITEM
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO BSC_IPE_ITEM ( 
			   YEAR
			 , EVAL_DEGREE_ID
			 , METRIC_GRP_ID
			 , ITEM_ID
			 , ITEM_NM
			 , ITEM_GBN_ID
			 , CREATE_DT
			 , ACT_RPT_INSERT_USER_ID
			 , SORT_ORDER
			 ) VALUES ( 
			   #year#
			 , #evalDegreeId#
			 , #metricGrpId#
			 , #itemId#
			 , #itemNm#
			 , #itemGbnId#
			 , SYSDATE
			 , #actRptInsertUserId#
			 , #sortOrder#
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 평가항목 가중치 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_IPE_ITEM_WEIGHT
	==================================================================
	-->	
	<insert id="insertWeightData" parameterClass="hashMap">
		INSERT INTO BSC_IPE_ITEM_WEIGHT ( 
			   YEAR
			 , EVAL_DEGREE_ID
			 , METRIC_GRP_ID
			 , METRIC_ID
			 , ITEM_ID
			 , WEIGHT
			 , CREATE_DT
			 ) VALUES ( 
			   #year#
			 , #evalDegreeId#
			 , #metricGrpId#
			 , #metricId#
			 , #itemId#
			 , #weight#
			 , SYSDATE
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 평가항목 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_IPE_ITEM
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE BSC_IPE_ITEM 
		   SET ITEM_NM                = #itemNm# 
			 , ITEM_GBN_ID            = #itemGbnId# 
			 , MODIFY_DT              = SYSDATE 
			 , ACT_RPT_INSERT_USER_ID = #actRptInsertUserId# 
			 , SORT_ORDER             = #sortOrder# 
		 WHERE YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
		   AND METRIC_GRP_ID = #metricGrpId#
		   AND ITEM_ID = #itemId#		
	</update>	
	

	<!--
	==================================================================   
	  # 설명	: 평가항목 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_IPE_ITEM
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM BSC_IPE_ITEM 
		 WHERE YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
		   AND METRIC_GRP_ID = #metricGrpId#
		   AND ITEM_ID = #itemId#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 평가항목 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_IPE_ITEM
	==================================================================
	-->	
	<update id="deleteWeightData" parameterClass="hashMap">
		DELETE FROM BSC_IPE_ITEM_WEIGHT 
		 WHERE YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
		   AND METRIC_GRP_ID = #metricGrpId#
		   AND ITEM_ID = #itemId#
	</update>
	
	
</sqlMap>


