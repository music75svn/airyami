<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="man.tam.targetStatus">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: STR_METRIC_TARGET_STATUS
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 목표입력/승인현황 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: MAN_METRIC
	==================================================================
	-->
	<select id="getInsertList" parameterClass="hashMap" resultClass="hashMap">
		SELECT * 
			          FROM (
						 SELECT         YEAR
						                   , INSERT_USER_ID
						                   , INSERT_USER_NM
						                   , EMAIL
						                   , INSERT_DEPT_ID
						                    ,INSERT_DEPT_NM
						                   , COUNT(DISTINCT MAN_KPI_ID) TOT_CNT
						                   , COUNT(CASE WHEN TGT_STATUS_ID = '01' THEN 1 END) AS CNT01
						                   , COUNT(CASE WHEN TGT_STATUS_ID = '02' THEN 1 END) AS CNT02
						                   , COUNT(CASE WHEN TGT_STATUS_ID = '03' THEN 1 END) AS CNT03
						                   , COUNT(CASE WHEN TGT_STATUS_ID = '04' THEN 1 END) AS CNT04
						                   , COUNT(CASE WHEN TGT_STATUS_ID = '05' THEN 1 END) AS CNT05
						                   , COUNT(CASE WHEN TGT_STATUS_ID = '06' THEN 1 END) AS CNT06
						FROM(SELECT A.YEAR
							          , A.MAN_KPI_ID
							          , A.INSERT_USER_ID
							          , A.INSERT_USER_NM
							          , B.EMAIL
							          , B.DEPT_ID AS INSERT_DEPT_ID
							          , C.DEPT_NM AS INSERT_DEPT_NM
							          , NVL(A.TGT_STATUS_ID, '01') AS TGT_STATUS_ID
						FROM MAN_METRIC A , V_ROLE_USER B, V_DEPTINFO C
						WHERE A.INSERT_USER_ID = B.SABUN
						AND B.DEPT_ID = C.DEPT_ID
						AND DELETE_DT IS NULL
						AND A.YEAR=#findYear#)
						   GROUP BY YEAR, INSERT_USER_ID, INSERT_USER_NM, EMAIL, INSERT_DEPT_ID, INSERT_DEPT_NM
			     )
			         WHERE 1=1    
		 <dynamic>
		   	<isEqual prepend="AND" property="findStatus" compareValue="Y">
            	TOT_CNT = CNT04
		    </isEqual>
		    <isEqual prepend="AND" property="findStatus" compareValue="N">
            	TOT_CNT != CNT04
		    </isEqual>  
	    </dynamic>
		 ORDER BY INSERT_USER_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 목표확인현황 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: MAN_METRIC
	==================================================================
	-->
	<select id="getCheckList" parameterClass="hashMap" resultClass="hashMap">
		   SELECT * 
          FROM (
            SELECT YEAR
                    , APPROVE_USER_ID
                    , APPROVE_USER_NM
                    , EMAIL
                    , APPROVE_DEPT_ID
                    , APPROVE_DEPT_NM
                    , COUNT(DISTINCT MAN_KPI_ID) TOT_CNT
                    , COUNT(CASE WHEN TGT_STATUS_ID = '01' THEN 1 END) AS CNT01
                    , COUNT(CASE WHEN TGT_STATUS_ID = '02' THEN 1 END) AS CNT02
                    , COUNT(CASE WHEN TGT_STATUS_ID = '03' THEN 1 END) AS CNT03
                    , COUNT(CASE WHEN TGT_STATUS_ID = '04' THEN 1 END) AS CNT04
                    , COUNT(CASE WHEN TGT_STATUS_ID = '05' THEN 1 END) AS CNT05
                    , COUNT(CASE WHEN TGT_STATUS_ID = '06' THEN 1 END) AS CNT06
               FROM(         
                        SELECT A.YEAR
                                , A.MAN_KPI_ID
                                , A.APPROVE_USER_ID
                                , A.APPROVE_USER_NM
                                , B.EMAIL
                                , B.DEPT_ID AS APPROVE_DEPT_ID
                                , C.DEPT_NM AS APPROVE_DEPT_NM
                                , NVL(A.TGT_STATUS_ID, '01') AS TGT_STATUS_ID
                        FROM MAN_METRIC A , V_ROLE_USER B, V_DEPTINFO C
                        WHERE A.APPROVE_USER_ID = B.SABUN
                        AND B.DEPT_ID = C.DEPT_ID
                        AND DELETE_DT IS NULL
                        AND A.YEAR=#findYear#
                        )
                GROUP BY YEAR, APPROVE_USER_ID, APPROVE_USER_NM, EMAIL, APPROVE_DEPT_ID, APPROVE_DEPT_NM
           )
         WHERE 1=1    
		 <dynamic>
		   	<isEqual prepend="AND" property="findStatus" compareValue="Y">
            	TOT_CNT = CNT04
		    </isEqual>
		    <isEqual prepend="AND" property="findStatus" compareValue="N">
            	TOT_CNT != CNT04
		    </isEqual>  
	    </dynamic>
		 ORDER BY APPROVE_USER_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 목표승인현황 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: MAN_METRIC
	==================================================================
	-->
	<select id="getApproveList" parameterClass="hashMap" resultClass="hashMap">
		   SELECT * 
          FROM (
            SELECT YEAR
                    , COUNT(DISTINCT MAN_KPI_ID) TOT_CNT
                    , COUNT(CASE WHEN TGT_STATUS_ID = '01' THEN 1 END) AS CNT01
                    , COUNT(CASE WHEN TGT_STATUS_ID = '02' THEN 1 END) AS CNT02
                    , COUNT(CASE WHEN TGT_STATUS_ID = '03' THEN 1 END) AS CNT03
                    , COUNT(CASE WHEN TGT_STATUS_ID = '04' THEN 1 END) AS CNT04
                    , COUNT(CASE WHEN TGT_STATUS_ID = '05' THEN 1 END) AS CNT05
                    , COUNT(CASE WHEN TGT_STATUS_ID = '06' THEN 1 END) AS CNT06
               FROM(         
                        SELECT A.YEAR
                                , A.MAN_KPI_ID
                                , NVL(A.TGT_STATUS_ID, '01') AS TGT_STATUS_ID
                        FROM MAN_METRIC A 
                        WHERE A.YEAR=#findYear#
                        AND DELETE_DT IS NULL
                        )
                GROUP BY YEAR
           )
         WHERE 1=1    
		 <dynamic>
		   	<isEqual prepend="AND" property="findStatus" compareValue="Y">
            	TOT_CNT = CNT04
		    </isEqual>
		    <isEqual prepend="AND" property="findStatus" compareValue="N">
            	TOT_CNT != CNT04
		    </isEqual>  
	    </dynamic>
	</select>
	
	
	<!--
	==================================================================   
	  # 설명	: 파라미터 맵
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<parameterMap id="paramMap" class="java.util.HashMap">
		<parameter property="year" 			jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>
	</parameterMap>	
	
	<!--
	==================================================================   
	  # 설명	: 데이터집계관리 프로시저 호출
	  #	기능	: CALL PROCEDURE
	  #	TABLE	: 
	==================================================================
	-->	
	<procedure id="callSpTargetProc"  parameterMap="paramMap">
		{CALL  SP_MAN_TRANS_TARGET(?)} 
    </procedure>
	
		
</sqlMap>


