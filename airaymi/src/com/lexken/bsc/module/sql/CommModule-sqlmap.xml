<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.module.commModule">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />


	<!--
	==================================================================   
	  # 설명	: 실조직 트리 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_DEPTINFO
	==================================================================
	-->
	<select id="getDeptList" parameterClass="hashMap" resultClass="hashMap">
		SELECT 'A'||A.DEPT_ID AS CODE_ID
		      , A.DEPT_NM AS CODE_NM
		      ,'A'||A.UP_DEPT_ID AS UP_CODE_ID
		      , LEVEL AS LEVEL_ID
		FROM  V_DEPTINFO A
		WHERE BEING_YN = 'Y'
		START WITH UP_DEPT_ID IS NULL
		CONNECT BY PRIOR DEPT_ID = UP_DEPT_ID   
		ORDER SIBLINGS BY OUORDER
	</select>
	
	
	<!--
	==================================================================   
	  # 설명	: 평가조직 트리 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->
	<select id="getScDeptList" parameterClass="hashMap" resultClass="hashMap">
		SELECT     A.SC_DEPT_ID AS CODE_ID
		         , A.SC_DEPT_NM AS CODE_NM
		         , A.UP_SC_DEPT_ID AS UP_CODE_ID
		         , LEVEL AS LEVEL_ID
		         , A.LEVEL_ID || '^' || A.SC_DEPT_GRP_ID || '^' || A.BSC_USER_ID || '^' || A.MANAGER_USER_ID || '^' || A.CHILD_DEPT_CNT || '^' AS PARAM<!-- TREE에서 PARAMETER 전달용 -->
		      FROM (SELECT T.*
		                 , NVL ((SELECT   COUNT (1)
		                             FROM BSC_SC_DEPT
		                            WHERE YEAR = T.YEAR
		                              AND UP_SC_DEPT_ID = T.SC_DEPT_ID
		                         GROUP BY YEAR, UP_SC_DEPT_ID), '0') AS CHILD_DEPT_CNT
		              FROM BSC_SC_DEPT T) A
		     WHERE A.YEAR = #findYear#
		       AND A.DELETE_DT IS NULL
		START WITH A.UP_SC_DEPT_ID IS NULL
		CONNECT BY PRIOR A.SC_DEPT_ID = A.UP_SC_DEPT_ID
		       AND PRIOR A.YEAR = A.YEAR
		ORDER SIBLINGS BY SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 인사조직 트리 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getDeptList1" parameterClass="hashMap" resultClass="hashMap">
		   SELECT DEPT_CD AS CODE_ID
                , DEPT_KOR_NM AS CODE_NM
                , UP_DEPT_CD  AS UP_CODE_ID
                , UP_USER_ID
                , USE_YN
                , DEPT_LEVL AS LEVEL_ID
                , DISP_ORDER
             FROM BSC_INSA_DEPT
            WHERE YEAR = #findYear#
       START WITH UP_DEPT_CD IS NULL
     CONNECT BY PRIOR DEPT_CD = UP_DEPT_CD AND PRIOR YEAR = YEAR
       ORDER SIBLINGS BY DEPT_CD
		 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 실조직 트리 조회
	  #	기능	: SELECT
	  #	TABLE	: KGS_INSA_DEPT
	==================================================================
	-->
	<select id="getDeptList2" parameterClass="hashMap" resultClass="hashMap">
         SELECT A.YEAR
       , A.DEPT_CD AS CODE_ID
       , CASE
            WHEN A.UP_DEPT_CD = B.DEPT_CD THEN  '(' || B.DEPT_KOR_NM || ') ' || A.DEPT_KOR_NM
            ELSE A.DEPT_KOR_NM 
         END
            CODE_NM
       , A.DEPT_KOR_NM 
       , A.UP_DEPT_CD AS UP_CODE_ID
       , A.DEPT_LEVL AS LEVEL_ID
       , A.DISP_ORDER
    FROM    KGS_INSA_DEPT A
         LEFT OUTER JOIN
            KGS_INSA_DEPT B
         ON A.YEAR = B.YEAR
        AND A.UP_DEPT_CD = B.DEPT_CD
   WHERE A.YEAR = #findYear#
ORDER BY A.DISP_ORDER
		 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가조직 트리 조회(미사용 포함)
	  #	기능	: SELECT
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->
	<select id="getScDeptAllList" parameterClass="hashMap" resultClass="hashMap">
		SELECT     A.SC_DEPT_ID AS CODE_ID
		         , CASE WHEN A.DELETE_DT IS NULL THEN A.SC_DEPT_NM
                        ELSE A.SC_DEPT_NM||'['||F_CODE_NM('011', 'N','9999')||']'
                   END CODE_NM
		         , A.UP_SC_DEPT_ID AS UP_CODE_ID
		         , LEVEL AS LEVEL_ID
		         , A.LEVEL_ID || '^' || A.SC_DEPT_GRP_ID || '^' || A.BSC_USER_ID || '^' || A.MANAGER_USER_ID || '^' || A.CHILD_DEPT_CNT || '^' AS PARAM<!-- TREE에서 PARAMETER 전달용 -->
		      FROM (SELECT T.*
		                 , NVL ((SELECT   COUNT (1)
		                             FROM BSC_SC_DEPT
		                            WHERE YEAR = T.YEAR
		                              AND UP_SC_DEPT_ID = T.SC_DEPT_ID
		                         GROUP BY YEAR, UP_SC_DEPT_ID), '0') AS CHILD_DEPT_CNT
		              FROM BSC_SC_DEPT T) A
		     WHERE A.YEAR = #findYear#
		START WITH A.UP_SC_DEPT_ID IS NULL
		CONNECT BY PRIOR A.SC_DEPT_ID = A.UP_SC_DEPT_ID
		       AND PRIOR A.YEAR = A.YEAR
		ORDER SIBLINGS BY SORT_ORDER
	</select>
	
	
	<!--
	==================================================================   
	  # 설명	: 권한별 평가조직 트리 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->
	<select id="getScDeptAuthList" parameterClass="hashMap" resultClass="hashMap">
		SELECT T.YEAR
		     , T.CODE_ID
		     , T.CODE_NM
		     , T.UP_CODE_ID
		     , LEVEL AS LEVEL_ID
		FROM (
		   SELECT A.YEAR
		        , A.SC_DEPT_ID AS CODE_ID
		        , A.SC_DEPT_NM AS CODE_NM 
		        , F_UP_SC_DEPT_ID(A.YEAR, A.SC_DEPT_ID, #loginUserId#) AS UP_CODE_ID
		        , A.SORT_ORDER
		     FROM BSC_SC_DEPT A
		    WHERE A.YEAR = #findYear#
              AND (A.BSC_USER_ID = #loginUserId# OR A.MANAGER_USER_ID = #loginUserId#)
		      AND A.DELETE_DT IS NULL
		) T
		START WITH T.UP_CODE_ID IS NULL
		CONNECT BY PRIOR T.CODE_ID = T.UP_CODE_ID
		       AND PRIOR T.YEAR = T.YEAR
		ORDER SIBLINGS BY T.SORT_ORDER, T.CODE_ID 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 최상위 평가조직 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_DEPTINFO
	==================================================================
	-->
	<select id="getTopScDeptInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT SC_DEPT_ID, SC_DEPT_NM
		FROM 
		(
		    SELECT YEAR, SC_DEPT_ID, SC_DEPT_NM
		      FROM BSC_SC_DEPT
		     WHERE YEAR = #findYear#
		       AND DELETE_DT IS NULL
		     ORDER BY LEVEL_ID, SORT_ORDER, SC_DEPT_ID
		)
		WHERE ROWNUM = 1
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 최상위 평가조직 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_DEPTINFO
	==================================================================
	-->
	<select id="getTopScDeptId" parameterClass="hashMap" resultClass="java.lang.String">
		SELECT SC_DEPT_ID
		FROM 
		(
		    SELECT YEAR, SC_DEPT_ID, SC_DEPT_NM
		      FROM BSC_SC_DEPT
		     WHERE YEAR = #findYear#
		       AND DELETE_DT IS NULL
		     ORDER BY LEVEL_ID, SORT_ORDER, SC_DEPT_ID
		)
		WHERE ROWNUM = 1
	</select>	
	
	<!--
	==================================================================   
	  # 설명	: 최상위 실조직 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_DEPTINFO
	==================================================================
	-->
	<select id="getTopDeptInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT DEPT_ID, DEPT_NM
        FROM 
        (
           SELECT DEPT_ID, DEPT_NM 
           FROM BSC_DEPTINFO
           ORDER BY OULEVEL ASC NULLS FIRST 
        )
        WHERE ROWNUM = 1
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 직위 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_CODE
	==================================================================
	-->	
	<select id="getPosTcList" parameterClass="hashMap" resultClass="hashMap">
		SELECT CODE_ID POS_TC
			 , CODE_NM POS_TC_NM
		  FROM BSC_CODE
		 WHERE CODE_GRP_ID = '171'
		 AND YEAR = #findYear#  	 
	</select>

	<!--
	==================================================================   
	  # 설명	: 사용자정보 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_USERINFO
	==================================================================
	-->
	<select id="getUserList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.SABUN
	         , A.USER_ID 
	         , A.USER_NM
	         , A.DEPT_ID
	         , A.DEPT_NM
	         , A.JIKGUB_CD
	         , A.JIKGUB_NM
	         , A.POS_CD
	         , A.POS_NM
	         , A.EMAIL
		 FROM V_ROLE_USER A
		WHERE 1=1
		
		<isEmpty prepend="AND" property="findUserNm">
			A.DEPT_ID = SUBSTR(#deptId#, 2)
		</isEmpty>
		  
		<isNotEmpty prepend="AND" property="findUserNm">
            UPPER(A.USER_NM) LIKE  '%' || TRIM(UPPER(#findUserNm#)) ||'%'
	   	</isNotEmpty>
	   	
		ORDER BY A.JIKGUB_CD, A.POS_CD 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 사용자정보 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_USERINFO
	==================================================================
	-->
	<select id="getDeptMetricList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.METRIC_ID
	         , A.METRIC_NM
		 FROM BSC_METRIC A
		WHERE A.YEAR = #findYear#
		  AND A.SC_DEPT_ID = #findScDeptId#
		ORDER BY A.SORT_ORDER, A.METRIC_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 사용자정보 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_USERINFO
	==================================================================
	-->
	<select id="getMemUserList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.EMP_NO AS SABUN
	         , A.EMP_NO AS USER_ID 
	         , A.EMP_NM AS USER_NM
	         , A.DEPT_CD AS DEPT_ID
	         , A.DEPT_NM AS  DEPT_NM
	         , A.CAST_TC AS JIKGUB_CD
	         , F_CODE_NM('170',A.CAST_TC,A.YEAR) AS JIKGUB_NM
	         , A.POS_TC AS POS_CD
	         , F_CODE_NM('171',A.POS_TC,A.YEAR) AS POS_NM
	         , '' AS EMAIL
		 FROM MEM_USER A
		WHERE 1=1
		  AND YEAR = #findYear#
		<isEmpty prepend="AND" property="findUserNm">
			A.DEPT_CD = #deptId#
		</isEmpty>
		  
		<isNotEmpty prepend="AND" property="findUserNm">
            UPPER(A.EMP_NM) LIKE  '%' || TRIM(UPPER(#findUserNm#)) ||'%'
	   	</isNotEmpty>
	   	
		ORDER BY A.CAST_TC, A.POS_TC 
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 메뉴정보 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_PGMLIST
	==================================================================
	-->
	<select id="getMenuInfoList" parameterClass="hashMap" resultClass="hashMap">
        SELECT A.PGM_ID AS highPgmId
             , A.PGM_NM AS highPgmNm
             , B.PGM_ID AS subPgmId
             , B.PGM_NM AS subPgmNm
             , C.PGM_ID AS pgmId
             , C.PGM_NM AS pgmNm
        FROM BSC_PGMLIST A
             LEFT OUTER JOIN BSC_PGMLIST B ON A.PGM_ID = B.UP_PGM_ID
             LEFT OUTER JOIN BSC_PGMLIST C ON B.PGM_ID = C.UP_PGM_ID 
        WHERE A.LEVEL_ID = '01'
		ORDER BY A.PGM_ID, B.PGM_ID, C.PGM_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 사용자정보 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_USERINFO
	==================================================================
	-->
	<select id="getUserInfoAllList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.SABUN
	         , A.USER_ID 
	         , A.USER_NM
	         , A.DEPT_ID
	         , A.DEPT_NM
	         , A.JIKGUB_CD
	         , A.JIKGUB_NM
	         , A.POS_CD
	         , A.POS_NM
	         , A.EMAIL_ID
		 FROM V_ROLE_USER A
	</select>
	
	<!--
	==================================================================   
	  # 설명	: KPI 지표풀 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC_GRP
	==================================================================
	-->
	<select id="getKpiGrpList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.MAN_KPI_GRP_ID AS METRIC_GRP_ID
		     , A.MAN_KPI_GRP_NM AS METRIC_GRP_NM           
		     , A.TYPE_ID
		     , F_CODE_NM('007', A.TYPE_ID, '9999') AS TYPE_NM 
		     , '01' AS METRIC_PROPERTY_ID
		     , F_CODE_NM('010', '01', '9999') AS METRIC_PROPERTY_NM       
		     , A.DESCRIPTION 
		FROM MAN_METRIC_GRP A                                                       
		WHERE A.DELETE_DT IS NULL                      
		<isNotEmpty prepend="AND" property="findMetricGrpNm">
			A.MAN_KPI_GRP_ID||UPPER(A.MAN_KPI_GRP_NM)||UPPER(A.DESCRIPTION) LIKE  '%' || TRIM(UPPER(#findMetricGrpNm#)) ||'%'
		</isNotEmpty>
		ORDER BY A.MAN_KPI_GRP_NM, A.MAN_KPI_GRP_ID
	</select>	
	
	<!--
	==================================================================   
	  # 설명	: 지표풀 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC_GRP
	==================================================================
	-->
	<select id="getMetricGrpList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.METRIC_GRP_ID
		     , A.METRIC_GRP_NM           
		     , A.TYPE_ID
		     , F_CODE_NM('007', A.TYPE_ID, A.YEAR) AS TYPE_NM 
		     , A.METRIC_PROPERTY_ID
		     , F_CODE_NM('010', A.METRIC_PROPERTY_ID, A.YEAR) AS METRIC_PROPERTY_NM       
		     , A.DESCRIPTION 
		FROM BSC_METRIC_GRP A                                                       
		WHERE A.YEAR = #findYear#
		  AND A.DELETE_DT IS NULL                      
		<isNotEmpty prepend="AND" property="findMetricGrpNm">
			A.METRIC_GRP_ID||UPPER(A.METRIC_GRP_NM)||UPPER(A.DESCRIPTION) LIKE  '%' || TRIM(UPPER(#findMetricGrpNm#)) ||'%'
		</isNotEmpty>
		ORDER BY A.METRIC_GRP_NM, A.METRIC_GRP_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 지표풀 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC_GRP
	==================================================================
	-->
	<select id="getMemMetricGrpList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.METRIC_GRP_ID
		     , A.METRIC_GRP_NM           
		     , A.TYPE_ID
		     , F_CODE_NM('007', A.TYPE_ID, A.YEAR) AS TYPE_NM 
		     , A.EVAL_GBN_ID
		     , F_CODE_NM('240', A.EVAL_GBN_ID, A.YEAR) AS EVAL_GBN_NM       
		FROM MEM_METRIC_GRP A                                                       
		WHERE A.YEAR = #findYear#
		  AND A.DELETE_DT IS NULL                      
		<isNotEmpty prepend="AND" property="findMetricGrpNm">
			A.METRIC_GRP_ID||UPPER(A.METRIC_GRP_NM)||UPPER(A.DESCRIPTION) LIKE  '%' || TRIM(UPPER(#findMetricGrpNm#)) ||'%'
		</isNotEmpty>
		ORDER BY A.METRIC_GRP_NM, A.METRIC_GRP_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 지표 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->
	<select id="getMetricList" parameterClass="hashMap" resultClass="hashMap">
		SELECT  A.METRIC_ID
		      , A.METRIC_NM
		      , A.STRATEGY_ID
		      , B.STRATEGY_NM
		      , A.SC_DEPT_ID
		      , CASE WHEN D.SC_DEPT_NM IS NULL THEN C.SC_DEPT_NM
		             ELSE D.SC_DEPT_NM ||' > '|| C.SC_DEPT_NM 
		        END AS SC_DEPT_NM
		FROM BSC_METRIC A
		     INNER JOIN BSC_STRATEGY B ON A.YEAR = B.YEAR AND A.STRATEGY_ID = B.STRATEGY_ID AND B.DELETE_DT IS NULL 
		     INNER JOIN BSC_SC_DEPT C ON A.YEAR = C.YEAR AND A.SC_DEPT_ID = C.SC_DEPT_ID AND C.DELETE_DT IS NULL
		     LEFT OUTER JOIN BSC_SC_DEPT D ON C.YEAR = D.YEAR AND C.UP_SC_DEPT_ID = D.SC_DEPT_ID AND D.DELETE_DT IS NULL
       WHERE A.YEAR = #findYear#
         AND A.DELETE_DT IS NULL

		<isNotEmpty prepend="AND" property="findMetricNm">
			UPPER(A.METRIC_NM) LIKE  '%' || TRIM(UPPER(#findMetricNm#)) ||'%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="findTypeId">
			A.TYPE_ID =   #findTypeId#
		</isNotEmpty>
		
		<isEmpty prepend="AND" property="findMetricNm">
			1 = 2
		</isEmpty>
	   	      
		 ORDER BY A.METRIC_NM, A.METRIC_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 시스템항목 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_DEPTINFO
	==================================================================
	-->
	<select id="getSystemItemList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
		     , A.ITEM_CD
		     , A.ITEM_NM
		     , A.ITEM_DIVI 
		     , F_CODE_NM('062', A.ITEM_DIVI, '9999') AS ITEM_DIVI_NM
		FROM BSC_SYSTEM_ITEM A
		WHERE A.YEAR = #findYear#
		  AND A.ITEM_ACTUAL_DIVI = #findItemActualDivi#  <!-- 01: 목표연계, 02 : 실적연계 -->

		  <!--AND A.ITEM_DIVI = '01' -->
		  
		<isNotEmpty prepend="AND" property="findItemNm">
			UPPER(A.ITEM_CD||A.ITEM_NM) LIKE  '%' || TRIM(UPPER(#findItemNm#)) ||'%'
		</isNotEmpty>
		
		  AND A.DELETE_DT IS NULL
		ORDER BY A.ITEM_CD, A.ITEM_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 신호등 정보 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getSignalList" parameterClass="hashMap" resultClass="hashMap">
		
			SELECT A.CODE_ID, B.FROM_VALUE, B.TO_VALUE, A.CODE_NM, 
			       B.COLOR
			  FROM BSC_CODE A
			   LEFT OUTER JOIN BSC_COMMON_STATUS B
			    ON A.CODE_ID= B.STATUS_ID
			  AND B.YEAR= A.YEAR
			 WHERE A.CODE_GRP_ID = '021'
			   AND A.DELETE_DT IS NULL
			   AND A.YEAR = (SELECT CASE YEAR_YN WHEN 'Y' THEN #findYear# ELSE '9999' END FROM BSC_CODE_GRP WHERE CODE_GRP_ID = '021')
			 ORDER BY A.SORT_ORDER, A.CODE_ID
		 
	</select>
	
	
	<!--
	==================================================================   
	  # 설명	: 성과조직 명 가져오기
	  #	기능	: SELECT
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->
	<select id="getScDeptNm" parameterClass="hashMap" resultClass="String">
		SELECT SC_DEPT_NM
		FROM BSC_SC_DEPT
		WHERE YEAR=#year#
		AND SC_DEPT_ID=#scDeptId#
		AND DELETE_DT IS NULL
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 성과조직 명 가져오기
	  #	기능	: SELECT
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->
	<select id="getGovMetricNm" parameterClass="hashMap" resultClass="String">
		SELECT GOV_METRIC_NM
    	  FROM GOV_METRIC
		 WHERE YEAR=#year#
		   AND GOV_METRIC_ID=#findGovMetricId#
		   AND DELETE_DT IS NULL
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 사용자 명 가져오기
	  #	기능	: SELECT
	  #	TABLE	: V_ROLE_USER
	==================================================================
	-->
	<select id="getUserNm" parameterClass="hashMap" resultClass="String">
		SELECT USER_NM
		FROM V_ROLE_USER
		WHERE USER_ID=#userId#
		AND BEING_YN='Y'
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 전략과제 명 가져오기
	  #	기능	: SELECT
	  #	TABLE	: BSC_DEPT_STRATEGY
	==================================================================
	-->
	<select id="getStrategyNm" parameterClass="hashMap" resultClass="String">
		SELECT STRATEGY_NM
		FROM BSC_STRATEGY
		WHERE YEAR=#year#
		AND STRATEGY_ID=#strategyId#
		AND DELETE_DT IS NULL
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 지표POOL 명 가져오기
	  #	기능	: SELECT
	  #	TABLE	: METRIC_GRP_NM
	==================================================================
	-->
	<select id="getMetricGrpNm" parameterClass="hashMap" resultClass="String">
		SELECT METRIC_GRP_NM
		FROM BSC_METRIC_GRP
		WHERE YEAR=#year#
		AND METRIC_GRP_ID=#metricGrpId#
		AND DELETE_DT IS NULL
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 지표 명 가져오기
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->
	<select id="getMetricNm" parameterClass="hashMap" resultClass="String">
		SELECT METRIC_NM
		FROM BSC_METRIC
		WHERE YEAR=#year#
		AND METRIC_ID=#metricId#
		AND DELETE_DT IS NULL
	</select>

	
	<!--
	==================================================================   
	  # 설명	: 지표 정보 가져오기
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->
	<select id="getMetricInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT  
		   YEAR,
	       METRIC_ID,
	       METRIC_NM,
	       METRIC_GRP_ID,
	       SC_DEPT_ID,
	       TYPE_ID,
	       STRATEGY_ID,
	       KPI_PURPOSE,
	       BSC_METRIC_GBN,
	       UP_METRIC_ID,
	       METRIC_PROPERTY_ID,
	       TAM_SHARE_YN,
	       WEIGHT,
	       EVAL_CYCLE,
	       TIME_ROLLUP,
	       DEPT_ROLLUP,
	       CAL_GUBUN,
	       ACT_CAL_TYPE,
	       FUNCTION_GUBUN,
	       SCORE_CAL_TYPE_GUBUN,
	       SCORE_CAL_TYPE_ID,
	       TGT_INSERT_GUBUN,
	       INITIATIVE_YN,
	       UNIT,
	       SORT_ORDER,
	       ITEM_CD,
	       INSERT_USER_ID,
	       APPROVE_USER_ID,
	       ACTUAL_Y,
	       ACTUAL_3Y,
	       ACTUAL_2Y,
	       ACTUAL_1Y,
	       STRETCH_GOAL,
	       MEDIUM_TARGETY,
	       (SELECT TGT_VALUE FROM BSC_TARGET WHERE YEAR = #year# AND MON='12' AND METRIC_ID = #metricId# AND ANAL_CYCLE='Y') TARGETY,
	       TARGET_Y1,
	       TARGETY_TXT,
	       CONTENT
		FROM BSC_METRIC
		WHERE YEAR = #year#
		AND METRIC_ID = #metricId#
		AND DELETE_DT IS NULL
	</select>	
	
	
	<!--
	==================================================================   
	  # 설명	: 정평지표 정보 가져오기
	  #	기능	: SELECT
	  #	TABLE	: GOV_METRIC
	==================================================================
	-->
	<select id="getGovMetricInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR, GOV_METRIC_ID, GOV_METRIC_NM, GOV_METRIC_GRP_ID, CONTENT, GBN_ID
             , DIREC_ID, EVAL_METHOD_ID, UNIT, ACT_CAL_TYPE, DETAIL_EVAL_SUMMARY_COMMENT, SC_DEPT_ID
             , INSERT_USER_ID, BASE_VALUE, BEST_TARGET, LOWEST_TARGET, STAD_CONST, SORT_ORDER
             , WEIGHT, SIMULATION_YN, UNMEAS_BEST_TARGET, MAIN_METRIC_YN, UP_METRIC_ID, CREATE_DT
             , DELETE_DT, EVAL_CAT_ID, EVAL_CAT_GRP_ID
		  FROM GOV_METRIC
		 WHERE YEAR = #year#
		   AND GOV_METRIC_ID = #metricId#
		   AND DELETE_DT IS NULL
	</select>	
	
	<!--
	==================================================================   
	  # 설명	: 지표 조회 (공통)
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->
	<select id="getCommMetricList" parameterClass="hashMap" resultClass="hashMap">
         SELECT B.SC_DEPT_NM, 
                B.SC_DEPT_ID, 
                A.METRIC_ID, 
                A.METRIC_NM
           FROM BSC_METRIC A
                INNER JOIN BSC_SC_DEPT B
                ON A.YEAR = B.YEAR
                AND A.SC_DEPT_ID = B.SC_DEPT_ID
                AND B.DELETE_DT IS NULL
     	  WHERE 1=1 
         	AND A.YEAR = #findYear# 
            AND A.DELETE_DT IS NULL
        <isNotEmpty prepend="AND" property="findScDeptId">
        	    A.SC_DEPT_ID  = #findScDeptId#
        </isNotEmpty>
          ORDER BY B.SORT_ORDER, B.SC_DEPT_ID, A.SORT_ORDER, A.METRIC_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 지표 조회 (성과조직검색도 추가)
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->
	<select id="getMetricListScDeptSearch" parameterClass="hashMap" resultClass="hashMap">
         SELECT B.SC_DEPT_NM, 
                B.SC_DEPT_ID, 
                A.METRIC_ID, 
                A.METRIC_NM, 
                C.STRATEGY_NM 
          FROM BSC_METRIC A, 
     	    BSC_SC_DEPT B,
     	    BSC_STRATEGY C
     	    WHERE 1=1 AND B.DELETE_DT IS NULL
         	 AND A.YEAR = #findYear# 
           AND A.YEAR = B.YEAR 
           AND A.SC_DEPT_ID = B.SC_DEPT_ID
           AND C.YEAR = A.YEAR
           AND C.STRATEGY_ID = A.STRATEGY_ID
        <isNotEmpty prepend="AND" property="findPopMetricNm">
        	   A.METRIC_NM LIKE '%'||#findPopMetricNm#||'%' 
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="findPopScDeptNm">
        	   B.SC_DEPT_NM LIKE '%'||#findPopScDeptNm#||'%'
        </isNotEmpty>  
           AND A.DELETE_DT IS NULL 
         ORDER BY B.SORT_ORDER, B.SC_DEPT_ID, C.SORT_ORDER, C.STRATEGY_ID, A.SORT_ORDER, A.METRIC_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 전략과제 목록 팝업
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getStrategyList" parameterClass="hashMap" resultClass="hashMap">

         SELECT B.SC_DEPT_ID, B.SC_DEPT_NM, STRATEGY_ID, STRATEGY_NM, DB_INITIATIVE_ID, PERSPECTIVE_ID 
                ,UP_STRATEGY_ID, A.SORT_ORDER,					
                (SELECT STRATEGY_NM FROM BSC_DEPT_STRATEGY		
                  WHERE YEAR = A.YEAR
                    AND SC_DEPT_ID = A.SC_DEPT_ID							
                    AND STRATEGY_ID = A.UP_STRATEGY_ID)			
                AS UP_STRATEGY_NM,							
                (SELECT COUNT(*) FROM BSC_METRIC				
                  WHERE YEAR = A.YEAR							
                    AND SC_DEPT_ID = A.SC_DEPT_ID				
                    AND STRATEGY_ID = A.STRATEGY_ID			
                    AND DELETE_DT IS NULL) AS METRIC_CNT		
           FROM BSC_DEPT_STRATEGY A,
           
       	    BSC_SC_DEPT B							
       	    WHERE 1=1 AND B.DELETE_DT IS NULL
           
           <isNotEmpty prepend="AND" property="findYear">
             A.YEAR = #findYear#
           </isNotEmpty>
           
           <isNotEmpty prepend="AND" property="findPopStrategyNm">
             A.STRATEGY_NM LIKE '%'||#findPopStrategyNm#||'%'
           </isNotEmpty>
           
           <isNotEmpty prepend="AND" property="findPopScDeptNm">
             B.SC_DEPT_NM LIKE '%'||#findPopScDeptNm#||'%'
           </isNotEmpty>

           <isEmpty prepend="AND" property="findUseYn">
               A.DELETE_DT IS NULL
           </isEmpty>
           <isNotEmpty property="findUseYn">
             <isEqual prepend="AND" property="findUseYn" compareValue="Y">
               A.DELETE_DT IS NULL
             </isEqual>
             <isEqual prepend="AND" property="findUseYn" compareValue="N">
               A.DELETE_DT IS NOT NULL
             </isEqual>
           </isNotEmpty>
           
         AND A.YEAR = B.YEAR AND A.SC_DEPT_ID = B.SC_DEPT_ID   
         ORDER BY B.SORT_ORDER, B.SC_DEPT_ID, PERSPECTIVE_ID, A.SORT_ORDER, A.STRATEGY_ID	

	</select>
	
	<!--
    ==================================================================   
      # 설명    : 실적산식 조회
      # 기능    : SELECT
      # TABLE   : BSC_METRIC_GRP
    ==================================================================
    -->
    <select id="getCalTypeColList" parameterClass="hashMap" resultClass="hashMap">
        SELECT DISTINCT ACT_CAL_TYPE
          FROM BSC_METRIC_GRP
         WHERE 1 = 1
        
            <isNotEmpty prepend="AND" property="findYear">
                YEAR = #findYear#
            </isNotEmpty>
            
          AND ACT_CAL_TYPE IS NOT NULL
          AND DELETE_DT IS NULL
        ORDER BY LENGTH(ACT_CAL_TYPE) ASC
    </select>
    
	<!--
    ==================================================================   
      # 설명    : 실적산식 함수 조회
      # 기능    : SELECT
      # TABLE   : BSC_METRIC_GRP
    ==================================================================
    -->
    <select id="getCalTypeFuncList" parameterClass="hashMap" resultClass="hashMap">
		SELECT CODE_GRP_ID
		     , CODE_ID
		     , CODE_NM
		     , CONTENT
		     , ETC1
		     , ETC2
		FROM BSC_CODE
	   WHERE CODE_GRP_ID = '141'
	     AND DELETE_DT IS NULL
	   ORDER BY SORT_ORDER
    </select>
    
	<!--
    ==================================================================   
      # 설명    : 실적산식 검증
      # 기능    : SELECT
      # TABLE   : DUAL
    ==================================================================
    -->
    <select id="getActCalTypeConfirm" parameterClass="hashMap"  resultClass="java.lang.String">
        SELECT F_CAL_TYPE_EVAL(F_CAL_TYPE_CONFIRM(#actCalType#)) AS RESULT
          FROM DUAL
    </select>
    
   	<!--
	==================================================================   
	  # 설명	: 연계항목 조회
	  #	기능	: SELECT
	  #	TABLE	: ORG_CONN_ITEM
	==================================================================
	-->
	<select id="getOrgConnItemList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.ORG_CONN_ITEM_ID ITEM_CD
		     , A.ORG_CONN_ITEM_NM ITEM_NM
		     , A.TYPE
		     , F_CODE_NM('062', A.TYPE, '9999') AS ITEM_DIVI_NM
		FROM ORG_CONN_ITEM A
		WHERE 1=1
		<isNotEmpty prepend="AND" property="findItemNm">
			UPPER(A.ORG_CONN_ITEM_ID||A.ORG_CONN_ITEM_NM) LIKE  '%' || TRIM(UPPER(#findItemNm#)) ||'%'
		</isNotEmpty>
		  AND A.DELETE_DT IS NULL
		ORDER BY A.ORG_CONN_ITEM_ID, A.ORG_CONN_ITEM_NM
	</select>
	
	    <!--
    ==================================================================
      # 설명    : 평가군
      #    기능    : SELECT
      #    TABLE    :
    ==================================================================
    -->
    <select id="getEvalGrpList" parameterClass="hashMap" resultClass="hashMap">
        SELECT YEAR, EVAL_GRP_ID, EVAL_GRP_NM, EVAL_METHOD_ID, EVAL_TYPE, CONTENT, SORT_ORDER
        , DELETE_DT, PLAN_YN, BSC_RATE, PRS_RATE, ORG_RATE, EVAL_GRP_TYPE
        FROM PRS_EVAL_GRP
        WHERE YEAR = #findYear#
        <isEmpty prepend="AND" property="findEvaGrpUseYn">
            DELETE_DT IS NULL
        </isEmpty>
        <isNotEmpty prepend="AND" property="findEvaGrpUseYn">
            <isEqual property="findEvaGrpUseYn" compareValue="N">
                DELETE_DT IS NOT NULL
            </isEqual>
            <isEqual property="findEvaGrpUseYn" compareValue="Y">
                DELETE_DT IS NULL
            </isEqual>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="findEvalGrpType">
            EVAL_GRP_TYPE = #findEvalGrpType#
        </isNotEmpty>
        AND DELETE_DT IS NULL
        ORDER BY SORT_ORDER
    </select>
</sqlMap>