<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.base.scDeptMng">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 성과조직관리 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.SC_DEPT_ID
		     , A.SC_DEPT_NM
		     , A.LEVEL_ID
		     , A.SC_DEPT_GRP_ID
		     , B.CODE_NM AS SC_DEPT_GRP_NM
		     , C.USER_NM AS BSC_USER_NM
		     , D.USER_NM AS MANAGER_USER_NM
		     , NVL ((SELECT   COUNT (1)
		                 FROM BSC_SC_DEPT
		                WHERE YEAR = A.YEAR
		                  AND UP_SC_DEPT_ID = A.SC_DEPT_ID
		                  AND DELETE_DT IS NULL
		             GROUP BY YEAR, UP_SC_DEPT_ID), '0') AS CHILD_DEPT_CNT
		     , A.SORT_ORDER
		     , NVL(A.GOV_REF_YN, 'N') GOV_REF_YN
		  FROM BSC_SC_DEPT A LEFT OUTER JOIN BSC_CODE B ON A.YEAR = B.YEAR
		                                              AND A.SC_DEPT_GRP_ID = B.CODE_ID
		                                              AND B.CODE_GRP_ID = '003'
		       LEFT OUTER JOIN V_ROLE_USER C ON A.BSC_USER_ID = C.USER_ID
		       LEFT OUTER JOIN V_ROLE_USER D ON A.MANAGER_USER_ID = D.USER_ID
		 WHERE A.YEAR = #findYear#
		   AND A.UP_SC_DEPT_ID = #findScDeptId#
		<dynamic>
			<isEqual prepend="AND" property="findUseYn" compareValue="N">
				A.DELETE_DT IS NOT NULL
			</isEqual>
			<isNotEqual prepend="AND" property="findUseYn" compareValue="N">
	           	A.DELETE_DT IS NULL
			</isNotEqual>
			<!-- 조직트리에서 전사를 선택한 경우 전사도 리스트에 조회되게 함. -->
		    <isEqual  property="findLevelId" compareValue="0">
			    UNION ALL
				SELECT   A.SC_DEPT_ID
				       , A.SC_DEPT_NM
				       , A.LEVEL_ID
				       , A.SC_DEPT_GRP_ID
				       , B.CODE_NM AS SC_CODE_GRP_NM
				       , C.USER_NM AS BSC_USER_NM
				       , D.USER_NM AS MANAGER_USER_NM
				       , NVL ((SELECT   COUNT (1)
				                 FROM BSC_SC_DEPT
				                WHERE YEAR = A.YEAR
				                  AND UP_SC_DEPT_ID = A.SC_DEPT_ID
				                  AND DELETE_DT IS NULL
				             GROUP BY YEAR, UP_SC_DEPT_ID), '0') AS CHILD_DEPT_CNT
				       , A.SORT_ORDER
				       , NVL(A.GOV_REF_YN, 'N') GOV_REF_YN
				    FROM BSC_SC_DEPT A LEFT OUTER JOIN BSC_CODE B ON A.YEAR = B.YEAR
				                                                AND A.SC_DEPT_GRP_ID = B.CODE_ID
				                                                AND B.CODE_GRP_ID = '003'
				         LEFT OUTER JOIN V_ROLE_USER C ON A.BSC_USER_ID = C.USER_ID
				         LEFT OUTER JOIN V_ROLE_USER D ON A.MANAGER_USER_ID = D.USER_ID
				   WHERE A.YEAR = #findYear#                                                                                                                        /**P*/
				     AND A.SC_DEPT_ID = #findScDeptId#                                                                                                            /**P*/
					<isEqual prepend="AND" property="findUseYn" compareValue="N">
						A.DELETE_DT IS NOT NULL
					</isEqual>
					<isNotEqual prepend="AND" property="findUseYn" compareValue="N">
			           	A.DELETE_DT IS NULL
					</isNotEqual>
		    </isEqual>
	    </dynamic>
		 ORDER BY SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 성과조직관리 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.SC_DEPT_ID
		     , A.SC_DEPT_NM
		     , A.UP_SC_DEPT_ID
		     , D.SC_DEPT_NM AS UP_SC_DEPT_NM
		     , A.SC_DEPT_GRP_ID
		     , A.LEVEL_ID
		     , A.DEPT_KIND
		     , A.SORT_ORDER
		     , A.MANAGER_USER_ID
		     , B.USER_NM AS MANAGER_USER_NM
		     , A.BSC_USER_ID
		     , A.GOV_REF_YN
		     , C.USER_NM AS BSC_USER_NM
		     , A.DIAGRAM_GUBUN
		     , CASE
		          WHEN A.DELETE_DT IS NULL
		             THEN 'Y'
		          ELSE 'N'
		       END USE_YN
		     , A.CONTENT
		     , NVL ((SELECT   COUNT (1)
		                 FROM BSC_SC_DEPT
		                WHERE YEAR = A.YEAR
		                  AND UP_SC_DEPT_ID = A.SC_DEPT_ID
		                  AND DELETE_DT IS NULL
		             GROUP BY YEAR, UP_SC_DEPT_ID), '0') AS CHILD_DEPT_CNT
		     , A.DEPT_SLUMP_ID
		  FROM BSC_SC_DEPT A LEFT OUTER JOIN V_ROLE_USER B ON B.USER_ID = A.MANAGER_USER_ID
		       LEFT OUTER JOIN V_ROLE_USER C ON C.USER_ID = A.BSC_USER_ID
		       LEFT OUTER JOIN BSC_SC_DEPT D ON D.YEAR = A.YEAR
		       								AND D.SC_DEPT_ID = A.UP_SC_DEPT_ID
		 WHERE A.YEAR = #findYear#
		   AND A.SC_DEPT_ID = #scDeptId#
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 성과조직 코드 채번
	  #	기능	: SELECT
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->
	<select id="getScDeptId" parameterClass="hashMap" resultClass="java.lang.String">
		SELECT F_PGM_SERI('BSC_SC_DEPT','','','','','') SEQ FROM DUAL
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 성과조직관리 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO BSC_SC_DEPT
		            (YEAR
		           , SC_DEPT_ID
		           , SC_DEPT_NM
		           , SC_DEPT_S_NM
		           , UP_SC_DEPT_ID
		           , LEVEL_ID
		           , SC_DEPT_GRP_ID
		           , BSC_USER_ID
		           , MANAGER_USER_ID
		           , SORT_ORDER
		           , GOV_REF_YN
		           , DEPT_KIND
		           , CONTENT
		           , DIAGRAM_GUBUN
		           , DEPT_SLUMP_ID
		           , CREATE_DT
		           , DELETE_DT
		            )
		     VALUES (#findYear#
		           , #scDeptId#
		           , #scDeptNm#
		           , #scDeptNm#
		           , #upScDeptId#
		           , #levelId#
		           , #scDeptGrpId#
		           , #bscUserId#
		           , #managerUserId#
		           , #sortOrder#
		           , #govRefYn#
		           , #deptKind#
		           , #content#
		           , #diagramGubun#
		           , #deptSlumpId#
		           , SYSDATE
		<dynamic>
			<isEqual property="findUseYn" compareValue="N">
			 	   , SYSDATE
			</isEqual>
			<isNotEqual property="findUseYn" compareValue="N">
			 	   , ''
			</isNotEqual>
		</dynamic>
		            )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 성과조직관리 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE BSC_SC_DEPT A
		   SET A.SC_DEPT_NM = #scDeptNm#
		     , A.SC_DEPT_S_NM = (SELECT CASE
		                                 WHEN C.SC_DEPT_NM IS NULL
		                                    THEN B.SC_DEPT_NM
		                                 ELSE C.SC_DEPT_NM || ' ' || B.SC_DEPT_NM
		                              END AS SC_DEPT_S_NM
		                         FROM BSC_SC_DEPT B LEFT OUTER JOIN BSC_SC_DEPT C ON C.YEAR = B.YEAR
		                                                                        AND C.SC_DEPT_ID = B.UP_SC_DEPT_ID
		                        WHERE B.YEAR = A.YEAR
		                          AND B.SC_DEPT_ID = A.SC_DEPT_ID)
		     , A.UP_SC_DEPT_ID = #upScDeptId#
		     , A.LEVEL_ID = #levelId#
		     , A.SC_DEPT_GRP_ID = #scDeptGrpId#
		     , A.BSC_USER_ID = #bscUserId#
		     , A.MANAGER_USER_ID = #managerUserId#
		     , A.SORT_ORDER = #sortOrder#
		     , A.DEPT_KIND = #deptKind#
		     , A.CONTENT = #content#
		     , A.DIAGRAM_GUBUN = #diagramGubun#
		     , A.GOV_REF_YN = #govRefYn#
		     , A.MODIFY_DT = SYSDATE
		     , A.DEPT_SLUMP_ID = #deptSlumpId#
		<dynamic>
			<isEqual property="useYn" compareValue="N">
			 , A.DELETE_DT = SYSDATE
			</isEqual>
			<isNotEqual property="useYn" compareValue="N">
			 , A.DELETE_DT = ''
			</isNotEqual>
		</dynamic>
		 WHERE A.YEAR = #findYear#
		   AND A.SC_DEPT_ID = #scDeptId#
	</update>	

	<!--
	==================================================================   
	  # 설명	: 성과조직관리 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		UPDATE BSC_SC_DEPT
		   SET DELETE_DT = SYSDATE
		 WHERE YEAR = #findYear#
		   AND SC_DEPT_ID = #scDeptId#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 기존 권한 삭제
	  #	기능	: DELETE
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<delete id="deleteAdmin" parameterClass="hashMap">
		DELETE FROM BSC_ADMIN                     
		 WHERE ADMIN_GUBUN IN ('02','03')
	</delete>
	
	<!--
	==================================================================   
	  # 설명	: 정평지표 점수 반영가져오기
	  #	기능	: UPDATE
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->	
	<update id="UpDateGovRefData" parameterClass="hashMap">
		UPDATE BSC_SC_DEPT 
		   SET GOV_REF_YN = 'Y'
		 WHERE SC_DEPT_ID IN ( SELECT SC_DEPT_ID
								 FROM BSC_SC_DEPT
								WHERE SC_DEPT_GRP_ID NOT IN ('01', '16', '11', '12', '13', '14', '15')
							 )
		   AND YEAR = #findYear#							 
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 부서장(KPI승인자) : 02
	  #	기능	: INSERT
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<insert id="insertManagerUserAdmin" parameterClass="hashMap">
        INSERT INTO BSC_ADMIN (ADMIN_GUBUN, USER_ID, DEPT_ID) 
        SELECT DISTINCT '02'
            ,  A.MANAGER_USER_ID                    
            , (SELECT MAX(DEPT_ID) AS DEPT_ID 
                 FROM V_ROLE_USER
                WHERE USER_ID = A.MANAGER_USER_ID)                
          FROM BSC_SC_DEPT A                                        
         WHERE A.YEAR = #findYear#
           AND A.DELETE_DT IS NULL                                
           AND A.MANAGER_USER_ID IS NOT NULL
	</insert>

	<!--
	==================================================================   
	  # 설명	: 부서담당자(KPI입력자) : 03
	  #	기능	: INSERT
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<insert id="insertBscUserAdmin" parameterClass="hashMap">
        INSERT INTO BSC_ADMIN (ADMIN_GUBUN, USER_ID, DEPT_ID) 
        SELECT DISTINCT '03'
            ,  A.BSC_USER_ID                    
            , (SELECT MAX(DEPT_ID) AS DEPT_ID 
                 FROM V_ROLE_USER
                WHERE USER_ID = A.BSC_USER_ID)                
          FROM BSC_SC_DEPT A                                        
         WHERE A.YEAR = #findYear#     
           AND A.DELETE_DT IS NULL                            
           AND A.BSC_USER_ID IS NOT NULL
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 성과조직관리 엑셀다운로드
	  #	기능	: SELECT
	  #	TABLE	: BSC_SC_DEPT
	==================================================================
	-->
	<select id="getExcelList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.SC_DEPT_ID
		     , A.SC_DEPT_NM
		     , A.LEVEL_ID
		     , A.SC_DEPT_GRP_ID
		     , B.CODE_NM AS SC_DEPT_GRP_NM
		     , C.USER_NM AS BSC_USER_NM
		     , D.USER_NM AS MANAGER_USER_NM
		     , NVL ((SELECT   COUNT (1)
		                 FROM BSC_SC_DEPT
		                WHERE YEAR = A.YEAR
		                  AND UP_SC_DEPT_ID = A.SC_DEPT_ID
		                  AND DELETE_DT IS NULL
		             GROUP BY YEAR, UP_SC_DEPT_ID), '0') AS CHILD_DEPT_CNT
		     , A.SORT_ORDER
		  FROM BSC_SC_DEPT A LEFT OUTER JOIN BSC_CODE B ON A.YEAR = B.YEAR
		                                              AND A.SC_DEPT_GRP_ID = B.CODE_ID
		                                              AND B.CODE_GRP_ID = '003'
		       LEFT OUTER JOIN V_ROLE_USER C ON A.BSC_USER_ID = C.USER_ID
		       LEFT OUTER JOIN V_ROLE_USER D ON A.MANAGER_USER_ID = D.USER_ID
		 WHERE A.YEAR = #findYear#
		   AND A.UP_SC_DEPT_ID = #findScDeptId#
		<dynamic>
			<isEqual prepend="AND" property="findUseYn" compareValue="N">
				A.DELETE_DT IS NOT NULL
			</isEqual>
			<isNotEqual prepend="AND" property="findUseYn" compareValue="N">
	           	A.DELETE_DT IS NULL
			</isNotEqual>
			<!-- 조직트리에서 전사를 선택한 경우 전사도 리스트에 조회되게 함. -->
		    <isEqual  property="findLevelId" compareValue="0">
			    UNION ALL
				SELECT   A.SC_DEPT_ID
				       , A.SC_DEPT_NM
				       , A.LEVEL_ID
				       , A.SC_DEPT_GRP_ID
				       , B.CODE_NM AS SC_CODE_GRP_NM
				       , C.USER_NM AS BSC_USER_NM
				       , D.USER_NM AS MANAGER_USER_NM
				       , NVL ((SELECT   COUNT (1)
				                 FROM BSC_SC_DEPT
				                WHERE YEAR = A.YEAR
				                  AND UP_SC_DEPT_ID = A.SC_DEPT_ID
				                  AND DELETE_DT IS NULL
				             GROUP BY YEAR, UP_SC_DEPT_ID), '0') AS CHILD_DEPT_CNT
				       , A.SORT_ORDER
				    FROM BSC_SC_DEPT A LEFT OUTER JOIN BSC_CODE B ON A.YEAR = B.YEAR
				                                                AND A.SC_DEPT_GRP_ID = B.CODE_ID
				                                                AND B.CODE_GRP_ID = '003'
				         LEFT OUTER JOIN V_ROLE_USER C ON A.BSC_USER_ID = C.USER_ID
				         LEFT OUTER JOIN V_ROLE_USER D ON A.MANAGER_USER_ID = D.USER_ID
				   WHERE A.YEAR = #findYear#                                                                                                                        /**P*/
				     AND A.SC_DEPT_ID = #findScDeptId#                                                                                                            /**P*/
					<isEqual prepend="AND" property="findUseYn" compareValue="N">
						A.DELETE_DT IS NOT NULL
					</isEqual>
					<isNotEqual prepend="AND" property="findUseYn" compareValue="N">
			           	A.DELETE_DT IS NULL
					</isNotEqual>
		    </isEqual>
	    </dynamic>
		 ORDER BY SORT_ORDER
	</select>
	
</sqlMap>


