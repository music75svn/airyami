<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.eval.imponEvalStatus">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 비계량평가진행현황 요약 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	-->
	<select id="getSummary" parameterClass="hashMap" resultClass="hashMap">
		SELECT 
			(SELECT COUNT(1)  FROM BSC_IMPON_STATUS WHERE YEAR=#findYear# AND MON=#findCycle# AND DELETE_DT IS NULL) TOT_CNT,
		 	(SELECT COUNT(1)  FROM BSC_IMPON_STATUS WHERE YEAR=#findYear# AND MON=#findCycle# AND END_YN='Y' AND DELETE_DT IS NULL) EVAL_CNT,
		 	(SELECT COUNT(1)  FROM BSC_IMPON_STATUS WHERE YEAR=#findYear# AND MON=#findCycle# AND END_YN='N' AND DELETE_DT IS NULL) NON_CNT
		FROM DUAL
		 
	</select>


	<!--
	==================================================================   
	  # 설명	: 비계량평가진행현황 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT T1.YEAR, 
             T1.MON, 
             T6.DEPT_ID,
             T6.DEPT_NM,
             COUNT(1) OVER(PARTITION BY T1.YEAR, T1.MON, T6.DEPT_ID) CNT,
             T1.EVAL_EMP_ID,
             T5.NAME_HAN,
             T5.EMAIL,
             COUNT(T2.METRIC_ID)  TOT_CNT,
             CASE WHEN T4.CNT IS NULL THEN 0 ELSE T4.CNT END EVAL_CNT,             
             (SELECT END_YN  FROM BSC_IMPON_STATUS WHERE YEAR=#findYear# AND MON=#findCycle# AND EVAL_EMP_ID=T1.EVAL_EMP_ID AND DELETE_DT IS NULL) END_YN 
		FROM BSC_IMPON_APPRAISER T1
		INNER JOIN BSC_METRIC T2
		        ON T1.YEAR=T2.YEAR
		        AND T1.METRIC_GRP_ID=T2.METRIC_GRP_ID
		        AND T2.TYPE_ID='02'
		        AND T2.DELETE_DT IS NULL
		INNER JOIN V_ROLE_USER T5
		        ON T1.EVAL_EMP_ID=T5.SABUN
		INNER JOIN V_DEPTINFO T6
		        ON T5.DEPT_ID=T6.DEPT_ID
		        AND T6.BEING_YN='Y'                                               
		LEFT OUTER JOIN (SELECT YEAR,
								MON, 
								EVAL_EMP_ID, 
								COUNT(METRIC_ID) CNT FROM (SELECT DISTINCT YEAR, MON, EVAL_EMP_ID, METRIC_ID  FROM BSC_IMPON_DETAIL WHERE DELETE_DT IS NULL) 
						 WHERE YEAR=#findYear# AND MON=#findCycle# GROUP BY YEAR, MON, EVAL_EMP_ID) T4
						 	ON T1.YEAR=T4.YEAR
							AND T1.MON=T4.MON
							AND T1.EVAL_EMP_ID=T4.EVAL_EMP_ID
		INNER JOIN BSC_IMPON_STATUS T7
			ON T1.YEAR=T7.YEAR
			AND T1.MON=T7.MON
			AND T1.EVAL_EMP_ID=T7.EVAL_EMP_ID
			 
			<dynamic prepend="AND">
				<isNotEmpty property="findEndYn">
					T7.END_YN = #findEndYn#
				</isNotEmpty>
			</dynamic>
			
		WHERE T1.YEAR=#findYear#
	    	AND T1.MON=#findCycle#
	    	AND T1.DELETE_DT IS NULL
		GROUP BY T1.YEAR, T1.MON, T6.DEPT_ID,T6.DEPT_NM, T1.EVAL_EMP_ID,T5.NAME_HAN,T5.EMAIL,T4.CNT
		ORDER BY T1.YEAR, T1.MON, T6.DEPT_ID, T5.NAME_HAN
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 비계량평가진행현황 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT T1.SC_DEPT_ID, 
		            T3.SC_DEPT_NM, 
		            T1.METRIC_ID, 
		            T1.METRIC_NM,
		            T5.SCORE 
		FROM BSC_METRIC T1
		INNER JOIN BSC_IMPON_APPRAISER T2
		        ON T1.YEAR=T2.YEAR
		        AND T1.METRIC_GRP_ID=T2.METRIC_GRP_ID
		        AND T2.MON = #cycle#
		        AND T2.EVAL_EMP_ID = #evalEmpId# 
		INNER JOIN BSC_SC_DEPT T3
		        ON T1.YEAR=T3.YEAR
		        AND T1.SC_DEPT_ID=T3.SC_DEPT_ID
		        AND T3.DELETE_DT IS NULL
		LEFT OUTER JOIN (
		        SELECT T1.YEAR,
		                    T1.MON,
		                    T2.METRIC_GRP_ID,
		                    T2.METRIC_ID,
		                    SUM(T1.GRADE_SCORE * T3.ITEM_WEIGHT/100)  SCORE       
		        FROM BSC_IMPON_DETAIL T1 INNER JOIN BSC_METRIC T2
		            ON T1.YEAR=T2.YEAR
		            AND T1.METRIC_ID=T2.METRIC_ID
		            AND T2.DELETE_DT IS NULL
		        INNER JOIN BSC_IMPON_ITEM T3
		            ON T1.YEAR=T3.YEAR
		            AND T1.MON=T3.MON
		            AND T2.METRIC_GRP_ID=T3.METRIC_GRP_ID
		            AND T1.ITEM_CD=T3.ITEM_CD
		        WHERE T1.YEAR = #year#
		        AND T1.MON = #cycle#
		        AND T1.EVAL_EMP_ID = #evalEmpId#
		        AND T1.DELETE_DT IS NULL
		    GROUP BY T1.YEAR, T1.MON,T2.METRIC_GRP_ID,T2.METRIC_ID) T5
		        ON T1.YEAR=T5.YEAR
		        AND T5.MON = #cycle#
		        AND T1.METRIC_GRP_ID=T5.METRIC_GRP_ID
		        AND T1.METRIC_ID=T5.METRIC_ID        
		WHERE T1.YEAR = #year#
		AND T1.TYPE_ID='02'
		AND T1.DELETE_DT IS NULL
		ORDER BY T3.SORT_ORDER, T1.SORT_ORDER    
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 비계량평가진행현황 등록
	  #	기능	: INSERT
	  #	TABLE	: 
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">

	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 비계량평가진행현황 수정
	  #	기능	: UPDATE
	  #	TABLE	: 
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		
	</update>	
	

	<!--
	==================================================================   
	  # 설명	: 비계량평가진행현황 삭제
	  #	기능	: UPDATE
	  #	TABLE	: 
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">

	</update>
	
	
</sqlMap>


