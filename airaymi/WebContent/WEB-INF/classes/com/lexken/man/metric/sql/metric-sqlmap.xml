<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="man.metric.metric">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: STR_METRIC
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	
	<!--
	==================================================================   
	  # 설명	: 경영목표 조회조건목록
	  #	기능	: SELECT
	  #	TABLE	: STR_STRAT_SUBJECT
	==================================================================
	-->
	<select id="getManagement" parameterClass="hashMap" resultClass="hashMap">
	SELECT A.YEAR
			, A.MAN_ID    
			, A.MAN_NM 
			, A.SORT_ORDER
	FROM MAN_TARGET A
	WHERE A.YEAR = #findYear#
	   AND A.DELETE_DT IS NULL
	 ORDER BY A.SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 전략과제 조회조건목록
	  #	기능	: SELECT
	  #	TABLE	: STR_STRAT_SUBJECT
	==================================================================
	-->
	<select id="getStrStratSubjectList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR,
               STRAT_ID,
               STRAT_NM
		  FROM MAN_STRATEGY
		 WHERE YEAR = #findYear#
		 AND	DELETE_DT IS NULL
		 AND MAN_ID  = #findManagementId#
		 ORDER BY SORT_ORDER ASC
	</select>
	
	<!--
	==================================================================   
	  # 설명	: CSF 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_CSF
	==================================================================
	-->
	<select id="getCsfList" parameterClass="hashMap" resultClass="hashMap">
	SELECT A.YEAR
             ,  A.CSF_ID
             ,  A.CSF_NM
             ,  A.SORT_ORDER
    FROM MAN_CSF A
    WHERE A.YEAR= #findYear#
        AND A.DELETE_DT IS NULL
        AND A.STRAT_ID  = #findStratSubjectId#
     ORDER BY A.CSF_NM, A.SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	:  등록 CSF 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_CSF
	==================================================================
	-->
	<select id="getCsfList1" parameterClass="hashMap" resultClass="hashMap">
	SELECT A.YEAR
             ,  A.CSF_ID
             ,  A.CSF_NM
             ,  A.SORT_ORDER
    FROM MAN_CSF A
    WHERE A.YEAR= #findYear#
        AND A.DELETE_DT IS NULL
     ORDER BY A.CSF_NM, A.SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	: KPI 목록
	  #	기능	: SELECT
	  #	TABLE	: MAN_METRIC
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
			SELECT A.YEAR
	                , C.STRAT_ID
	                , C.STRAT_NM
	                , B.CSF_ID
	                , B.CSF_NM
	                , D.MAN_ID
	                , D.MAN_NM    
	                , A.MAN_KPI_ID
	                , A.MAN_KPI_NM
	                , U.DEPT_ID AS INSERT_DEPT_ID
	                , U.DEPT_NM AS INSERT_DEPT_NM
	                , A.INSERT_USER_ID
	                , A.INSERT_USER_NM AS INSERT_USER_NM
	                , A.EVAL_CYCLE
	                , F_CODE_NM('008', EVAL_CYCLE, A.YEAR) CYCLE_NM
	                , A.UNIT
	                , F_CODE_NM('013', UNIT, A.YEAR) UNIT_NM          
	                , B.SORT_ORDER
	                , C.SORT_ORDER
	                , A.IMPORTANCE
	                , COUNT (1) OVER (PARTITION BY A.YEAR, D.MAN_ID) MANAGEMENT_CNT
                    , ROW_NUMBER () OVER (PARTITION BY A.YEAR, D.MAN_ID ORDER BY D.SORT_ORDER ASC, C.SORT_ORDER ASC, B.SORT_ORDER ASC,   A.MAN_KPI_NM ASC, A.INSERT_USER_ID ASC) MANAGEMENT_INDEX
                    , COUNT (1) OVER (PARTITION BY A.YEAR, D.MAN_ID, C.STRAT_ID) STRAT_CNT
                    , ROW_NUMBER () OVER (PARTITION BY A.YEAR, D.MAN_ID, C.STRAT_ID ORDER BY D.SORT_ORDER ASC, C.SORT_ORDER ASC, B.SORT_ORDER ASC,   A.MAN_KPI_NM ASC, A.INSERT_USER_ID ASC) STRAT_INDEX
                    , COUNT (1) OVER ( PARTITION BY A.YEAR, D.MAN_ID, C.STRAT_ID, B.CSF_ID) SUB_CNT
                    , ROW_NUMBER () OVER ( PARTITION BY A.YEAR, D.MAN_ID, C.STRAT_ID, B.CSF_ID ORDER BY D.SORT_ORDER ASC, C.SORT_ORDER ASC, B.SORT_ORDER ASC,    A.MAN_KPI_NM ASC, A.INSERT_USER_ID ASC) SUB_INDEX
             FROM MAN_METRIC A
                 LEFT OUTER JOIN V_ROLE_USER U
                ON A.INSERT_USER_ID = U.USER_ID
                INNER JOIN MAN_TARGET D
                ON A.YEAR = D.YEAR              
                INNER JOIN MAN_CSF B
                ON A.YEAR = B.YEAR
                AND A.CSF_ID = B.CSF_ID  
           <isNotEmpty prepend="AND" property="findCsfId">
                B.CSF_ID = #findCsfId#
          </isNotEmpty>             
                INNER JOIN MAN_STRATEGY  C
                ON B.YEAR = C.YEAR
                AND B.STRAT_ID = C.STRAT_ID
                AND C.MAN_ID = D.MAN_ID 
          <isNotEmpty prepend="AND" property="findManagementId">
                   D.MAN_ID = #findManagementId#
          </isNotEmpty>
          <isNotEmpty prepend="AND" property="findStratSubjectId">
                  C.STRAT_ID = #findStratSubjectId#
          </isNotEmpty>                           
          WHERE A.YEAR = #findYear#
          <isEqual prepend="AND" property="findUseYn" compareValue="Y">
            A.DELETE_DT IS NULL
          </isEqual>
          <isNotEqual prepend="AND" property="findUseYn" compareValue="Y">
            A.DELETE_DT IS NOT NULL
          </isNotEqual>       
          ORDER BY  D.SORT_ORDER ASC, MANAGEMENT_INDEX, C.SORT_ORDER ASC, STRAT_INDEX, B.SORT_ORDER ASC, SUB_INDEX,  A.INSERT_USER_ID ASC
	</select>
	
	
	<!--
	==================================================================   
	  # 설명	: KPI 상세목록
	  #	기능	: SELECT
	  #	TABLE	: MAN_METRIC
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
	
		SELECT A.YEAR,
           A.MAN_KPI_ID,
           A.MAN_KPI_GRP_ID METRIC_GRP_ID,
           (SELECT MAN_KPI_GRP_NM FROM  MAN_METRIC_GRP
            WHERE MAN_KPI_GRP_ID = A.MAN_KPI_GRP_ID) METRIC_GRP_NM,
           A.MAN_KPI_NM,
           A.MAN_TARGET MAN_TARGET,
           A.TYPE_ID,
           A.ACC_VALUE,
           A.ACC_TARGET,
           A.EVAL_CYCLE,
           A.TIME_ROLLUP,
           A.UNIT,
           A.ACT_CAL_TYPE,
           A.SCORE_CAL_TYPE_ID,
           A.CONTENT,
           A.DESCRIPTION,
           A.CREATE_DT,
           A.MODIFY_DT,       
           DECODE (A.DELETE_DT, null, 'Y', 'N') DELETE_DT ,      
           A.CSF_ID,
           A.RETURN_REASON,
           A.INSERT_USER_ID,
           A.INSERT_USER_NM,
           A.APPROVE_USER_ID,
           A.APPROVE_USER_NM,
           A.TGT_STATUS_ID,
           A.FUNC_BUSINESS_GBN,
           A.IMPORTANCE,
           A.RETURN_DT,
           A.SORT_ORDER,
           A.SCORE_CAL_TYPE_GUBUN,
           A.MONITORING_YN
  FROM MAN_METRIC A
WHERE A.YEAR = #findYear#
   AND A.MAN_KPI_ID = #manKpiId#
	</select>
	
	
	
	<!--
	==================================================================   
	  # 설명	: KPI지표등록
	  #	기능	: INSERT
	  #	TABLE	: insertData
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
   INSERT INTO MAN_METRIC (
			       YEAR
			     , MAN_KPI_ID
	             , MAN_KPI_GRP_ID
	             , MAN_KPI_NM
	             , MAN_TARGET
			     , TYPE_ID						 		    
			     , CSF_ID
			     , EVAL_CYCLE
			     , TIME_ROLLUP			    
			     , ACT_CAL_TYPE
			     , SCORE_CAL_TYPE_GUBUN
			     , SCORE_CAL_TYPE_ID			    
			     , UNIT
			     , INSERT_USER_ID
			     , INSERT_USER_NM
			     , APPROVE_USER_ID
			     , APPROVE_USER_NM			    
			     , CONTENT
			     , DESCRIPTION		     
			     , CREATE_DT
			     , DELETE_DT
			     , MONITORING_YN
			   ) VALUES (
	               #year#
	             , #manKpiId#
	             , #metricGrpId#
	             , #manKpiNm#
	             , REPLACE(#manTarget#,',','') 
	             , #typeId#	           	                       
	             , #csfId#	             
	             , #evalCycle#
	             , #timeRollup#	         
	             , #actCalType#
	             , #scoreCalTypeGubun# 
	             , #scoreCalTypeId#	           
	             , #unit#
	             , #insertUserId#
	             ,( SELECT USER_NM FROM  V_ROLE_USER
                     WHERE SABUN= #insertUserId#)
	             , #approveUserId#
	             ,( SELECT USER_NM FROM  V_ROLE_USER
                     WHERE SABUN= #approveUserId#)
	             , #content#
	             , #description#	            
	             , SYSDATE
	             ,
				 <isEqual property="deleteDt" compareValue="Y">
			     NULL
			     </isEqual>
			     <isNotEqual property="deleteDt" compareValue="Y">
			     SYSDATE
			     </isNotEqual>
			     , #monitoringYn#
		   )
	</insert>
	
	
	
	<!--
	==================================================================   
	  # 설명	: KPI지표 관리 삭제
	  #	기능	: UPDATE
	  #	TABLE	: MAN_METRIC
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		UPDATE MAN_METRIC
		   SET DELETE_DT = SYSDATE 
		 WHERE YEAR = #findYear#
		   AND MAN_KPI_ID = #manKpiId#
	</update>
	
	
	<!--
	==================================================================   
	  # 설명	: kpi관리 수정
	  #	기능	: UPDATE
	  #	TABLE	: MAN_METRIC
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
	UPDATE MAN_METRIC
			   SET MAN_KPI_GRP_ID 			= #metricGrpId#,
			        MAN_KPI_NM     			= #manKpiNm#,
			        MAN_TARGET     			=  REPLACE( #manTarget#,',','') ,
			        TYPE_ID             	= #typeId#,
			        CSF_ID              	= #csfId#,
			        EVAL_CYCLE        		= #evalCycle#,
			        TIME_ROLLUP      		= #timeRollup#,
			        ACT_CAL_TYPE     		= #actCalType#,
			        SCORE_CAL_TYPE_GUBUN  	= #scoreCalTypeGubun#,
			        SCORE_CAL_TYPE_ID   	= #scoreCalTypeId#,
			        UNIT                    = #unit#,
			        INSERT_USER_ID       	= #insertUserId#,
					INSERT_USER_NM      	=( SELECT USER_NM FROM  V_ROLE_USER WHERE SABUN= #insertUserId#),
					APPROVE_USER_ID     	= #approveUserId#,
					APPROVE_USER_NM    		=( SELECT USER_NM FROM  V_ROLE_USER  WHERE SABUN= #approveUserId#),
			        CONTENT                	= #content#	,        
					DESCRIPTION            	= #description#,
					MONITORING_YN			= #monitoringYn#,
		   <isEqual property="deleteDt" compareValue="Y">
	       			 DELETE_DT = NULL
	         </isEqual>
	         <isNotEqual property="deleteDt" compareValue="Y">
	        		 DELETE_DT = SYSDATE	 
	         </isNotEqual>
		  WHERE YEAR = #findYear#
			AND MAN_KPI_ID = #manKpiId#
	</update>
	
	
	
	<!--
	==================================================================   
	  # 설명	: 기존 권한 삭제
	  #	기능	: DELETE
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<delete id="deleteAdmin" parameterClass="hashMap">
		DELETE FROM BSC_ADMIN                     
		 WHERE ADMIN_GUBUN IN ('08','09')
	</delete>
	
	<!--
	==================================================================   
	  # 설명	: 경영목표 지표입력자 입력 
	  #	기능	: INSERT
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<insert id="insertChargeUserAdmin" parameterClass="hashMap">
		INSERT INTO BSC_ADMIN (ADMIN_GUBUN, USER_ID, DEPT_ID)     
		SELECT DISTINCT '08'
		    ,  A.INSERT_USER_ID                    
		    , (SELECT MAX(DEPT_ID)  
		         FROM V_ROLE_USER
		        WHERE USER_ID = A.INSERT_USER_ID) AS DEPT_ID
		  FROM MAN_METRIC A                                        
		 WHERE A.DELETE_DT IS NULL                                
           AND A.INSERT_USER_ID IS NOT NULL
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 경영목표 지표확인자 입력
	  #	기능	: INSERT
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<insert id="insertApproveUserAdmin" parameterClass="hashMap">
		INSERT INTO BSC_ADMIN (ADMIN_GUBUN, USER_ID, DEPT_ID)     
		SELECT DISTINCT '09'
		    ,  A.APPROVE_USER_ID                    
		    , (SELECT MAX(DEPT_ID) 
		         FROM V_ROLE_USER
		        WHERE USER_ID = A.APPROVE_USER_ID) AS DEPT_ID
		  FROM MAN_METRIC A                                        
		 WHERE A.DELETE_DT IS NULL                                
           AND A.APPROVE_USER_ID IS NOT NULL
	</insert>
	
	
	<!--
	==================================================================   
	  # 설명	: KPI 관리 수정
	  #	기능	: UPDATE
	  #	TABLE	: MAN_METRIC
	==================================================================
	-->	
	<update id="updateExcelData" parameterClass="hashMap">
		 UPDATE MAN_METRIC
			SET IMPORTANCE = #importance#	
		  WHERE YEAR = #findYear#
			AND MAN_KPI_ID = #manKpiId#
	</update>
	
		<!--
	==================================================================   
	  # 설명	: 지표풀 조회
	  #	기능	: SELECT
	  #	TABLE	: MAN_METRIC_GRP
	==================================================================
	-->
	<select id="getManKpiGrpList" parameterClass="hashMap" resultClass="hashMap">
	
	  
        SELECT A.MAN_KPI_GRP_ID   as METRIC_GRP_ID
                , A.MAN_KPI_GRP_NM as METRIC_GRP_NM            
                , A.TYPE_ID
                ,(SELECT CODE_NM  FROM BSC_CODE WHERE CODE_GRP_ID='007' AND  CODE_ID=A.TYPE_ID )TYPE_NM                      
                , A.DESCRIPTION 
        FROM MAN_METRIC_GRP A                                                       
                WHERE  A.DELETE_DT IS NULL                
            <isNotEmpty prepend="AND" property="findMetricGrpNm">
              (
			       A.MAN_KPI_GRP_ID LIKE  '%'||TRIM(UPPER(#findMetricGrpNm#)) ||'%'
			       or 
			       UPPER(A.MAN_KPI_GRP_NM   )  LIKE  '%' ||TRIM(UPPER(#findMetricGrpNm#)) ||'%'
			       or
			        UPPER(A.DESCRIPTION) LIKE  '%' || TRIM(UPPER(#findMetricGrpNm#)) ||'%'
		       )
		    </isNotEmpty>
        ORDER BY A.MAN_KPI_GRP_NM   , A.MAN_KPI_GRP_ID
        
     
    
	</select>
	
	
	<!--
	==================================================================   
	  # 설명	: 지표POOL 데이터 조회후 셋팅(AJAX)
	  #	기능	: SELECT
	  #	TABLE	: MAN_METRIC_GRP
	==================================================================
	-->
	<select id="getMetricGrpDataAjax" parameterClass="hashMap" resultClass="hashMap">
		SELECT MAN_KPI_GRP_ID   AS METRIC_GRP_ID
				, MAN_KPI_GRP_NM AS METRIC_GRP_NM
				, TYPE_ID
				, EVAL_CYCLE
				, TIME_ROLLUP
				, UNIT
				, ACT_CAL_TYPE
				, SCORE_CAL_TYPE_ID
				, CONTENT
				, DESCRIPTION
				, FUNC_BUSINESS_GBN
				, SCORE_CAL_TYPE_GUBUN
		FROM MAN_METRIC_GRP A
		WHERE A.MAN_KPI_GRP_ID =  #findMetricGrpId#
	</select>

<!--
	==================================================================   
	  # 설명	: 지표POOL 산식항목 데이터 조회후 셋팅(AJAX)
	  #	기능	: SELECT
	  #	TABLE	: MAN_CAL_TYPE_COL_GRP
	==================================================================
	-->
	<select id="getMetricGrpCalTypeColAjax" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.MAN_KPI_GRP_ID  AS METRIC_GRP_ID
		     , A.CAL_TYPE_COL
		     , A.CAL_TYPE_COL_NM
		     , A.INSERT_GUBUN
		     , A.UNIT
		     , A.SOURCE_SYSTEM
		     , A.ITEM_CD
		FROM MAN_CAL_TYPE_COL_GRP A		  
		WHERE  A.MAN_KPI_GRP_ID =  #findMetricGrpId#
		  AND A.DELETE_DT IS NULL
		ORDER BY A.CAL_TYPE_COL
	</select>	
	
	<!--
	==================================================================   
	  # 설명	: 지표POOL 산식항목 데이터 조회후 셋팅(AJAX)
	  #	기능	: SELECT
	  #	TABLE	: MAN_EVAL_SECTION_GRP
	==================================================================
	-->
	<select id="getMetricGrpEvalSectionGrpAjax" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.MAN_KPI_GRP_ID  AS METRIC_GRP_ID
			     , A.EVAL_SECTION_ID
			     , A.FROM_VALUE
			     , A.TO_VALUE
			     , A.CONVERSION_SCORE
			     , CASE WHEN B.SCORE_CAL_TYPE_GUBUN = '04' THEN A.TO_VALUE 
	                    ELSE A.FROM_VALUE 
	               END VIEW_VAL
		FROM  MAN_EVAL_SECTION_GRP A
			 LEFT OUTER JOIN MAN_METRIC_GRP B ON  A.MAN_KPI_GRP_ID = B.MAN_KPI_GRP_ID 
		WHERE A.MAN_KPI_GRP_ID =  #findMetricGrpId#
		  AND A.DELETE_DT IS NULL
		ORDER BY  A.EVAL_SECTION_ID
	</select>
	
	
		<!--
	==================================================================   
	  # 설명	: 측정주기 목록 조회
	  #	기능	: SELECT
	  #	TABLE	: MAN_ACT_REG_DEF_MON
	==================================================================
	-->
	<select id="regMonList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR
		     , MAN_KPI_ID AS METRIC_ID
		     , MON
		FROM MAN_ACT_REG_DEF_MON 
		WHERE YEAR = #findYear#
		  AND MAN_KPI_ID = #manKpiId#
	</select>
	
	
		<!--
	==================================================================   
	  # 설명		:  채번
	  #	기능		: SELECT
	  #	TABLE	: MAN_METRIC
	==================================================================
	-->
	<select id="getManKpiId" parameterClass="hashMap" resultClass="java.lang.String">
		 SELECT 'K'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(MAN_KPI_ID,2,6))),0)+1,6,'0') AS MAN_KPI_ID
           FROM MAN_METRIC
	</select>
	
	
	<!--
	==================================================================   
	  # 설명	: 지표 산식항목 삭제
	  #	기능	: DELETE
	  #	TABLE	: MAN_CAL_TYPE_COL
	==================================================================
	-->	
	<delete id="deleteCalTypeCol" parameterClass="hashMap">
		DELETE FROM MAN_CAL_TYPE_COL
		WHERE YEAR = #year#
		  AND MAN_KPI_ID = #manKpiId#
	</delete>
	
	<!--
	==================================================================   
	  # 설명	: 지표산식 등록
	  #	기능	: INSERT
	  #	TABLE	: MAN_CAL_TYPE_COL
	==================================================================
	-->	
	<insert id="insertCalTypeCol" parameterClass="hashMap">
		INSERT INTO MAN_CAL_TYPE_COL (
               YEAR
             , MAN_KPI_ID
             , CAL_TYPE_COL
             , CAL_TYPE_COL_NM
             , INSERT_GUBUN
             , UNIT
             , SOURCE_SYSTEM
             , ITEM_CD
             , CREATE_DT
           ) VALUES (
               #year#
             , #manKpiId#
             , #calTypeCol#
             , #calTypeColNm#
             , #insertGubun#
             , #unit#
             , #sourceSystem#
             , #itemCd#
             , SYSDATE
             )
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 지표 구간대항목 삭제
	  #	기능	: DELETE
	  #	TABLE	: MAN_EVAL_SECTION
	==================================================================
	-->	
	<delete id="deleteEvalSection" parameterClass="hashMap">
		DELETE FROM MAN_EVAL_SECTION
		WHERE YEAR = #year#
		  AND MAN_KPI_ID = #manKpiId#
	</delete>
	
	<!--
	==================================================================   
	  # 설명	: 지표 구간대항목 등록
	  #	기능	: INSERT
	  #	TABLE	: MAN_EVAL_SECTION
	==================================================================
	-->	
	<insert id="insertEvalSection" parameterClass="hashMap">
		INSERT INTO MAN_EVAL_SECTION (
               YEAR     
             , MAN_KPI_ID
             , EVAL_SECTION_ID
             , FROM_VALUE
             , TO_VALUE
             , CONVERSION_SCORE
             , CREATE_DT
           ) VALUES (
               #year#
             , #manKpiId#
             , #evalSectionId#
             , #fromValue#
             , #toValue#
             , #conversionScore#  
             , SYSDATE       
               )
	</insert>	
	
	
	<!--
	==================================================================   
	  # 설명	: 측정주기 삭제
	  #	기능	: DELETE
	  #	TABLE	: MAN_ACT_REG_DEF_MON
	==================================================================
	-->	
	<delete id="deleteRegMon" parameterClass="hashMap">
		DELETE FROM MAN_ACT_REG_DEF_MON
		WHERE YEAR = #year#
		  AND MAN_KPI_ID = #manKpiId#
	</delete>
	
	<!--
	==================================================================   
	  # 설명	: 측정주기 등록
	  #	기능	: INSERT
	  #	TABLE	: MAN_ACT_REG_DEF_MON
	==================================================================
	-->	
	<insert id="insertRegMon" parameterClass="hashMap">
		INSERT INTO MAN_ACT_REG_DEF_MON (
               YEAR
             , MAN_KPI_ID
             , MON
             , CREATE_DT
           ) VALUES (
               #year#
             , #manKpiId#
             , #mon#
             , SYSDATE
             )
	</insert>
	
	        <!--
    ==================================================================   
      # 설명    : 구간대 조회
      #    기능    : SELECT
      #    TABLE    : MAN_EVAL_SECTION
    ==================================================================
    -->
    <select id="evalSectionList" parameterClass="hashMap" resultClass="hashMap">
    
        SELECT A.CODE_ID AS EVAL_SECTION_ID
             , A.CODE_NM AS EVAL_SECTION_NM
             , B.MAN_KPI_ID 
             , B.FROM_VALUE
             , B.TO_VALUE
             , B.CONVERSION_SCORE
             , CASE WHEN C.SCORE_CAL_TYPE_GUBUN = '04' THEN  B.TO_VALUE 
                    ELSE B.FROM_VALUE 
                    END VIEW_VAL
        FROM BSC_CODE A                 
                 LEFT OUTER JOIN MAN_EVAL_SECTION B 
                         ON B.YEAR =  #year#
                         AND B.MAN_KPI_ID = #manKpiId#
                         AND A.CODE_ID = B.EVAL_SECTION_ID 
                         AND B.DELETE_DT IS NULL
                 LEFT OUTER JOIN MAN_METRIC C
                         ON B.YEAR = C.YEAR
                         AND B.MAN_KPI_ID = C.MAN_KPI_ID
        WHERE A.CODE_GRP_ID = '020'
          AND A.YEAR = (SELECT CASE YEAR_YN WHEN 'Y' THEN #year# ELSE '9999' END FROM BSC_CODE_GRP WHERE CODE_GRP_ID = '020')
          AND A.DELETE_DT IS NULL
        ORDER BY A.SORT_ORDER
        
    </select>
    
    <!--
	==================================================================   
	  # 설명	: 지표산식 목록 조회
	  #	기능	: SELECT
	  #	TABLE	: MAN_CAL_TYPE_COL
	==================================================================
	-->
	<select id="calTypeColList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
             , A.MAN_KPI_ID
             , A.CAL_TYPE_COL
             , A.CAL_TYPE_COL_NM
             , A.INSERT_GUBUN
             , A.UNIT
             , A.SOURCE_SYSTEM
             , A.ITEM_CD
             , B.ITEM_NM
        FROM MAN_CAL_TYPE_COL A
             LEFT OUTER JOIN BSC_SYSTEM_ITEM B ON A.YEAR = B.YEAR AND A.ITEM_CD = B.ITEM_CD AND B.DELETE_DT IS NULL
        WHERE A.YEAR = #year#
          AND A.MAN_KPI_ID = #manKpiId#
          AND A.DELETE_DT IS NULL
        ORDER BY A.CAL_TYPE_COL ASC
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 득점산식 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_CODE
	==================================================================
	-->
	<select id="gradeList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.CODE_ID
		     , A.CODE_NM
		  FROM BSC_CODE A
		 WHERE A.YEAR = #year#
		   AND A.CODE_GRP_ID = '118'
		 ORDER BY A.SORT_ORDER
	</select>
</sqlMap>	
	