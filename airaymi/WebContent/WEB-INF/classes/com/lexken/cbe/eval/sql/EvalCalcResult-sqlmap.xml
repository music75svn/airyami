<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="cbe.eval.evalCalcResult">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 종합평가집계 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT EM.YEAR
		     , EVAL_DEGREE_ID
		     , EM.EVAL_MEMB_USER_ID
		     , EM.SC_DEPT_ID
		     , EM.ITEM_FRS_DEPT_ID
		     , EM.ITEM_SEC_DEPT_ID
		     , EM.ITEM_TEAM_ID
		     , EM.WEIGHT_GRP_ID
		     , CWG.WEIGHT_GRP_NM
		     , EM.RIVAL_GRP_ID
		     , CRG.RIVAL_GRP_NM
		     , EM.NAME
		     , SD.SC_DEPT_NM
		     , EM.POS_NM
		     , IFD.SC_DEPT_NM AS ITEM_FRS_DEPT_NM
		     , ISD.SC_DEPT_NM AS ITEM_SEC_DEPT_NM
		     , ITD.SC_DEPT_NM AS ITEM_TEAM_NM
		     , EM.JIKGUB_NM
		     , ER.FRS_DEPT_CONVERT_SCORE, ER.SEC_DEPT_CONVERT_SCORE, ER.TEAM_CONVERT_SCORE
		     , ER.PRS_CONVERT_SCORE
		     , ER.CONBI_EVAL_SCORE, ER.CONBI_EVAL_RANK, ER.CONBI_EVAL_GRADE, ER.CONBI_EVAL_FIX_GRADE
		     , EM.EVAL_METHOD_GBN
		     , F_CODE_NM( '155', EM.EVAL_METHOD_GBN, EM.YEAR) AS EVAL_METHOD_GBN_NM
		  FROM CBE_EVAL_MASTER EM
		       LEFT OUTER JOIN CBE_WEIGHT_GRP CWG ON EM.YEAR = CWG.YEAR AND EM.WEIGHT_GRP_ID = CWG.WEIGHT_GRP_ID
		       LEFT OUTER JOIN CBE_RIVAL_GRP CRG ON EM.YEAR = CRG.YEAR AND EM.RIVAL_GRP_ID = CRG.RIVAL_GRP_ID
		       LEFT OUTER JOIN BSC_SC_DEPT SD ON EM.YEAR = SD.YEAR AND EM.SC_DEPT_ID = SD.SC_DEPT_ID
		       LEFT OUTER JOIN BSC_SC_DEPT IFD ON EM.YEAR = IFD.YEAR AND EM.ITEM_FRS_DEPT_ID = IFD.SC_DEPT_ID
		       LEFT OUTER JOIN BSC_SC_DEPT ISD ON EM.YEAR = ISD.YEAR AND EM.ITEM_SEC_DEPT_ID = ISD.SC_DEPT_ID
		       LEFT OUTER JOIN BSC_SC_DEPT ITD ON EM.YEAR = ITD.YEAR AND EM.ITEM_TEAM_ID = ITD.SC_DEPT_ID
		       LEFT OUTER JOIN CBE_EVAL_RESULT ER ON EM.YEAR = ER.YEAR AND EM.EVAL_DEGREE_ID = ER.EVAL_DEGREE_ID AND EM.EVAL_MEMB_USER_ID = ER.EVAL_MEMB_USER_ID
		 WHERE 1=1
		   AND EM.YEAR = #findYear#
		   AND EM.EVAL_DEGREE_ID = #findEvalDegreeId#
		   AND EM.EVAL_METHOD_GBN IN ( '10', '30')
		   <dynamic prepend="AND">
		   		<isNotEmpty property="findRivalGrpId">
					<isEqual property="findRivalGrpId" compareValue="NONE">
					EM.RIVAL_GRP_ID IS NULL
					</isEqual>
					<isNotEqual property="findRivalGrpId" compareValue="NONE">
			   		EM.RIVAL_GRP_ID = #findRivalGrpId#
			   		</isNotEqual>
		   		</isNotEmpty>
		   </dynamic>
		   <dynamic prepend="AND">
				<isNotEmpty property="findUserNm">
		   		EM.NAME LIKE '%' || #findUserNm# || '%'
		   		</isNotEmpty>
		   </dynamic>
		   <dynamic prepend="AND">
				<isNotEmpty property="findScDeptNm">
		   		SD.SC_DEPT_NM LIKE '%' || #findScDeptNm# || '%'
		   		</isNotEmpty>
		   </dynamic>
		 ORDER BY CRG.SORT_ORDER NULLS LAST, NAME NULLS LAST, ER.EVAL_MEMB_USER_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 종합평가집계 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT 		  FROM  
		 WHERE 1 = 1 	      
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 종합평가집계 등록
	  #	기능	: INSERT
	  #	TABLE	: 
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		<selectKey resultClass="java.lang.String" keyProperty="SEQ" >
			SELECT F_PGM_SERI('','','','','','') SEQ FROM DUAL
		</selectKey>
		INSERT INTO  ( 
			 ) VALUES ( 
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 종합평가집계 수정
	  #	기능	: UPDATE
	  #	TABLE	: 
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE  
		   SET 		 WHERE 1 = 1 
		
	</update>	
	
	
	<!--
	==================================================================   
	  # 설명	: 종합평가집계 수정
	  #	기능	: UPDATE
	  #	TABLE	: 
	==================================================================
	-->	
	<update id="updateFixGradeData" parameterClass="hashMap">
		UPDATE CBE_EVAL_RESULT
		   SET CONBI_EVAL_FIX_GRADE = #conbiEvalFixGrade#
		 WHERE 1 = 1
		   AND YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
		   AND EVAL_MEMB_USER_ID = #evalMembUserId#
	</update>

	<!--
	==================================================================   
	  # 설명	: 종합평가집계 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getCalcUploadFormExcel" parameterClass="hashMap" resultClass="hashMap">
		SELECT EM.YEAR
		     , EVAL_DEGREE_ID
		     , EM.EVAL_MEMB_USER_ID
		     , EM.SC_DEPT_ID
		     , EM.ITEM_FRS_DEPT_ID
		     , EM.ITEM_SEC_DEPT_ID
		     , EM.ITEM_TEAM_ID
		     , EM.WEIGHT_GRP_ID
		     , CWG.WEIGHT_GRP_NM
		     , EM.RIVAL_GRP_ID
		     , CRG.RIVAL_GRP_NM
		     , EM.NAME
		     , SD.SC_DEPT_NM
		     , EM.POS_NM
		     , IFD.SC_DEPT_NM AS ITEM_FRS_DEPT_NM
		     , ISD.SC_DEPT_NM AS ITEM_SEC_DEPT_NM
		     , ITD.SC_DEPT_NM AS ITEM_TEAM_NM
		     , EM.JIKGUB_NM
		     , ER.FRS_DEPT_SCORE, ER.SEC_DEPT_SCORE, ER.TEAM_SCORE, ER.PRS_GRADE
		 	 , ER.FRS_DEPT_CONVERT_SCORE, ER.SEC_DEPT_CONVERT_SCORE, ER.TEAM_CONVERT_SCORE, ER.PRS_CONVERT_SCORE
		 	 , CWG.FRS_DEPT_WEIGHT, CWG.SEC_DEPT_WEIGHT, CWG.TEAM_WEIGHT, CWG.PRS_WEIGHT
		 	 , ER.FRS_DEPT_WT_REFL_CONVERT_SCORE, ER.SEC_DEPT_WT_REFL_CONVERT_SCORE, ER.TEAM_WT_REFL_CONVERT_SCORE, ER.PRS_WT_REFL_CONVERT_SCORE
			 , ER.CONBI_EVAL_SCORE, ER.CONBI_EVAL_RANK, ER.CONBI_EVAL_GRADE, ER.CONBI_EVAL_FIX_GRADE
		     , EM.EVAL_METHOD_GBN
		     , F_CODE_NM( '155', EM.EVAL_METHOD_GBN, EM.YEAR) AS EVAL_METHOD_GBN_NM
		  FROM CBE_EVAL_MASTER EM
		       LEFT OUTER JOIN CBE_WEIGHT_GRP CWG ON EM.YEAR = CWG.YEAR AND EM.WEIGHT_GRP_ID = CWG.WEIGHT_GRP_ID
		       LEFT OUTER JOIN CBE_RIVAL_GRP CRG ON EM.YEAR = CRG.YEAR AND EM.RIVAL_GRP_ID = CRG.RIVAL_GRP_ID
		       LEFT OUTER JOIN BSC_SC_DEPT SD ON EM.YEAR = SD.YEAR AND EM.SC_DEPT_ID = SD.SC_DEPT_ID
		       LEFT OUTER JOIN BSC_SC_DEPT IFD ON EM.YEAR = IFD.YEAR AND EM.ITEM_FRS_DEPT_ID = IFD.SC_DEPT_ID
		       LEFT OUTER JOIN BSC_SC_DEPT ISD ON EM.YEAR = ISD.YEAR AND EM.ITEM_SEC_DEPT_ID = ISD.SC_DEPT_ID
		       LEFT OUTER JOIN BSC_SC_DEPT ITD ON EM.YEAR = ITD.YEAR AND EM.ITEM_TEAM_ID = ITD.SC_DEPT_ID
		       LEFT OUTER JOIN CBE_EVAL_RESULT ER ON EM.YEAR = ER.YEAR AND EM.EVAL_DEGREE_ID = ER.EVAL_DEGREE_ID AND EM.EVAL_MEMB_USER_ID = ER.EVAL_MEMB_USER_ID
		 WHERE 1=1
		   AND EM.YEAR = #findYear#
		   AND EM.EVAL_DEGREE_ID = #findEvalDegreeId#
		   AND EM.EVAL_METHOD_GBN IN ( '10', '30')
		 ORDER BY CRG.SORT_ORDER NULLS LAST, NAME NULLS LAST, ER.EVAL_MEMB_USER_ID
	</select>
	
	
	
	
	<!--
	==================================================================   
	  # 설명	: 파라미터 맵
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<parameterMap id="paramMap" class="java.util.HashMap">
		<parameter property="year" 			jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>
		<parameter property="evalDegreeId" 			jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>	
	</parameterMap>	
	
	<!--
	==================================================================   
	  # 설명	: 종합평가점수집계 프로시저 호출
	  #	기능	: CALL PROCEDURE
	  #	TABLE	: 
	==================================================================
	-->	
	<procedure id="callSpCBEConvertScore"  parameterMap="paramMap">
		{CALL  SP_CBE_CONBI_SCORE(?, ?)} 
    </procedure>
    

	<!--
	==================================================================   
	  # 설명	: 종합평가등급집계 프로시저 호출
	  #	기능	: CALL PROCEDURE
	  #	TABLE	: 
	==================================================================
	-->	
	<procedure id="callSpCBEConvertGrade"  parameterMap="paramMap">
		{CALL  SP_CBE_CONBI_GRADE(?, ?)} 
    </procedure>
	
	
</sqlMap>


