<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="Secure">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->	
	<typeAlias alias="hashMap" 	type="java.util.HashMap" />
	<typeAlias alias="loginVO"  type="com.lexken.framework.login.LoginVO" />
	<typeAlias alias="menuVO"   type="com.lexken.framework.login.MenuVO" />

	<!--
	==================================================================   
	  # 설명	: 로그인 정보 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_USERINFO
	==================================================================
	-->	
	<select id="getUserInfoCount" parameterClass="hashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1)        
		  FROM V_ROLE_USER
		 WHERE 1=1
	    <dynamic>
 		   AND SABUN = #userId#
 		   <isEqual prepend="AND" property="loginFlag" compareValue="none">
				PASSWD = #cryptPasswd#
           </isEqual>
	    </dynamic>
    
    </select>
	
	<!--
	==================================================================   
	  # 설명	: 로그인 정보 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_USERINFO
	==================================================================
	-->	
	<select id="getUserInfo" parameterClass="hashMap" resultClass="loginVO">
		SELECT T1.SABUN              
             , T1.USER_ID            
             , T1.USER_REG_ID        
             , T1.NAME_HAN           
             , T1.USER_NM            
             , T1.PASSWD             
             , T1.DEPT_CD            
             , T1.DEPT_ID            
             , T1.DEPT_NM            
             , T1.JIKGUB_CD          
             , T1.JIKGUB_NM          
             , T1.POS_CD             
             , T1.POS_NM             
             , T1.EMAIL              
             , T1.BEING_YN           
             , T1.SORT_ORDER         
             , T1.CREATE_DT
             , T3.SC_DEPT_ID
             , T3.SC_DEPT_NM
             , T3.SC_DEPT_GRP_ID
             , T3.DEPT_SLUMP_ID
             , T4.SC_DEPT_ID AS UP_SC_DEPT_ID
             , T4.SC_DEPT_NM AS UP_SC_DEPT_NM
             , F_MONITORING_URL(T1.SABUN) DASHBOARD_URL
          FROM V_ROLE_USER T1
          	   LEFT OUTER JOIN V_DEPT_MAPPING_LOGIN T2 ON T1.DEPT_ID = T2.DEPT_ID AND T2.YEAR = #year#
               LEFT OUTER JOIN BSC_SC_DEPT T3 ON T2.YEAR = T3.YEAR AND T2.SC_DEPT_ID = T3.SC_DEPT_ID AND T3.DELETE_DT IS NULL
               LEFT OUTER JOIN BSC_SC_DEPT T4 ON T3.YEAR = T4.YEAR AND T3.UP_SC_DEPT_ID = T4.SC_DEPT_ID AND T4.DELETE_DT IS NULL
         WHERE T1.SABUN  = #userId#
	</select>	
	
	
	<!--
	==================================================================   
	  # 설명	: 메뉴권한 여부
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->	
	<select id="menuGradeFlag" parameterClass="hashMap" resultClass="java.lang.String">
		SELECT PGM_ID 
		  FROM BSC_MENU_RIGHT
		 WHERE ADMIN_GUBUN IN (SELECT ADMIN_GUBUN
		                         FROM BSC_ADMIN
		                        WHERE USER_ID = #userId# 
		                        UNION 
		                       SELECT '99' FROM DUAL)
		  AND PGM_ID = #menuId#
	</select> 	
		
	
	<!--
	==================================================================   
	  # 설명	: 1단계 메뉴 조회
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->	
	<select id="getHighMenuList" parameterClass="java.lang.String" resultClass="menuVO">
		SELECT F_PGM_ID AS pgmId
		     , F_PGM_NM AS pgmNm
		     , URL AS url
		     , PARAM AS param
		     , '01' levelId
		     , UP_PGM_ID as upPgmId
		     , L2_PGM_ID as subPgmId
		     , L4_PGM_ID as lastPgmId
		FROM (
		        SELECT A.*
                     , ROW_NUMBER () OVER (PARTITION BY A.F_PGM_ID ORDER BY A.SORT_ORDER NULLS LAST) NUM 
		        FROM V_LEVEL_PGMLIST A
		        WHERE  A.PGM_ID IN (SELECT PGM_ID
		                              FROM BSC_MENU_RIGHT
		                             WHERE ADMIN_GUBUN IN (SELECT ADMIN_GUBUN
		                                                     FROM BSC_ADMIN
		                                                    WHERE USER_ID = #user_id# 
		                                                    UNION 
		                                                    SELECT '99' FROM DUAL))
		)
		WHERE NUM = 1
		ORDER BY F_SORT_ORDER 
	</select>
	
	
	<!--
	==================================================================   
	  # 설명	: 2단계 메뉴 조회
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->	
	<select id="getSubMenuList" parameterClass="java.lang.String" resultClass="menuVO">
		SELECT L2_PGM_ID AS pgmId
             , L2_PGM_NM AS pgmNm
             , URL AS url
             , PARAM AS param
             , '02' levelId
             , F_PGM_ID as upPgmId
             , PGM_ID as lastPgmId
		  FROM (
		        SELECT A.*
		             , ROW_NUMBER () OVER (PARTITION BY A.L2_PGM_ID ORDER BY A.SORT_ORDER NULLS LAST) NUM 
		          FROM V_LEVEL_PGMLIST A
		         WHERE A.PGM_ID IN (SELECT PGM_ID
		                              FROM BSC_MENU_RIGHT
		                             WHERE ADMIN_GUBUN IN (SELECT ADMIN_GUBUN
		                                                     FROM BSC_ADMIN
		                                                    WHERE USER_ID =  #user_id#
		                                                    UNION 
		                                                    SELECT '99' FROM DUAL))                 
		)
		WHERE NUM = 1
		ORDER BY L2_SORT_ORDER
	</select>
	
	
	<!--
	==================================================================   
	  # 설명	: 3단계 메뉴 조회
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->	
	<select id="getMenuList" parameterClass="java.lang.String" resultClass="menuVO">
		SELECT A.PGM_ID         AS pgmId      
             , A.PGM_NM         AS pgmNm      
             , A.UP_PGM_ID      AS upPgmId   
             , A.LEVEL_ID       AS levelId    
             , A.URL            AS url         
             , A.PARAM          AS param       
             , A.SORT_ORDER     AS sortOrder  
             , B.PGM_ID         AS subPgmId
             , B.PGM_NM         AS subPgmNm
             , B.SORT_ORDER     AS subSortOrder
             , C.PGM_ID         AS highPgmId
             , C.PGM_NM         AS highPgmNm
             , C.SORT_ORDER     AS highSortOrder
		FROM BSC_PGMLIST A
		          LEFT OUTER JOIN BSC_PGMLIST B ON A.UP_PGM_ID = B.PGM_ID
		          LEFT OUTER JOIN BSC_PGMLIST C ON B.UP_PGM_ID = C.PGM_ID
		WHERE 1=1
		  AND A.LEVEL_ID = '03' 
		  AND A.PGM_ID IN (SELECT PGM_ID
		                     FROM BSC_MENU_RIGHT
		                    WHERE ADMIN_GUBUN IN (SELECT ADMIN_GUBUN
		                                            FROM BSC_ADMIN
		                                           WHERE USER_ID = #user_id#
		                                           UNION 
		                                          SELECT '99' FROM DUAL))
		ORDER BY highSortOrder, subSortOrder, sortOrder, pgmId
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 권한 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<select id="authGrpList" parameterClass="hashMap"  resultClass="java.lang.String">
		SELECT ADMIN_GUBUN
		  FROM BSC_ADMIN
		 WHERE USER_ID = #userId#
		 ORDER BY ADMIN_GUBUN
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 로그인 로그 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_LOG_LIST
	==================================================================
	-->
	<insert id="insertLoginLog" parameterClass="hashMap">
		INSERT INTO BSC_LOG_LIST (
		       YEAR
		     , MON
		     , DAY
		     , TIME
		     , USER_ID
		     , USER_NMM
		     , CLIENT_IP
		     , PGM_ID
		     , PGM_NM
		     , JIKGUB_CD
		     , JIKGUB_NM
		     , GBN
		     , URL
		     ) VALUES (
		       TO_CHAR(SYSDATE,'YYYY')
		     , TO_CHAR(SYSDATE,'MM')
		     , TO_CHAR(SYSDATE,'DD')
		     , TO_CHAR(SYSDATE,'HH24:MI:SS')
		     , #user_id#
		     , #user_nmm#
		     , #client_ip#
		     , #pgm_id#
		     , #pgm_nm#
		     , #jikgub_cd#
		     , #jikgub_nm#
		     , 'L'
		     , #url#
		     )	
    </insert>
	
	<!--
	==================================================================   
	  # 설명	: 사용자로그 입력
	  #	기능	: INSERT
	  #	TABLE	: BSC_LOG_LIST
	==================================================================
	-->
	<insert id="insertUserLog" parameterClass="hashMap">
		INSERT INTO BSC_LOG_LIST (
		       YEAR
		     , MON
		     , DAY
		     , TIME
		     , USER_ID
		     , USER_NMM
		     , CLIENT_IP
		     , PGM_ID
		     , PGM_NM
		     , JIKGUB_CD
		     , JIKGUB_NM
		     , GBN
		     , URL
		     ) VALUES (
		       TO_CHAR(SYSDATE,'YYYY')
		     , TO_CHAR(SYSDATE,'MM')
		     , TO_CHAR(SYSDATE,'DD')
		     , TO_CHAR(SYSDATE,'HH24:MI:SS')
		     , #user_id#
		     , #user_nmm#
		     , #client_ip#
		     , #pgm_id#
		     , #pgm_nm#
		     , #jikgub_cd#
		     , #jikgub_nm#
		     , 'M'
		     , #url#
		     )	
	</insert>
</sqlMap>


