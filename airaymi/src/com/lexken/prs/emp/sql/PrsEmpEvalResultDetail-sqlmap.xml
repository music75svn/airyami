<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.emp.prsEmpEvalResultDetail">

    <!--
    ==================================================================
      # 설명    : typeAlias 선언
      #    기능    : SETTING
      #    TABLE    :
    ==================================================================
    -->
    <typeAlias alias="hashMap"             type="java.util.HashMap" />


    <!--
    ==================================================================
      # 설명    : 평가결과확인 목록 보기
      #    기능    : SELECT
      #    TABLE    :
    ==================================================================
    -->
    <select id="getList" parameterClass="hashMap" resultClass="hashMap">
		  SELECT
		      F.EVAL_GRP_ID
		    , F.EVAL_GRP_NM
		    , A.EMPN
		    , A.KOR_NM
		    , T4.DEPT_CD
		    , T4.DEPT_KOR_NM
		    , T4.UP_DEPT_CD
		    , T4.UP_DEPT_KOR_NM
		    , A.CAST_TC
		    , D.CODE_NM AS CAST_TC_NM
		    , A.POS_TC
		    , E.CODE_NM AS POS_TC_NM
		    , T3.SCORE
		    , ROUND(T4.DEPT_SCORE,3) DEPT_SCORE
            , ROUND((T3.SCORE * 0.5)+(T4.DEPT_SCORE *0.5),3) TOTAL_SCORE
		    , RANK () OVER (ORDER BY NVL (ROUND ( (T3.SCORE * 0.5) + (T4.DEPT_SCORE * 0.5), 3), 0) DESC) RANKING
		    , T3.GRADE
		    , NVL(A.EVAL_SUBMIT_YN, 'N') EVAL_SUBMIT_YN
		FROM PRS_EMP_MEMBER A
		    LEFT OUTER JOIN PRS_EMP_EVAL_MEMBER T3
		        ON A.YEAR = T3.YEAR
		        AND A.EMPN = T3.EMPN
		    INNER JOIN BSC_CODE D
		        ON A.YEAR = D.YEAR
		        AND A.CAST_TC = D.CODE_ID
		        AND D.CODE_GRP_ID = '170'
		    INNER JOIN BSC_CODE E
		        ON A.YEAR = E.YEAR
		        AND A.POS_TC = E.CODE_ID
		        AND E.CODE_GRP_ID = '171'
		    INNER JOIN
		        (SELECT
		              A.YEAR
		            , A.DEPT_SCORE
		            , A.DEPT_CD
		            , A.DEPT_KOR_NM
		            , B.DEPT_CD AS UP_DEPT_CD
		            , B.DEPT_KOR_NM AS UP_DEPT_KOR_NM
		        FROM BSC_INSA_DEPT A
		            INNER JOIN BSC_INSA_DEPT B
		                ON A.YEAR = B.YEAR
		                AND A.UP_DEPT_CD = B.DEPT_CD) T4
		        ON A.YEAR = T4.YEAR
		        AND A.DEPT_CD = T4.DEPT_CD
			INNER JOIN (SELECT
		                      T5.YEAR
		                    , T5.EVAL_GRP_ID
		                    , T5.EVAL_GRP_NM
		                    , T6.DEPT_CD
		                FROM PRS_EVAL_GRP T5
		                    INNER JOIN PRS_EMP_DEPT_EVAL_GRP T6
		                        ON T5.YEAR = T6.YEAR
		                        AND T5.EVAL_GRP_ID = T6.EVAL_GRP_ID
		                WHERE T5.YEAR = #findYear#
		                  AND T5.EVAL_TYPE IN ('06', '07', '08')) F
		        ON A.YEAR = F.YEAR
		        AND A.DEPT_CD = F.DEPT_CD
		        AND F.EVAL_GRP_ID = #findEvalGrpId#
		    LEFT OUTER JOIN PRS_EMP_EXC G
        		ON A.YEAR = G.YEAR
        		AND A.EMPN = G.EMPN
		WHERE A.YEAR = #findYear#
		<isNotEmpty prepend="AND" property="findDeptId">
			T4.DEPT_CD = #findDeptId#    
		</isNotEmpty>
		<dynamic prepend="AND">
			<isEmpty property="findSabun">
				(G.EXCEPT_CD IN (01, 02) OR T3.EVAL_SUBMIT_YN = 'Y')
			</isEmpty>
		</dynamic>
		<dynamic prepend="AND">
			<isNotEmpty property="findSabun">
			    (G.EXCEPT_CD IN (01, 02)
				AND G.EMPN = #findSabun#
				OR A.EMPN = #findSabun# )
			</isNotEmpty>
		</dynamic>
		ORDER BY RANKING
    </select>

     <!--
    ==================================================================
      # 설명    : 평가군
      #    기능    : SELECT
      #    TABLE    :
    ==================================================================
    -->
    <select id="getEvalGrpList" parameterClass="hashMap" resultClass="hashMap">
        SELECT
              A.EVAL_GRP_ID
            , A.EVAL_GRP_NM
        FROM PRS_EVAL_GRP A
        INNER JOIN PRS_EMP_DEPT_EVAL_GRP B
        	ON A.YEAR = B.YEAR
        	AND A.EVAL_GRP_ID = B.EVAL_GRP_ID
        WHERE A.YEAR = #findYear#
          AND A.EVAL_TYPE IN ('06', '07', '08')
		GROUP BY A.EVAL_GRP_ID, A.EVAL_GRP_NM
    </select>

     <!--
    ==================================================================
      # 설명    : 평가군별 부서조회
      #    기능    : SELECT
      #    TABLE    :
    ==================================================================
    -->
    <select id="getDeptList" parameterClass="hashMap" resultClass="hashMap">
        SELECT A.YEAR
	         , A.DEPT_CD
	         , F_DEPT_FULL_NM (#findYear#, A.DEPT_CD, 'BSC_INSA_DEPT') DEPT_KOR_NM
		  FROM BSC_INSA_DEPT A
	 	  LEFT OUTER JOIN PRS_EMP_DEPT_EVAL_GRP B
	    	ON A.YEAR = B.YEAR
	       AND A.DEPT_CD = B.DEPT_CD
	 	  LEFT OUTER JOIN PRS_EVAL_GRP C
	    	ON B.YEAR = C.YEAR
	       AND B.EVAL_GRP_ID = C.EVAL_GRP_ID
	       AND C.DELETE_DT IS NULL
		 WHERE A.YEAR = #findYear#
	       AND A.USE_YN = 'T'
	       AND B.EVAL_GRP_ID = #findEvalGrpId#
		 ORDER BY B.EVAL_GRP_ID, DEPT_CD
    </select>

     <!--
    ==================================================================
      # 설명    : 평가군 가져오기
      #    기능    : SELECT
      #    TABLE    :
    ==================================================================
    -->
    <select id="getEvalGrpId" parameterClass="hashMap" resultClass="hashMap">
        SELECT
              A.EVAL_GRP_ID
            , A.EVAL_GRP_NM
        FROM PRS_EVAL_GRP A
        INNER JOIN PRS_EMP_DEPT_EVAL_GRP B
        	ON A.YEAR = B.YEAR
        	AND A.EVAL_GRP_ID = B.EVAL_GRP_ID
        WHERE A.YEAR = #findYear#
          AND A.EVAL_TYPE IN ('06', '07', '08')
          AND B.DEPT_CD = (SELECT DEPT_CD FROM BSC_INSA WHERE YEAR = A.YEAR AND EMPN = #findSabun#)
		GROUP BY A.EVAL_GRP_ID, A.EVAL_GRP_NM
    </select>

    <!--
    ==================================================================
      # 설명    : 평가결과확인 상세 보기
      #    기능    : SELECT
      #    TABLE    :
    ==================================================================
    -->
    <select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
        SELECT           FROM
        WHERE 1 = 1
    </select>

    <!--
    ==================================================================
      # 설명    : 평가결과확인 등록
      #    기능    : INSERT
      #    TABLE    :
    ==================================================================
    -->
    <insert id="insertData" parameterClass="hashMap">
        <selectKey resultClass="java.lang.String" keyProperty="SEQ" >
            SELECT F_PGM_SERI('','','','','','') SEQ FROM DUAL
        </selectKey>
        INSERT INTO  (
             ) VALUES (
             )
    </insert>

    <!--
    ==================================================================
      # 설명    : 평가결과확인 수정
      #    기능    : UPDATE
      #    TABLE    :
    ==================================================================
    -->
    <update id="updateData" parameterClass="hashMap">
        UPDATE
           SET          WHERE 1 = 1

    </update>


    <!--
    ==================================================================
      # 설명    : 평가결과확인 삭제
      #    기능    : UPDATE
      #    TABLE    :
    ==================================================================
    -->
    <update id="deleteData" parameterClass="hashMap">
        DELETE FROM
         WHERE 1 = 1

    </update>


</sqlMap>


