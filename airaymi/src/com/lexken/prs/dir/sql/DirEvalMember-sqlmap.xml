<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.dir.dirEvalMember">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: PRS_EVAL_GRP
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 
	<!--
	==================================================================   
	  # 설명	: 최상위 평가조직 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getTopDeptInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR
			 , DEPT_CD
			 , DEPT_KOR_NM
		  FROM ( SELECT YEAR, DEPT_CD, DEPT_KOR_NM FROM BSC_INSA_DEPT WHERE YEAR = #findYear# ORDER BY DISP_ORDER, DEPT_CD )
		 WHERE DEPT_CD = '0000'
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가대상자 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: PRS_MNG_MEMBER
	==================================================================
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		
		SELECT A.YEAR
		     , A.EMPN
		     , KOR_NM
		     , A.DEPT_CD
		     , C.DEPT_KOR_NM
		     , F_DEPT_FULL_NM(A.YEAR, A.DEPT_CD, 'BSC_INSA_DEPT') DEPT_FULL_NM
		     , CAST_TC
		     , POS_TC
		     , D.CODE_NM AS POS_TC_NM
		     , EVAL_YN
		     , START_PCMT_DATE 
     		 , END_PCMT_DATE 
		     , SYSDATE CREATE_DT
		  FROM BSC_INSA A
	      LEFT OUTER JOIN
	           BSC_INSA_DEPT C                  
	        ON A.YEAR = C.YEAR                 
	       AND A.DEPT_CD = C.DEPT_CD
	      LEFT OUTER JOIN
	           BSC_CODE D                        
	        ON A.YEAR = D.YEAR                       
	       AND D.CODE_GRP_ID = '171'                       
	       AND D.CODE_ID = A.POS_TC
	     	 , (SELECT YEAR
	               	 , EMPN
	               	 , SUM (WORK_MON) WORK_MON
	               	 , MIN (START_PCMT_DATE) START_PCMT_DATE
	               	 , MAX (END_PCMT_DATE) END_PCMT_DATE
	               	 , CASE WHEN SUM (WORK_MON) > 2 THEN 'Y' ELSE 'N' END EVAL_YN
	              FROM (SELECT *
	                      FROM V_PRS_RE_MON A
	                   	 WHERE 1 = 1
	                       AND A.YEAR = #findYear#
	                       AND A.CAST_TC = '00'
	                       AND A.POS_TC IN ('02', '03', '0B', '0C'))
	           	 WHERE WORK_MON<![CDATA[ <> ]]> 0
	               AND WORK_MON IS NOT NULL
	        	 GROUP BY YEAR, EMPN) B
	 	 WHERE 1 = 1
	 	<isNotEmpty prepend="AND" property="findYear">
	    	A.YEAR = #findYear#
	   	</isNotEmpty>
	   	<isNotEmpty prepend="AND" property="findKorNm">
	   		UPPER(KOR_NM) LIKE  '%' || TRIM(UPPER(#findKorNm#)) ||'%'   
	   	</isNotEmpty>
	   	   AND A.CAST_TC = '00'
	       AND A.POS_TC IN ('02', '03', '0B', '0C')
	   	   AND A.YEAR = B.YEAR
	   	   AND A.EMPN = B.EMPN
	 	 ORDER BY A.DEPT_CD,   A.EMPN   
	 	  
	</select>
	-->
	
	
	<!--
	==================================================================   
	  # 설명	: 평가대상자 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: PRS_MNG_MEMBER
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
			 , A.EMPN
			 , A.KOR_NM
			 , A.DEPT_CD
			 , D.DEPT_KOR_NM
             , F_DEPT_FULL_NM(A.YEAR, A.DEPT_CD, 'BSC_INSA_DEPT') DEPT_FULL_NM
			 , A.POS_TC
			 , C.CODE_NM AS POS_TC_NM
			 , (SELECT SUM (WORK_MON)      
	              FROM BSC_INSA_PCMT        
	             WHERE F.YEAR = YEAR       
	               AND F.EMPN = EMPN     
	          GROUP BY YEAR,
	                   EMPN
	        	) AS MON
			 , TO_CHAR(TO_DATE(DUTY_START_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS DUTY_START_DT
			 , TO_CHAR(TO_DATE(DUTY_END_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS DUTY_END_DT
			 , A.EVAL_YN
          FROM PRS_DIR_EVAL_MEMBER A
          LEFT OUTER JOIN BSC_CODE B
                       ON A.YEAR = B.YEAR
                      AND B.CODE_GRP_ID = '170'
                      AND B.CODE_ID = A.CAST_TC
          LEFT OUTER JOIN BSC_INSA F
            		   ON A.YEAR = F.YEAR
            		  AND A.EMPN = F.EMPN            
          LEFT OUTER JOIN BSC_CODE C
                       ON A.YEAR = C.YEAR
                      AND C.CODE_GRP_ID = '171'
                      AND C.CODE_ID = A.POS_TC
		  LEFT OUTER JOIN BSC_INSA_DEPT D
            		   ON A.YEAR = D.YEAR
           			  AND A.DEPT_CD = D.DEPT_CD
          LEFT OUTER JOIN (SELECT YEAR, EMPN
                             FROM V_PRS_RE_MON
                            WHERE WORK_MON > 0
                            GROUP BY YEAR, EMPN) E
            		   ON A.YEAR = E.YEAR
            		  AND A.EMPN = E.EMPN      
         WHERE 1=1
			<isNotEmpty prepend="AND" property="findYear">
	            A.YEAR = #findYear#
		   	</isNotEmpty>
		   	<isNotEmpty prepend="AND" property="findKorNm">
		   		UPPER(A.KOR_NM) LIKE  '%' || TRIM(UPPER(#findKorNm#)) ||'%'   
		   	</isNotEmpty>
           AND A.POS_TC IN('02', '03', '0B', '0C') 
         ORDER BY A.DEPT_CD, A.EMPN  
	</select>
	
	<!--
    ==================================================================
      # 설명    : 평가대상자 삭제
      # 기능    : DELETE
      # TABLE   : PRS_DIR_EVAL_MEMBER
    ==================================================================
    -->
    <delete id="deleteEmpMemberInfo" parameterClass="hashMap">
        DELETE FROM PRS_DIR_EVAL_MEMBER WHERE YEAR =#findYear# 
    </delete>
    
    <!--
	==================================================================   
	  # 설명	: 임원평가 대상자 입력(불러오기용)
	  #	기능	: INSERT
	  #	TABLE	: PRS_DIR_EVAL_MEMBER
	==================================================================
	-->	
	<insert id="insertEmpMemberInfo" parameterClass="hashMap">
<![CDATA[	
		INSERT INTO PRS_DIR_EVAL_MEMBER (YEAR,
                                 EMPN,
                                 KOR_NM,
                                 DEPT_CD,
                                 CAST_TC,
                                 POS_TC,
                                 EVAL_YN,
                                 DUTY_START_DT,
                                 DUTY_END_DT,
                                 BSC_SCORE,
                                 CREATE_DT)
			   SELECT A.YEAR,
			          A.EMPN,
			          A.KOR_NM,
			          A.DEPT_CD,
			          A.CAST_TC,
			          A.POS_TC,
			          B.EVAL_YN,
			          B.START_PCMT_DATE,
			          B.END_PCMT_DATE,
			          B.BSC_SCORE,
			          SYSDATE CREATE_DT
			     FROM BSC_INSA A,
			     ( SELECT YEAR,
			       EMPN,
			       EVAL_YN,
			       SUM (BSC_SCORE) BSC_SCORE,
			       SUM (WORK_MON) WORK_MON,
			       MIN (START_PCMT_DATE) START_PCMT_DATE,
			       MAX (END_PCMT_DATE) END_PCMT_DATE
			       FROM ( SELECT        
			               YEAR,
			               EMPN,
			               DEPT_CD,
			               DEPT_SCORE,
			               WORK_MON,
			               START_PCMT_DATE,
			               END_PCMT_DATE,
			               EVAL_YN,
			               CASE
			                  WHEN COUNTS > 1
			                  THEN
			                     ROUND (DEPT_SCORE * (WORK_MON / 12), 3)
			                  ELSE
			                     ROUND (DEPT_SCORE * NVL((WORK_MON / DECODE(WORK_MON, 0, NULL, WORK_MON)), 0), 3)
			               END
			                  BSC_SCORE
			          FROM (  SELECT BB.YEAR,
			                         BB.EMPN,
			                         BB.DEPT_CD,
			                         CC.DEPT_SCORE,
			                         SUM (BB.WORK_MON) WORK_MON,
			                         MIN (BB.START_PCMT_DATE) START_PCMT_DATE,
			                         MAX (BB.END_PCMT_DATE) END_PCMT_DATE,
			                         COUNT (BB.EMPN) OVER (PARTITION BY BB.YEAR, BB.EMPN)
			                            AS COUNTS,
			                         CASE WHEN SUM (BB.WORK_MON) > 2 THEN 'Y' ELSE 'N' END
			                            EVAL_YN
			                    FROM    (SELECT *
			                               FROM V_PRS_RE_MON A
			                              WHERE     1 = 1
			                                    AND A.YEAR = #findYear#
			                                    AND A.CAST_TC = '00'
			                                    AND A.POS_TC IN ('02', '03', '0B', '0C')) BB
			                         LEFT OUTER JOIN
			                            BSC_INSA_DEPT CC
			                         ON BB.YEAR = CC.YEAR AND BB.DEPT_CD = CC.DEPT_CD
			                   WHERE BB.WORK_MON IS NOT NULL
			                GROUP BY BB.YEAR,
			                         BB.EMPN,
			                         BB.DEPT_CD,
			                         CC.DEPT_SCORE ) ) AA
			                         GROUP BY YEAR, EMPN, EVAL_YN ) B
			    WHERE     1 = 1
			          AND A.YEAR = #findYear#
			          AND A.CAST_TC = '00'
			          AND A.POS_TC IN ('02', '03', '0B', '0C')
			          AND A.YEAR = B.YEAR
			          AND A.EMPN = B.EMPN
]]>			          
	</insert>
   
    <!--
	==================================================================   
	  # 설명	: 임원평가 대상자 입력(불러오기용)
	  #	기능	: INSERT
	  #	TABLE	: PRS_DIR_EVAL_MEMBER
	==================================================================
	<insert id="insertEmpMemberInfo" parameterClass="hashMap">
<![CDATA[
		INSERT INTO PRS_DIR_EVAL_MEMBER
		(YEAR, EMPN, KOR_NM, DEPT_CD, CAST_TC, POS_TC, EVAL_YN, CREATE_DT)
					SELECT #findYear# YEAR, EMPN, KOR_NM, DEPT_CD, CAST_TC, POS_TC, EVAL_YN, CREATE_DT
  					  FROM ( SELECT B.EMPN
                                  , B.KOR_NM
                                  , B.DEPT_CD
                                  , B.CAST_TC
                                  , B.POS_TC
                                  , 'Y' EVAL_YN
                                  , CREATE_DT
                               FROM BSC_CODE A, BSC_INSA B
                    LEFT OUTER JOIN (
                                        SELECT DISTINCT EMPN
                                          FROM V_PRS_RE_MON
                                         WHERE EMPN IN (SELECT DISTINCT EMPN FROM BSC_INSA_PCMT WHERE YEAR = #findYear# AND PCMT_TC = '41' AND CAST_TC = '00')
                                         GROUP BY EMPN, CAST_TC
                                        HAVING SUM(WORK_MON) > 0 AND SUM(WORK_MON) < 12
                                    ) E
                                 ON B.EMPN = E.EMPN
                    LEFT OUTER JOIN (SELECT YEAR, EMPN
		                               FROM V_PRS_RE_MON
		                              WHERE WORK_MON > 0
		                              GROUP BY YEAR, EMPN) C
		              ON B.YEAR = C.YEAR
		             AND B.EMPN = C.EMPN  
                              WHERE A.YEAR = #findYear#
                                AND A.CODE_GRP_ID = '170'
                                AND A.CODE_ID = '00'
                                AND A.CODE_ID = B.CAST_TC
                                AND A.YEAR = B.YEAR
                                AND B.POS_TC IN('02', '03', '0B', '0C') 
                           ORDER BY B.DEPT_CD,
        							B.EMPN)
]]> 					 
	</insert>
	-->	
	
	<!--
	==================================================================   
	  # 설명	: 평가대상자 선정 수정
	  #	기능	: UPDATE
	  #	TABLE	: PRS_MNG_MEMBER
	==================================================================
	-->	
	<update id="updateEmpMemberData" parameterClass="hashMap">
		UPDATE PRS_DIR_EVAL_MEMBER
	   	   SET EVAL_YN = #evalYn#
		 WHERE EMPN = #empn#
		   AND YEAR = #findYear#		
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 확정여부 수정
	  #	기능	: UPDATE
	  #	TABLE	: PRS_CLOSING
	==================================================================
	-->	
	<update id="updateEvalyn" parameterClass="hashMap">
		UPDATE PRS_CLOSING
	   	   SET DIR_EVAL_YN = 'N',
	   	       DIR_LEADERSHIP_YN = 'N',
	   	       DIR_RPT_YN ='N' 
		 WHERE YEAR = #findYear#		
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 평가대상자 권한 삭제
	  #	기능	: DELETE
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<delete id="deleteAdminData" parameterClass="hashMap">
		DELETE FROM BSC_ADMIN
         WHERE ADMIN_GUBUN='83'
	</delete>
	
	<!--
	==================================================================   
	  # 설명	: 권한 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<insert id="insertAdminData" parameterClass="hashMap">
		INSERT INTO BSC_ADMIN (ADMIN_GUBUN, USER_ID)
        SELECT '83', EMPN  FROM
         (SELECT EMPN FROM PRS_DIR_EVAL_MEMBER WHERE EVAL_YN = 'Y' AND YEAR = #findYear# ) 
          
	</insert>	
		
</sqlMap>


