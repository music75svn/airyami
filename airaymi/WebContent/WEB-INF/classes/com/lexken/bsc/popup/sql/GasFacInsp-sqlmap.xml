<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.popup.gasFacInsp">

	<!--
	==================================================================
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	:
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />

	<!--
	==================================================================
	  # 설명	: 시스템항목관리 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_SYSTEM_ITEM
	==================================================================
	-->

	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR
	         , MON
	         , ROLE_TC
	         , ROLE_TC_NM
	         , INSP_KIND_TC
	         , INSP_KIND_TC_NM
	         , LAW_TC
	         , LAW_TC_NM
	         , STIC_LAG_TC
	         , STIC_LAG_TC_NM
	         , STIC_MID_TC
	         , STIC_MID_TC_NM
	         , STIC_SML_TC
	         , STIC_SML_TC_NM
	         , DEPT_ID
	         , DEPT_NM
	         , INSP_QTY
	         , RE_INSP_QTY
	         , LENG
	         , TOTAL
	         , RLTV_VAL
	         , TOTAL_RLTV_VAL
	      FROM V_GHF0221D_004
	 	 WHERE YEAR = #findYear#
	       AND MON = #findMon#
	       AND ROLE_TC = '01'
	       AND INSP_KIND_TC IN ('03', '04', '07')
	</select>

	<!--
	==================================================================
	  # 설명	: 시스템항목관리 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_SYSTEM_ITEM
	==================================================================

	<select id="getList" parameterClass="hashMap" resultClass="hashMap">

		SELECT YEAR
	      ,MON
	      ,DEPT_CD
	      ,INSP_KIND_TC
	      ,INSP_KIND_TC_NM
	      ,LAW_TC
	      ,STIC_LAG_TC
	      ,STIC_LAG_TC_NM
	      ,STIC_MID_TC
	      ,STIC_MID_TC_NM
	      ,STIC_SML_TC
	      ,STIC_SML_TC_NM
	      ,REQ_QTY
	      ,REQ_AMT
	      ,INSP_QTY
	      ,PASS_QTY
	      ,UNPASS_QTY
	      ,UNINSP_QTY
	      ,RE_REQ_QTY
	      ,RE_REQ_AMT
	      ,RE_INSP_QTY
	      ,RE_PASS_QTY
	      ,RE_UNPASS_QTY
	      ,RE_UNINSP_QTY
	      ,INSP_QTY + RE_INSP_QTY AS SUM_QTY
	      , CASE WHEN INSP_KIND_TC = '04' THEN
	                                            CASE WHEN (STIC_LAG_TC = '13' AND STIC_MID_TC = '59' AND STIC_SML_TC = '00') OR
	                                                      (STIC_LAG_TC = '13' AND STIC_MID_TC = '64' AND STIC_SML_TC = '00') OR
	                                                      (STIC_LAG_TC = '13' AND STIC_MID_TC = '68' AND STIC_SML_TC = '00') THEN
	                                                      0
	                                                 WHEN STIC_LAG_TC = '01' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 41.04
	                                                 WHEN STIC_LAG_TC = '02' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 4.188
	                                                 WHEN STIC_LAG_TC = '03' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 2.729
	                                                 WHEN (STIC_LAG_TC = '04' AND LAW_TC = '1') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 3.42
	                                                 WHEN (STIC_LAG_TC = '04' AND LAW_TC = '2') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 5.13
	                                                 WHEN (STIC_LAG_TC = '04' AND LAW_TC = '3') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 3.42
	                                                 WHEN (STIC_LAG_TC = '06' AND LAW_TC = '1') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 2.565
	                                                 WHEN (STIC_LAG_TC = '06' AND LAW_TC = '2') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 3.42
	                                                 WHEN STIC_LAG_TC = '07' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 4.104
	                                                 WHEN (STIC_LAG_TC = '08' AND LAW_TC = '1') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 2.052
	                                                 WHEN (STIC_LAG_TC = '08' AND LAW_TC = '2') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 4.104
	                                                 WHEN STIC_LAG_TC = '09' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 4.104
	                                                 WHEN (STIC_LAG_TC = '10' AND LAW_TC = '1') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 1.71
	                                                 WHEN (STIC_LAG_TC = '10' AND LAW_TC = '2') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 1.14
	                                                 WHEN (STIC_LAG_TC = '10' AND LAW_TC = '3') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 1.71
	                                                 WHEN STIC_LAG_TC = '12' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 10.26
	                                                 ELSE
	                                                      (INSP_QTY + RE_INSP_QTY) * 1.71
	                                                  END
	                                    WHEN INSP_KIND_TC = '03' THEN
	                                            CASE WHEN (STIC_LAG_TC = '01' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 68.4
	                                                 WHEN (STIC_LAG_TC = '02' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 20.52
	                                                 WHEN STIC_LAG_TC = '03' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 2.348
	                                                 WHEN (STIC_LAG_TC = '04' AND STIC_MID_TC = '00') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 6.84
	                                                 WHEN STIC_LAG_TC = '04' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 10.26
	                                                 WHEN (STIC_LAG_TC = '06' AND LAW_TC = '1') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 5.13
	                                                 WHEN (STIC_LAG_TC = '06' AND LAW_TC = '3') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 6.84
	                                                 WHEN STIC_LAG_TC = '07' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 6.84
	                                                 WHEN (STIC_LAG_TC = '08' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00' AND LAW_TC = '1') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 3.42
	                                                 WHEN (STIC_LAG_TC = '08' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00' AND LAW_TC = '2') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 3.42
	                                                 WHEN (STIC_LAG_TC = '09' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 5.13
	                                                 WHEN (STIC_LAG_TC = '10' AND LAW_TC = '1') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 2.565
	                                                 WHEN (STIC_LAG_TC = '10' AND LAW_TC = '2') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 1.578
	                                                 WHEN (STIC_LAG_TC = '10' AND LAW_TC = '3') THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 2.28
	                                                 WHEN STIC_LAG_TC = '11' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 0.684
	                                                 WHEN STIC_LAG_TC = '12' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 0.684
	                                                 WHEN STIC_LAG_TC = '21' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 10.26
	                                                 WHEN STIC_LAG_TC = '22' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 10.26
	                                                 WHEN STIC_LAG_TC = '23' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 10.26
	                                                 WHEN STIC_LAG_TC = '24' THEN
	                                                      (INSP_QTY + RE_INSP_QTY) * 10.26
	                                                 ELSE
	                                                      0
	                                                  END
	                                     END ACTUAL
	     , CASE WHEN INSP_KIND_TC = '04' THEN
	            CASE WHEN (STIC_LAG_TC = '13' AND STIC_MID_TC = '59' AND STIC_SML_TC = '00') OR
	                      (STIC_LAG_TC = '13' AND STIC_MID_TC = '64' AND STIC_SML_TC = '00') OR
	                      (STIC_LAG_TC = '13' AND STIC_MID_TC = '68' AND STIC_SML_TC = '00') THEN
	                      0
	                 WHEN STIC_LAG_TC = '01' THEN
	                      41.04
	                 WHEN STIC_LAG_TC = '02' THEN
	                      4.188
	                 WHEN STIC_LAG_TC = '03' THEN
	                      2.729
	                 WHEN (STIC_LAG_TC = '04' AND LAW_TC = '1') THEN
	                      3.42
	                 WHEN (STIC_LAG_TC = '04' AND LAW_TC = '2') THEN
	                      5.13
	                 WHEN (STIC_LAG_TC = '04' AND LAW_TC = '3') THEN
	                      3.42
	                 WHEN (STIC_LAG_TC = '06' AND LAW_TC = '1') THEN
	                      2.565
	                 WHEN (STIC_LAG_TC = '06' AND LAW_TC = '2') THEN
	                      3.42
	                 WHEN STIC_LAG_TC = '07' THEN
	                      4.104
	                 WHEN (STIC_LAG_TC = '08' AND LAW_TC = '1') THEN
	                      2.052
	                 WHEN (STIC_LAG_TC = '08' AND LAW_TC = '2') THEN
	                      4.104
	                 WHEN STIC_LAG_TC = '09' THEN
	                      4.104
	                 WHEN (STIC_LAG_TC = '10' AND LAW_TC = '1') THEN
	                      1.71
	                 WHEN (STIC_LAG_TC = '10' AND LAW_TC = '2') THEN
	                      1.14
	                 WHEN (STIC_LAG_TC = '10' AND LAW_TC = '3') THEN
	                      1.71
	                 WHEN STIC_LAG_TC = '12' THEN
	                      10.26
	                 ELSE
	                      1.71
	                  END
	    WHEN INSP_KIND_TC = '03' THEN
	            CASE WHEN (STIC_LAG_TC = '01' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00') THEN
	                      68.4
	                 WHEN (STIC_LAG_TC = '02' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00') THEN
	                      20.52
	                 WHEN STIC_LAG_TC = '03' THEN
	                      2.348
	                 WHEN (STIC_LAG_TC = '04' AND STIC_MID_TC = '00') THEN
	                      6.84
	                 WHEN STIC_LAG_TC = '04' THEN
	                      10.26
	                 WHEN (STIC_LAG_TC = '06' AND LAW_TC = '1') THEN
	                      5.13
	                 WHEN (STIC_LAG_TC = '06' AND LAW_TC = '3') THEN
	                      6.84
	                 WHEN STIC_LAG_TC = '07' THEN
	                      6.84
	                 WHEN (STIC_LAG_TC = '08' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00' AND LAW_TC = '1') THEN
	                      3.42
	                 WHEN (STIC_LAG_TC = '08' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00' AND LAW_TC = '2') THEN
	                      3.42
	                 WHEN (STIC_LAG_TC = '09' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00') THEN
	                      5.13
	                 WHEN (STIC_LAG_TC = '10' AND LAW_TC = '1') THEN
	                      2.565
	                 WHEN (STIC_LAG_TC = '10' AND LAW_TC = '2') THEN
	                      1.578
	                 WHEN (STIC_LAG_TC = '10' AND LAW_TC = '3') THEN
	                      2.28
	                 WHEN STIC_LAG_TC = '11' THEN
	                      0.684
	                 WHEN STIC_LAG_TC = '12' THEN
	                      0.684
	                 WHEN STIC_LAG_TC = '21' THEN
	                      10.26
	                 WHEN STIC_LAG_TC = '22' THEN
	                      10.26
	                 WHEN STIC_LAG_TC = '23' THEN
	                      10.26
	                 WHEN STIC_LAG_TC = '24' THEN
	                      10.26
	                 ELSE
	                      0
	                  END
	     END WEIGHT
	FROM
	    (
		SELECT A.YEAR, A.MON, A.DEPT_CD, A.INSP_KIND_TC, (SELECT COMM_C_NM FROM MAORA01.MDA0000M WHERE SYS_TC = 'GIA' AND KIND_TC = '0138' AND COMM_C = A.INSP_KIND_TC) INSP_KIND_TC_NM
		     , A.LAW_TC, A.STIC_LAG_TC, A.STIC_LAG_TC_NM, A.STIC_MID_TC, A.STIC_MID_TC_NM, A.STIC_SML_TC, A.STIC_SML_TC_NM
		     , SUM(A.REQ_QTY) REQ_QTY, SUM(A.REQ_AMT) REQ_AMT, SUM(A.INSP_QTY) INSP_QTY, SUM(A.PASS_QTY) PASS_QTY, SUM(A.UNPASS_QTY) UNPASS_QTY, SUM(A.UNINSP_QTY) UNINSP_QTY
		     , SUM(A.RE_REQ_QTY) RE_REQ_QTY, SUM(A.RE_REQ_AMT) RE_REQ_AMT, SUM(A.RE_INSP_QTY) RE_INSP_QTY, SUM(A.RE_PASS_QTY) RE_PASS_QTY, SUM(A.RE_UNPASS_QTY) RE_UNPASS_QTY, SUM(A.RE_UNINSP_QTY) RE_UNINSP_QTY
		  FROM TABLE( BSC_SYSTEM_KGS.F_V_GHF0221D_LIST(#findYear#, #findMon#)) A
		 WHERE A.ROLE_TC = '01'
		   AND A.INSP_KIND_TC IN ('03', '04')
		   AND A.DEPT_CD = #findDeptId#
		    AND 1 = (CASE WHEN INSP_KIND_TC = '04' THEN
		                        CASE WHEN (STIC_LAG_TC = '13' AND STIC_MID_TC = '59' AND STIC_SML_TC = '00') OR
		                                  (STIC_LAG_TC = '13' AND STIC_MID_TC = '64' AND STIC_SML_TC = '00') OR
		                                  (STIC_LAG_TC = '13' AND STIC_MID_TC = '68' AND STIC_SML_TC = '00') THEN
		                                  0
		                             WHEN STIC_LAG_TC = '01' THEN
		                                  1
		                             WHEN STIC_LAG_TC = '02' THEN
		                                  1
		                             WHEN STIC_LAG_TC = '03' THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '04' AND LAW_TC = '1') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '04' AND LAW_TC = '2') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '04' AND LAW_TC = '3') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '06' AND LAW_TC = '1') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '06' AND LAW_TC = '2') THEN
		                                  1
		                             WHEN STIC_LAG_TC = '07' THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '08' AND LAW_TC = '1') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '08' AND LAW_TC = '2') THEN
		                                  1
		                             WHEN STIC_LAG_TC = '09' THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '10' AND LAW_TC = '1') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '10' AND LAW_TC = '2') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '10' AND LAW_TC = '3') THEN
		                                  1
		                             WHEN STIC_LAG_TC = '12' THEN
		                                  1
		                             ELSE
		                                  1
		                              END
		                  WHEN INSP_KIND_TC = '03' THEN
		                        CASE WHEN (STIC_LAG_TC = '01' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '02' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00') THEN
		                                  1
		                             WHEN STIC_LAG_TC = '03' THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '04' AND STIC_MID_TC = '00') THEN
		                                  1
		                             WHEN STIC_LAG_TC = '04' THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '06' AND LAW_TC = '1') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '06' AND LAW_TC = '3') THEN
		                                  1
		                             WHEN STIC_LAG_TC = '07' THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '08' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00' AND LAW_TC = '1') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '08' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00' AND LAW_TC = '2') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '09' AND STIC_MID_TC = '00' AND STIC_SML_TC = '00') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '10' AND LAW_TC = '1') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '10' AND LAW_TC = '2') THEN
		                                  1
		                             WHEN (STIC_LAG_TC = '10' AND LAW_TC = '3') THEN
		                                  1
		                             WHEN STIC_LAG_TC = '11' THEN
		                                  1
		                             WHEN STIC_LAG_TC = '12' THEN
		                                  1
		                             WHEN STIC_LAG_TC = '21' THEN
		                                  1
		                             WHEN STIC_LAG_TC = '22' THEN
		                                  1
		                             WHEN STIC_LAG_TC = '23' THEN
		                                  1
		                             WHEN STIC_LAG_TC = '24' THEN
		                                  1
		                             ELSE
		                                  0
		                              END
		                  ELSE 0 END )
		 GROUP BY A.YEAR, A.MON, A.DEPT_CD, A.INSP_KIND_TC, A.LAW_TC, A.STIC_LAG_TC, A.STIC_LAG_TC_NM, A.STIC_MID_TC, A.STIC_MID_TC_NM, A.STIC_SML_TC, A.STIC_SML_TC_NM
		 UNION ALL
		SELECT YY, SUBSTR(REAL_INSP_DATE, 5, 2), BR_CD, '04', 'REGULAR', '3', '13', '', '', EQUI_KIND_NM, '', EQUI_KIND_NM, 0, 0, CAPT, 0, 0, 0
		     , 0, 0, 0, 0, 0, 0
		  FROM V_GHF0311M_001
		 WHERE EQUI_TC = '3'
		   AND YY = #findYear#
		   AND BR_CD = #findDeptId#
		   AND REAL_INSP_DATE LIKE #findYear# || #findMon# || '%'
		   AND EQUI_KIND_NM IS NOT NULL
		   AND REAL_INSP_DATE IS NOT NULL
		   )
	</select>
	-->

	<!--
	==================================================================
	  # 설명	: 시스템항목관리 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_SYSTEM_ITEM
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
	         , A.ITEM_CD
	         , A.ITEM_NM
	         , A.ITEM_ACTUAL_DIVI
	         , A.ITEM_DIVI
	         , A.SYSTEM_GBN
	         , A.CONTENT
	         , A.EXCEL_USER_ID
	         , A.DEPT_APPLY_SCOPE
	         , B.USER_NM AS EXCEL_USER_NM
	         , CASE WHEN A.DELETE_DT IS NULL THEN 'Y' ELSE 'N' END USE_YN
	     FROM BSC_SYSTEM_ITEM A
	          LEFT OUTER JOIN V_ROLE_USER B ON A.EXCEL_USER_ID = B.USER_ID
		WHERE A.YEAR = #year#
		  AND A.ITEM_CD = #itemCd#
	</select>


	<!--
	==================================================================
	  # 설명	: 부서조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_DEPTINFO
	==================================================================
	-->
	<select id="getDeptList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.DEPT_ID, B.DEPT_NM
		  FROM BSC_SC_DEPT_MAPPING A
	LEFT OUTER JOIN BSC_DEPTINFO B
			ON A.DEPT_ID = B.DEPT_ID
		 WHERE (YEAR, SC_DEPT_ID) IN
		          (SELECT YEAR, SC_DEPT_ID
		             FROM BSC_METRIC
		            WHERE (METRIC_GRP_ID, YEAR) IN
		                     (SELECT METRIC_GRP_ID, YEAR
		                        FROM BSC_METRIC
		                       WHERE YEAR = #findYear# AND METRIC_ID = #findMetricId#)
				AND DELETE_DT IS NULL)
<![CDATA[		   AND OULEVEL < 2 ]]>
	</select>

	<!--
	==================================================================
	  # 설명	: 시스템항목관리 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_SYSTEM_ITEM
	==================================================================
	-->
	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO BSC_SYSTEM_ITEM (
		             YEAR
		           , ITEM_CD
		           , ITEM_NM
		           , ITEM_ACTUAL_DIVI
		           , ITEM_DIVI
		           , SYSTEM_GBN
		           , CONTENT
		           , EXCEL_USER_ID
		           , DEPT_APPLY_SCOPE
		           , CREATE_DT
		           , MODIFY_DT
		           , DELETE_DT
		     ) VALUES (
		             #year#
		           , #itemCd#
		           , #itemNm#
		           , #itemActualDivi#
		           , #itemDivi#
		           , #systemGbn#
		           , #content#
		           , #excelUserId#
		           , #deptApplyScope#
		           , SYSDATE
		           , SYSDATE
		<isEqual property="useYn" compareValue="N">
		           , SYSDATE
		</isEqual>
		<isNotEqual property="useYn" compareValue="N">
		           , NULL
		</isNotEqual>
		            )
	</insert>

	<!--
	==================================================================
	  # 설명	: 시스템항목관리 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_SYSTEM_ITEM
	==================================================================
	-->
	<update id="updateData" parameterClass="hashMap">
		UPDATE BSC_SYSTEM_ITEM
		   SET ITEM_NM          = #itemNm#
		     , ITEM_ACTUAL_DIVI = #itemActualDivi#
		     , ITEM_DIVI        = #itemDivi#
		     , SYSTEM_GBN       = #systemGbn#
		     , CONTENT          = #content#
		     , EXCEL_USER_ID    = #excelUserId#
		     , DEPT_APPLY_SCOPE = #deptApplyScope#
		     , MODIFY_DT        = SYSDATE
		<isEqual property="useYn" compareValue="N">
		     , DELETE_DT        = SYSDATE
		</isEqual>
		<isNotEqual property="useYn" compareValue="N">
		     , DELETE_DT        = NULL
		</isNotEqual>
		 WHERE YEAR = #year#
		   AND ITEM_CD = #itemCd#
	</update>


	<!--
	==================================================================
	  # 설명	: 시스템항목관리 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_SYSTEM_ITEM
	==================================================================
	-->
	<update id="deleteData" parameterClass="hashMap">
		UPDATE BSC_SYSTEM_ITEM
		   SET DELETE_DT = SYSDATE
		 WHERE 1 = 1
		   AND YEAR = #year#
		   AND ITEM_CD = #itemCd#
	</update>

	<!--
	==================================================================
	  # 설명	: 연계항목명 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_SYSTEM_ITEM
	==================================================================
	-->
	<select id="getItemNm" parameterClass="hashMap" resultClass="java.lang.String">
		SELECT ITEM_NM
		  FROM BSC_SYSTEM_ITEM
		 WHERE YEAR = #findYear#
		   AND ITEM_CD = #findItemCd#
	</select>

	<!--
	==================================================================
	  # 설명	: 연계개수 팝업 데이터 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_CAL_TYPE_COL, BSC_SYSTEM_ITEM
	==================================================================
	-->
	<select id="getPopItemCntList" parameterClass="hashMap" resultClass="hashMap">
		SELECT   A.YEAR
		       , C.SC_DEPT_ID
		       , D.SC_DEPT_NM
		       , A.METRIC_ID
		       , C.METRIC_NM
		       , A.CAL_TYPE_COL
		       , A.CAL_TYPE_COL_NM
		       , B.ITEM_CD
		       , B.ITEM_NM
		    FROM BSC_CAL_TYPE_COL A INNER JOIN BSC_SYSTEM_ITEM B ON A.YEAR = B.YEAR
		                                                       AND A.ITEM_CD = B.ITEM_CD
		                                                       AND B.DELETE_DT IS NULL
		         INNER JOIN BSC_METRIC C ON A.YEAR = C.YEAR
		                               AND A.METRIC_ID = C.METRIC_ID
		                               AND C.DELETE_DT IS NULL
		         INNER JOIN BSC_SC_DEPT D ON C.YEAR = D.YEAR
		                                AND C.SC_DEPT_ID = D.SC_DEPT_ID
		                                AND D.DELETE_DT IS NULL
		   WHERE A.YEAR = #findYear#
		     AND A.ITEM_CD = #findItemCd#
		     AND A.DELETE_DT IS NULL
		     AND A.ITEM_CD IS NOT NULL
		ORDER BY A.METRIC_ID, A.CAL_TYPE_COL
	</select>

	<!--
	==================================================================
	  # 설명	: 기존 권한 삭제
	  #	기능	: DELETE
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->
	<delete id="deleteAdmin" parameterClass="hashMap">
		DELETE FROM BSC_ADMIN
		 WHERE ADMIN_GUBUN IN ('20')
	</delete>

	<!--
	==================================================================
	  # 설명	: 엑셀담당자 입력
	  #	기능	: INSERT
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->
	<insert id="insertAdmin" parameterClass="hashMap">
		INSERT INTO BSC_ADMIN (ADMIN_GUBUN, USER_ID, DEPT_ID)
        SELECT DISTINCT '20'
            ,  A.EXCEL_USER_ID
            , (SELECT MAX(DEPT_ID) AS DEPT_ID
                 FROM V_ROLE_USER
                WHERE USER_ID = A.EXCEL_USER_ID)
          FROM BSC_SYSTEM_ITEM A
         WHERE A.DELETE_DT IS NULL
           AND A.EXCEL_USER_ID IS NOT NULL
	</insert>

	<!--
	==================================================================
	  # 설명	: 시스템 연계항목 정보를 가져옴
	  #	기능	: SELECT
	  #	TABLE	:
	==================================================================
	-->
	<select id="getItem" remapResults="true" parameterClass="hashMap" resultClass="hashMap">
		  SELECT A.ITEM_CD, B.CAL_TYPE_COL_NM
            FROM BSC_SYSTEM_ITEM A
               , BSC_CAL_TYPE_COL B
           WHERE A.YEAR = #findYear#
             AND A.YEAR = B.YEAR
             AND A.ITEM_CD = B.ITEM_CD
             AND B.METRIC_ID = #findMetricId#
             AND B.INSERT_GUBUN = '01'
           ORDER BY B.CAL_TYPE_COL_NM
	</select>

	<!--
	==================================================================
	  # 설명	: 시스템 연계 부서 목록 보기
	  #	기능	: SELECT
	  #	TABLE	:
	==================================================================
	-->
	<select id="getScDeptMapping" parameterClass="hashMap" resultClass="java.lang.String">
	SELECT DEPT_ID
		  FROM ( SELECT DEPT_ID 
				   FROM BSC_SC_DEPT_MAPPING
				  WHERE YEAR = #findYear# 
				    AND SC_DEPT_ID = #findScDeptCd# ORDER BY DEPT_ID 
				    )
		 WHERE ROWNUM = 1
	</select>

</sqlMap>


