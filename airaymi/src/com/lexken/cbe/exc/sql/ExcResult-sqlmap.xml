<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="cbe.exc.excResult">

	<!--
	===================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: PRS_EVAL_GRP
	==================================================================
	-->
	
	<!--
	==================================================================   
	  # 설명	: 별도평가자 평가등급 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_EXC_EVAL_USER
	==================================================================
	-->
	<select id="getUserList" parameterClass="hashMap" resultClass="hashMap">
		SELECT  A.YEAR,
				(SELECT DEPT_KOR_NM
				   FROM BSC_INSA_PCMT
				  WHERE YEAR = A.YEAR AND EMPN = A.EMPN AND END_PCMT_DATE = #findYear#||'1231') DEPT_KOR_NM,
				(SELECT KOR_NM
				   FROM BSC_INSA
				  WHERE YEAR = A.YEAR AND EMPN = A.EMPN) KOR_NM,
				(SELECT CODE_NM
				   FROM BSC_CODE D
				  WHERE CODE_GRP_ID = '171' AND D.YEAR = A.YEAR
					AND D.CODE_ID =
									(SELECT POS_TC
									   FROM BSC_INSA_PCMT
									  WHERE YEAR = A.YEAR
										AND EMPN = A.EMPN
										AND END_PCMT_DATE = #findYear#||'1231')) POS_TC_NM,
				A.EVAL_DEGREE_ID,
				(SELECT START_PCMT_DATE
				   FROM BSC_INSA_PCMT
				  WHERE YEAR = A.YEAR AND EMPN = A.EMPN AND END_PCMT_DATE = #findYear#||'1231') START_PCMT_DATE,
				(SELECT END_PCMT_DATE
				   FROM BSC_INSA_PCMT
				  WHERE YEAR = A.YEAR AND EMPN = A.EMPN AND END_PCMT_DATE =  #findYear#||'1231') END_PCMT_DATE,
				COUNT (1) OVER (PARTITION BY A.YEAR) USER_CNT,
	            A.EMPN,
	            A.GRADE_ITEM_ID,
<![CDATA[  	            
	            CASE
		            WHEN ETC2 >= 95.0
		            THEN 'S'
		            WHEN ETC2 >= 92.0
		            THEN 'A'
		            WHEN ETC2 >= 88.0
		            THEN 'B'
		            ELSE 'C'
		         END
		            FINAL_GRADE,
]]>
	            NVL(A.EVAL_SUBMIT_YN,'N') EVAL_SUBMIT_YN,
	            B.SUBMIT_YN
		  FROM  BSC_EXC_EVAL_USER A
    LEFT OUTER  JOIN BSC_EXC_RPT B
			ON  A.YEAR = B.YEAR
		   AND  A.EMPN = B.EMPN
		   AND  A.EVAL_DEGREE_ID = B.EVAL_DEGREE_ID
	LEFT OUTER JOIN BSC_CODE C
			ON A.YEAR = C.YEAR
		   AND CODE_GRP_ID = '198'
		   AND A.GRADE_ITEM_ID =  C.CODE_ID
		 WHERE A.YEAR = #findYear#
		   AND A.EMPN NOT IN (SELECT EMPN FROM BSC_INSA_PCMT WHERE YEAR = A.YEAR AND PCMT_TC IN ( '81','82','83','84','85','86','89','8H','8I') )                                                  
	  ORDER BY  EMPN
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 별도평가부서 평가등급 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_EXC_EVAL_DEPT
	==================================================================
	-->
	<select id="getDeptList" parameterClass="hashMap" resultClass="hashMap">
		SELECT B.YEAR, B.EVAL_DEGREE_ID, B.SC_DEPT_ID
		     , B.GRADE_ITEM_ID, B.GOV_GRADE,
		     F_DEPT_FULL_NM (#findYear#, B.SC_DEPT_ID, 'BSC_SC_DEPT') SC_DEPT_NM,
		     CASE WHEN TOTAL_SCORE IS NULL THEN GRADE_ITEM_ID
		            WHEN TOTAL_SCORE >= 95 THEN 'S'
		            WHEN TOTAL_SCORE >= 92 THEN 'A'
		            WHEN TOTAL_SCORE >= 88 THEN 'B'
		            ELSE 'C'
		       END FINAL_GRADE,
		       COUNT (1) OVER (PARTITION BY B.YEAR) DEPT_CNT,
		       A.SUBMIT_YN
		  FROM (
		        SELECT YEAR, EVAL_DEGREE_ID, SC_DEPT_ID
		             , GRADE_ITEM_ID, GOV_GRADE
		             , CASE WHEN GOV_GRADE IS NULL THEN NULL
		                    ELSE NVL((SELECT ETC1 
		                            FROM BSC_CODE 
		                           WHERE YEAR = BSC_EXC_EVAL_DEPT.YEAR
		                             AND CODE_GRP_ID = '198'
		                             AND CODE_ID = BSC_EXC_EVAL_DEPT.GOV_GRADE), 0) * 0.5 +
		                         NVL((SELECT ETC2
		                            FROM BSC_CODE 
		                           WHERE YEAR = BSC_EXC_EVAL_DEPT.YEAR
		                             AND CODE_GRP_ID = '198'
		                             AND CODE_ID = BSC_EXC_EVAL_DEPT.GRADE_ITEM_ID), 0) * 0.5
		                     END TOTAL_SCORE
		          FROM BSC_EXC_EVAL_DEPT
		         WHERE YEAR = #findYear#
		       ) B
	LEFT OUTER  JOIN BSC_EXC_RPT A
			ON  A.YEAR = B.YEAR
		   AND  A.SC_DEPT_ID = B.SC_DEPT_ID
		   AND  A.EVAL_DEGREE_ID = B.EVAL_DEGREE_ID
		 WHERE  B.YEAR = #findYear#
	  ORDER BY  SC_DEPT_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 별도평가부서 평가등급 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_EXC_EVAL_DEPT
	==================================================================
	-->	
	<update id="updaDeptData" parameterClass="hashMap">
		UPDATE BSC_EXC_EVAL_DEPT aa
		   SET FINAL_GRADE =
		          (SELECT CASE
		                     WHEN TOTAL_SCORE IS NULL THEN GRADE_ITEM_ID
		                     WHEN TOTAL_SCORE >= 95 THEN 'S'
		                     WHEN TOTAL_SCORE >= 92 THEN 'A'
		                     WHEN TOTAL_SCORE >= 88 THEN 'B'
		                     ELSE 'C'
		                  END
		                     FINAL_GRADE
		             FROM (SELECT YEAR,
		                          EVAL_DEGREE_ID,
		                          SC_DEPT_ID,
		                          GRADE_ITEM_ID,
		                          GOV_GRADE,
		                          CASE
		                             WHEN GOV_GRADE IS NULL
		                             THEN
		                                NULL
		                             ELSE
		                                NVL (
		                                   (SELECT ETC1
		                                      FROM BSC_CODE
		                                     WHERE YEAR = BSC_EXC_EVAL_DEPT.YEAR
		                                           AND CODE_GRP_ID = '198'
		                                           AND CODE_ID =
		                                                  BSC_EXC_EVAL_DEPT.GOV_GRADE),
		                                   0)
		                                * 0.5
		                                + NVL (
		                                     (SELECT ETC2
		                                        FROM BSC_CODE
		                                       WHERE YEAR = BSC_EXC_EVAL_DEPT.YEAR
		                                             AND CODE_GRP_ID = '198'
		                                             AND CODE_ID =
		                                                    BSC_EXC_EVAL_DEPT.
		                                                     GRADE_ITEM_ID),
		                                     0)
		                                  * 0.5
		                          END
		                             TOTAL_SCORE
		                     FROM BSC_EXC_EVAL_DEPT
		                    WHERE YEAR = #findYear#) bb
		            WHERE     AA.YEAR = bb.year
		                  AND AA.EVAL_DEGREE_ID = bb.eval_degree_id
		                  AND aa.sc_dept_id = bb.sc_dept_id)		
	</update>
	
	
	<!--
	==================================================================   
	  # 설명	: 확정여부 확인
	  #	기능	: SELECT
	  #	TABLE	: BSC_EXC_SUBMIT
	==================================================================
	-->
	<select id="getSubmityn" parameterClass="hashMap" resultClass="hashMap">
		SELECT NVL(EVAL_YN,'N') EVAL_YN FROM BSC_EXC_SUBMIT WHERE YEAR = #findYear#
    </select>
	
	
	
		
</sqlMap>


