<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.org.orgDeptScore">

	<!--
	==================================================================
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	:
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />

	
	<!--
	==================================================================   
	  # 설명	: 간부조직관리역량평가 기간 조회
	  #	기능	: SELECT
	  #	TABLE	: PRS_EVAL_SCHEDULE
	==================================================================
	-->
	<select id="getRptSchedule" parameterClass="hashMap" resultClass="hashMap">
		SELECT MNG_ORG_START_DT
			 , MNG_ORG_END_DT
		     , CASE 
		     		WHEN SYSDATE BETWEEN TO_DATE(MNG_ORG_START_DT, 'rrrr-mm-dd') 
		     						 AND TO_DATE(MNG_ORG_END_DT || '23:59:59'
		     						 		  , 'rrrr-mm-dd hh24:mi:ss') 
		     						THEN 'T'
		            ELSE 'N' 
		       END RPT_YN
		  FROM PRS_EVAL_SCHEDULE
		 WHERE 1 = 1
		 <isNotEmpty prepend="AND" property="findYear">
			YEAR = #findYear#
		 </isNotEmpty>
		 <isNotEmpty prepend="AND" property="year">
			YEAR = #year#
		 </isNotEmpty>
	</select>
	
	
	<!--
	==================================================================
	  # 설명	: 조직역량평가 결과 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: ORG_DEPT_SCORE
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
          SELECT A.YEAR
               , A.DEPT_CD
               , CASE
                    WHEN A.DEPT_LEVL = '2'
                    THEN
                       (SELECT DEPT_KOR_NM || ' '
                          FROM BSC_INSA_DEPT
                         WHERE A.YEAR = YEAR
                           AND A.UP_DEPT_CD = DEPT_CD)
                 END || A.DEPT_KOR_NM DEPT_KOR_NM
               , B.GRADE
               , B.SCORE
            FROM (           SELECT *
                               FROM (SELECT *
                                       FROM BSC_INSA_DEPT
                                      WHERE YEAR = #findYear#
                                        AND (USE_YN = 'T' OR DEPT_CD = '0000'))
                              WHERE 1 = 1
                              AND DEPT_CD NOT IN ( '1000', '1005', '1010', '1090')
		<dynamic>
			<isEqual property="findDeptCd" compareValue="0000">
                         START WITH DEPT_CD = '0000'
		    </isEqual>
			<isNotEqual property="findDeptCd" compareValue="0000">
                         START WITH DEPT_CD = #findDeptCd#
		    </isNotEqual>
	    </dynamic>
                         CONNECT BY PRIOR DEPT_CD = UP_DEPT_CD
                  ORDER SIBLINGS BY DISP_ORDER) A
               , ORG_DEPT_SCORE B
           WHERE 1 = 1
             AND A.YEAR = B.YEAR(+)
             AND A.DEPT_CD = B.DEPT_CD(+)
        ORDER BY A.DISP_ORDER, A.DEPT_CD
	</select>

	<!--
	==================================================================
	  # 설명	: 조직역량평가 등록
	  #	기능	: INSERT
	  #	TABLE	: ORG_DEPT_SCORE
	==================================================================
	-->
	<insert id="insertData" parameterClass="hashMap">
		MERGE INTO ORG_DEPT_SCORE AA
		     USING (SELECT #year# AS YEAR
        		         , #deptCd# AS DEPT_CD
                 		 , UPPER(#grade#) AS GRADE
                 		 , #score# AS SCORE
              		FROM DUAL) BB
		        ON (AA.YEAR = BB.YEAR
        		AND AA.DEPT_CD = BB.DEPT_CD)
		WHEN MATCHED
		THEN
		   UPDATE SET AA.GRADE = BB.GRADE, AA.SCORE = BB.SCORE, AA.CREATE_DT = SYSDATE
		WHEN NOT MATCHED
		THEN
		   INSERT     (YEAR
		             , DEPT_CD
             		 , GRADE
		             , SCORE
		             , CREATE_DT)
		       VALUES (BB.YEAR
        		     , BB.DEPT_CD
		             , BB.GRADE
		             , BB.SCORE
		             , SYSDATE)
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 파라미터 맵
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<parameterMap id="paramMap" class="java.util.HashMap">
		<parameter property="findYear" jdbcType="VARCHAR"  javaType="java.lang.String" mode="IN"/>	
	</parameterMap>	

	<!--
	==================================================================   
	  # 설명	: 프로시저 호출
	  #	기능	: CALL PROCEDURE
	  #	TABLE	: 
	==================================================================
	-->	
	<procedure id="callSpPrsMngDeptScore"  parameterMap="paramMap">
		{CALL  SP_PRS_ORG_DEPT_SCORE(?)} 
    </procedure>

</sqlMap>


