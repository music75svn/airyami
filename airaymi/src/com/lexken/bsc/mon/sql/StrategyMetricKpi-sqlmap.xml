<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.mon.strategyMetricKpi">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 전략과제KPI리스트 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
	         SELECT A.YEAR, A.MON, A.SC_DEPT_ID, A.SC_DEPT_NM 																
	         		 , A.METRIC_ID, 																							
	                A.METRIC_NM, 																								
	                A.WEIGHT, 																								
	                DECODE(B.MON,#findMon#,TO_CHAR(A.TARGET), DECODE(#findMon#,'01', C.PLAN_NM_1MON, C.PRV_PLAN_NM)  							
	                ) as TARGET,
	                DECODE(B.MON,#findMon#,TO_CHAR(A.ACTUAL), C.ACT_NM) AS ACTUAL,  
	                DECODE(B.MON,#findMon#,TO_CHAR(A.SCORE), A.ACTIVITY_SCORE) AS SCORE,                  																		
	                A.STATUS AS STATUS,  
	                A.PERSPECTIVE_NM, 																						
	                A.STRATEGY_ID,                                                                                            
	                A.STRATEGY_NM,                                                                                            
	                A.EVAL_CYCLE_NM, 																							
	                A.UNIT_NM,
	                A.EVAL_CYCLE,
	                A.EVAL_CYCLE_NM, 																								
	                DECODE(B.MON, #findMon#, 'Y', 'N') AS ACTUAL_YN 
	        	  FROM BSC_METRICSCORE A,																						        	
	               BSC_ACT_REG_DEF_MON B,  
	                (SELECT METRIC_ID, PLAN_NM_1MON,   
	                         (SELECT NEXT_PLAN_NM FROM BSC_INIT_ACTIVITY WHERE YEAR || MON = TO_CHAR((ADD_MONTHS(TO_DATE(#findYear#||#findMon#,'YYYYMM'),-1)),'YYYYMM') AND METRIC_ID = T1.METRIC_ID ) AS PRV_PLAN_NM,  
	                         ACT_NM,  
	                         FINAL_EVAL,  
	                         STATUS_ID
	                   FROM BSC_INIT_ACTIVITY T1   
	                  WHERE T1.YEAR =#findYear#  
	                    AND T1.MON = #findMon#  
	                 )C  
	         WHERE A.YEAR = #findYear# 
	           AND A.MON = #findMon# 
	           AND A.ANAL_CYCLE = #findAnalCycle#
	           AND A.SC_DEPT_ID = #findScDeptId# 
	           <!-- AND A.BSC_METRIC_GBN IN ('01','02') --> 
	           <isNotEmpty prepend="AND" property="findStrategyId">
	        	 	 A.STRATEGY_ID	= #findStrategyId#					
	           </isNotEmpty>
	           
	           <!-- DISPLAY_GBN, SUB_METRIC_YN 둘다 존재하지 않는 컬럼. 확인 필요. -->
	           <!-- AND A.DISPLAY_GBN = 'T'      -->                    
	           <!--                                                                  
	           <![CDATA[
	            AND (A.SUB_METRIC_YN <> 'Y' OR A.SUB_METRIC_YN IS NULL) 
	           ]]>
	            -->
	           AND A.YEAR      = B.YEAR(+)                                                                                      
	           AND A.METRIC_ID = B.METRIC_ID(+)  
	           AND B.MON(+) = #findMon#  
	           AND A.METRIC_ID = C.METRIC_ID(+)
               AND A.METRIC_ID IN (
               	 SELECT METRIC_ID
               	 FROM BSC_METRIC
               	 WHERE YEAR = A.YEAR
               	   AND DELETE_DT IS NULL
               )
	         ORDER BY STATUS DESC NULLS LAST, SCORE, 
	                A.SORT_ORDER, 
	                A.METRIC_NM
	</select>
	 

	<!--
	==================================================================   
	  # 설명	: 전략과제KPI리스트 목록 보기(차트)
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getChartList" parameterClass="hashMap" resultClass="hashMap">
         SELECT A.METRIC_ID,    A.METRIC_NM,                                                          
                 SUM(CASE WHEN (A.MON = '01' AND A.TYPE_ID = '02') THEN A.ACTIVITY_SCORE              
                          WHEN  A.MON = '01'                        THEN ROUND(NVL(A.SCORE,A.ACTIVITY_SCORE),1)END) MONTH1,     
                 SUM(CASE WHEN (A.MON = '02' AND A.TYPE_ID = '02') THEN A.ACTIVITY_SCORE              
                          WHEN  A.MON = '02'                        THEN ROUND(NVL(A.SCORE,A.ACTIVITY_SCORE),1)END) MONTH2,     
                 SUM(CASE WHEN (A.MON = '03' AND A.TYPE_ID = '02') THEN A.ACTIVITY_SCORE              
                          WHEN  A.MON = '03'                        THEN ROUND(NVL(A.SCORE,A.ACTIVITY_SCORE),1)END) MONTH3,     
                 SUM(CASE WHEN (A.MON = '04' AND A.TYPE_ID = '02') THEN A.ACTIVITY_SCORE              
                          WHEN  A.MON = '04'                       THEN ROUND(NVL(A.SCORE,A.ACTIVITY_SCORE),1) END) MONTH4,     
                 SUM(CASE WHEN (A.MON = '05' AND A.TYPE_ID = '02') THEN A.ACTIVITY_SCORE              
                          WHEN  A.MON = '05'                        THEN ROUND(NVL(A.SCORE,A.ACTIVITY_SCORE),1)END) MONTH5,     
                 SUM(CASE WHEN (A.MON = '06' AND A.TYPE_ID = '02') THEN A.ACTIVITY_SCORE              
                          WHEN  A.MON = '06'                        THEN ROUND(NVL(A.SCORE,A.ACTIVITY_SCORE),1)END) MONTH6,     
                 SUM(CASE WHEN (A.MON = '07' AND A.TYPE_ID = '02') THEN A.ACTIVITY_SCORE              
                          WHEN  A.MON = '07'                        THEN ROUND(NVL(A.SCORE,A.ACTIVITY_SCORE),1)END) MONTH7,     
                 SUM(CASE WHEN (A.MON = '08' AND A.TYPE_ID = '02') THEN A.ACTIVITY_SCORE              
                          WHEN  A.MON = '08'                        THEN ROUND(NVL(A.SCORE,A.ACTIVITY_SCORE),1)END) MONTH8,      
                 SUM(CASE WHEN (A.MON = '09' AND A.TYPE_ID = '02') THEN A.ACTIVITY_SCORE              
                          WHEN  A.MON = '09'                        THEN ROUND(NVL(A.SCORE,A.ACTIVITY_SCORE),1)END) MONTH9,      
                 SUM(CASE WHEN (A.MON = '10' AND A.TYPE_ID = '02') THEN A.ACTIVITY_SCORE              
                          WHEN  A.MON = '10'                        THEN ROUND(NVL(A.SCORE,A.ACTIVITY_SCORE),1)END) MONTH10,     
                 SUM(CASE WHEN (A.MON = '11' AND A.TYPE_ID = '02') THEN A.ACTIVITY_SCORE              
                          WHEN  A.MON = '11'                        THEN ROUND(NVL(A.SCORE,A.ACTIVITY_SCORE),1)END) MONTH11,      
                 SUM(CASE WHEN (A.MON = '12' AND A.TYPE_ID = '02') THEN A.ACTIVITY_SCORE              
                          WHEN  A.MON = '12'                        THEN ROUND(NVL(A.SCORE,A.ACTIVITY_SCORE),1)END) MONTH12                                                                                       
	        	  FROM BSC_METRICSCORE A
             				LEFT JOIN BSC_COMMON_STATUS AA                                                      
	        						ON AA.STATUS_ID = A.STATUS                                                  
	        					   AND A.YEAR = AA.YEAR                                                         
	                                                                                                          
	         WHERE A.YEAR 			= #findYear#         
               AND A.ANAL_CYCLE		= #findAnalCycle#                                                            
               AND A.SC_DEPT_ID		= #findScDeptId#                                                       
               AND A.STRATEGY_ID		= #findStrategyId#                                                            
               <!-- AND A.DISPLAY_GBN		= 'T' -->
               AND A.METRIC_ID IN (
               	 SELECT METRIC_ID
               	 FROM BSC_METRIC
               	 WHERE YEAR = A.YEAR
               	   AND DELETE_DT IS NULL
               )
             GROUP BY A.METRIC_ID , A.METRIC_NM								                                
	</select>
	
	
</sqlMap>


