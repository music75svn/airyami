<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.emp.prsEmpEvalResultStatus">

    <!--
    ==================================================================
      # 설명    : typeAlias 선언
      #    기능    : SETTING
      #    TABLE    :
    ==================================================================
    -->
    <typeAlias alias="hashMap"             type="java.util.HashMap" />

	 <!--
    ==================================================================
      # 설명    : 평가군
      #    기능    : SELECT
      #    TABLE    :
    ==================================================================
    -->
    <select id="getEvalGrpList" parameterClass="hashMap" resultClass="hashMap">
        SELECT
		      EVAL_GRP_ID
		    , EVAL_GRP_NM
		FROM PRS_EVAL_GRP
		WHERE YEAR = #findYear#
		  AND EVAL_TYPE IN ('06', '07', '08')
		ORDER BY SORT_ORDER
    </select>

    <!--
    ==================================================================
      # 설명    : 평가결과 목록 보기
      #    기능    : SELECT
      #    TABLE    :
    ==================================================================
    -->
    <select id="getList" parameterClass="hashMap" resultClass="hashMap">
        SELECT YEAR
	         , EVAL_GRP_NM
	         , DEPT_CD
	         , DEPT_KOR_NM
	         , ASSESSOR_1ST_EMPN
	         , KOR_NM_1ST
	         , EVAL_SUBMIT_YN
	         , ASSESSOR_2ND_EMPN
	         , KOR_NM_2ND
	         , EVAL_SUBMIT_YN_2ND
	 	  FROM (
		        SELECT YEAR
			         , EVAL_GRP_NM
			         , DEPT_CD
			         , DEPT_KOR_NM
			         , ASSESSOR_1ST_EMPN
			         , KOR_NM_1ST
			         , CASE WHEN SUM(EVAL_SUBMIT_YN) = 1 THEN 'Y'
			                WHEN SUM(EVAL_SUBMIT_YN) = 3 OR SUM(EVAL_SUBMIT_YN) = 4 THEN 'N'      
			                WHEN SUM(EVAL_SUBMIT_YN) = 2 THEN 'F'
			                ELSE 'N'
			           END EVAL_SUBMIT_YN
			         , ASSESSOR_2ND_EMPN
			         , KOR_NM_2ND
			         , CASE WHEN SUM(EVAL_SUBMIT_YN_2ND) = 1 THEN 'Y'
			                WHEN SUM(EVAL_SUBMIT_YN_2ND) = 3 OR SUM(EVAL_SUBMIT_YN_2ND) = 4 THEN 'N'      
			                WHEN SUM(EVAL_SUBMIT_YN_2ND) = 2 THEN 'F'
			                ELSE 'N'
			           END EVAL_SUBMIT_YN_2ND
			  FROM (
			        SELECT A.YEAR
				         , F.EVAL_GRP_NM
				         , A.DEPT_CD
				         , F_DEPT_FULL_NM( #findYear#, A.DEPT_CD, 'BSC_INSA_DEPT') DEPT_KOR_NM  
				         , B.ASSESSOR_1ST_EMPN
				         , C.KOR_NM AS KOR_NM_1ST
				         , CASE
					           WHEN E.EVAL_SUBMIT_YN = 'Y' THEN 1
					           WHEN E.EVAL_SUBMIT_YN = 'N' THEN 3
					           WHEN e.EVAL_SUBMIT_YN IS NULL THEN 2
					        END
					           EVAL_SUBMIT_YN
				         , B.ASSESSOR_2ND_EMPN
				         , D.KOR_NM AS KOR_NM_2ND
				         , CASE
					           WHEN E.EVAL_SUBMIT_YN_2ND = 'Y' THEN 1
					           WHEN E.EVAL_SUBMIT_YN_2ND = 'N' THEN 3
					           WHEN E.EVAL_SUBMIT_YN_2ND IS NULL THEN 2
					        END
					           EVAL_SUBMIT_YN_2ND
					  FROM BSC_INSA_DEPT A
					  LEFT OUTER JOIN PRS_EMP_EVAL_ASSESSOR B
					    ON A.YEAR = B.YEAR
					   AND A.DEPT_CD = B.DEPT_CD
					  LEFT OUTER JOIN BSC_INSA C
					    ON B.YEAR = C.YEAR
					   AND B.ASSESSOR_1ST_EMPN = C.EMPN
					  LEFT OUTER JOIN BSC_INSA D
					    ON B.YEAR = D.YEAR
					   AND B.ASSESSOR_2ND_EMPN = D.EMPN
					  LEFT OUTER JOIN PRS_EMP_MEMBER E  
					    ON B.YEAR = E.YEAR
					   AND B.DEPT_CD = E.DEPT_CD
					  LEFT OUTER JOIN (SELECT T5.YEAR
										    , T5.EVAL_GRP_ID
										    , T5.EVAL_GRP_NM
										    , T6.DEPT_CD
										 FROM PRS_EVAL_GRP T5
									    INNER JOIN PRS_EMP_DEPT_EVAL_GRP T6
										   ON T5.YEAR = T6.YEAR 
										  AND T5.EVAL_GRP_ID = T6.EVAL_GRP_ID
										WHERE T5.YEAR = #findYear#
										  AND T5.EVAL_TYPE IN ('06', '07', '08')) F
										   ON E.YEAR = F.YEAR
										  AND E.DEPT_CD = F.DEPT_CD
					 WHERE A.YEAR = #findYear#
					   AND A.USE_YN = 'T'
					   AND A.DEPT_CD > '1090' 
					   AND A.DEPT_CD IN
					                (  SELECT A.DEPT_CD
					                     FROM BSC_INSA_DEPT A
					                     LEFT OUTER JOIN BSC_INSA_DEPT B
					                       ON A.YEAR = B.YEAR
					                      AND A.USE_YN = B.USE_YN
					                      AND A.DEPT_CD = B.UP_DEPT_CD
					                    WHERE A.YEAR = #findYear#
					                          AND A.USE_YN = 'T'
					                          AND A.DEPT_CD > '1090'
					                    GROUP BY A.DEPT_CD
					                   HAVING COUNT (B.DEPT_CD) = 0)
						<isNotEmpty prepend="AND" property="findEvalGrpId">
							F.EVAL_GRP_ID = #findEvalGrpId#		
						</isNotEmpty>
						<isNotEmpty property="findEmpnNameText">
							<isEqual prepend="AND" property="findNameEmpn" compareValue="findName">
								( C.KOR_NM LIKE '%'|| TRIM(#findEmpnNameText#) ||'%' OR D.KOR_NM LIKE '%'|| TRIM(#findEmpnNameText#) ||'%' )
							</isEqual>
							<isEqual prepend="AND" property="findNameEmpn" compareValue="findEmpn">
								( B.ASSESSOR_1ST_EMPN LIKE '%' || TRIM(#findEmpnNameText#) || '%' OR B.ASSESSOR_2ND_EMPN LIKE '%' || TRIM(#findEmpnNameText#) || '%' )
							</isEqual>
						</isNotEmpty>
					 GROUP BY A.YEAR
					         , F.EVAL_GRP_NM
					         , A.DEPT_CD, A.DEPT_KOR_NM
					         , B.ASSESSOR_1ST_EMPN
					         , C.KOR_NM
					         , E.EVAL_SUBMIT_YN
					         , B.ASSESSOR_2ND_EMPN
					         , D.KOR_NM
					         , E.EVAL_SUBMIT_YN_2ND
					 ORDER BY A.DEPT_CD
					 )
				GROUP BY YEAR
		            , EVAL_GRP_NM
		            , DEPT_CD
		            , DEPT_KOR_NM
		            , ASSESSOR_1ST_EMPN
		            , KOR_NM_1ST
		            , ASSESSOR_2ND_EMPN
		            , KOR_NM_2ND
		 		ORDER BY DEPT_CD
    			)
     	WHERE 1=1
     			<isEqual prepend="AND" property="findEvalSubmitYn" compareValue="01">
	     			EVAL_SUBMIT_YN = 'Y' OR EVAL_SUBMIT_YN_2ND = 'Y'
     			</isEqual>
     			<isEqual prepend="AND" property="findEvalSubmitYn" compareValue="02">
	     			EVAL_SUBMIT_YN = 'N' OR EVAL_SUBMIT_YN_2ND = 'N'
     			</isEqual>
     			<isEqual prepend="AND" property="findEvalSubmitYn" compareValue="03">
	     			EVAL_SUBMIT_YN = 'F' OR EVAL_SUBMIT_YN_2ND = 'F'
     			</isEqual>
    </select>

</sqlMap>


