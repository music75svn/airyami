<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="man.metric.calMetric">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_CAL_METRIC
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR 
			 , MAN_KPI_ID
			 , MAN_KPI_NM
			 , ACT_CAL_TYPE
			 , CNT
<!--			 , WM_CONCAT(CAL_TYPE_COL_NM)  DESCRIPTION -->
			 , WM_CONCAT (REPLACE (CAL_TYPE_COL_NM, ',', '.')) DESCRIPTION
			 , CAL_GUBUN 
		  FROM ( SELECT  A.YEAR
			           , A.MAN_KPI_ID                
			           , A.MAN_KPI_NM                    
			           , A.ACT_CAL_TYPE
			           , A.CAL_GUBUN
			           , B.CAL_TYPE_COL||' : '||CAL_TYPE_COL_NM AS CAL_TYPE_COL_NM 
			           ,(SELECT COUNT(1) FROM MAN_METRIC_MAPPING WHERE A.YEAR = YEAR AND A.MAN_KPI_ID = MAN_KPI_ID  AND ROWNUM = 1) CNT
			       FROM MAN_METRIC A
			 LEFT OUTER JOIN MAN_CAL_TYPE_COL_GRP B
					 ON A.MAN_KPI_GRP_ID = B.MAN_KPI_GRP_ID
				  WHERE A.YEAR = #findYear#
					AND A.TYPE_ID = '01'
					AND A.DELETE_DT IS NULL
			   ORDER BY A.MAN_KPI_ID, CAL_TYPE_COL)
 		 GROUP BY YEAR,MAN_KPI_ID, MAN_KPI_NM, ACT_CAL_TYPE, CNT, CAL_GUBUN 
        
     
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 상세 조회(달성율)
	  #	기능	: SELECT
	  #	TABLE	: BSC_CAL_METRIC
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
	
	     SELECT  A.YEAR
                   , A.MAN_KPI_ID
                   , A.CAL_GUBUN
                   , C.METRIC_NM
                   , B.METRIC_ID   AS  SUB_METRIC_ID
                   , B.WEIGHT
                   , C.METRIC_NM  AS SUB_METRIC_NM
                   , C.SC_DEPT_ID
                   , D.SC_DEPT_NM
                   , B.CAL_PLACE
            FROM MAN_METRIC A
                  INNER JOIN MAN_METRIC_MAPPING B ON A.YEAR = B.YEAR AND A.MAN_KPI_ID = B.MAN_KPI_ID 
                 INNER JOIN BSC_METRIC C ON A.YEAR = C.YEAR AND B.METRIC_ID = C.METRIC_ID AND C.DELETE_DT IS NULL
                 INNER JOIN BSC_SC_DEPT D ON C.YEAR = D.YEAR AND C.SC_DEPT_ID = D.SC_DEPT_ID AND D.DELETE_DT IS NULL
       WHERE A.YEAR = #year#
             AND A.MAN_KPI_ID =#manKpiId# 
               AND A.DELETE_DT IS NULL      
        ORDER BY B.CAL_PLACE,C.METRIC_NM        
            
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 상세 조회(실적)
	  #	기능	: SELECT
	  #	TABLE	: BSC_CAL_METRIC
	==================================================================
	-->
	<select id="getActualDetail" parameterClass="hashMap" resultClass="hashMap">
		 SELECT  A.YEAR
                   , A.MAN_KPI_ID
                   , A.CAL_GUBUN
                   , C.METRIC_NM
                   , B.METRIC_ID   AS  SUB_METRIC_ID
                   , B.WEIGHT
                   , C.METRIC_NM  AS SUB_METRIC_NM
                   , C.SC_DEPT_ID
                   , D.SC_DEPT_NM
                   , E.CAL_TYPE_COL
                   , B.CAL_PLACE
            FROM MAN_METRIC A
                 LEFT OUTER JOIN  MAN_CAL_TYPE_COL E ON A.YEAR = E.YEAR AND A.MAN_KPI_ID = B.MAN_KPI_ID AND B.DELETE_DT IS NULL
                  LEFT OUTER JOIN MAN_METRIC_MAPPING B ON A.YEAR = B.YEAR AND A.MAN_KPI_ID = B.MAN_KPI_ID 
                 LEFT OUTER JOIN BSC_METRIC C ON A.YEAR = C.YEAR AND B.METRIC_ID = C.METRIC_ID AND C.DELETE_DT IS NULL
                 LEFT OUTER JOIN BSC_SC_DEPT D ON C.YEAR = D.YEAR AND C.SC_DEPT_ID = D.SC_DEPT_ID AND D.DELETE_DT IS NULL
       WHERE A.YEAR = #year#
             AND A.MAN_KPI_ID =#manKpiId#   
               AND A.DELETE_DT IS NULL    
		ORDER BY E.CAL_TYPE_COL
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 상세 조회(실적)
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->
	<select id="getMetricDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
		     , A.METRIC_ID
		     , A.METRIC_NM
		     , A.SC_DEPT_ID
		     , B.SC_DEPT_NM
		FROM BSC_METRIC A
		     LEFT OUTER JOIN BSC_SC_DEPT B ON A.YEAR = B.YEAR AND A.SC_DEPT_ID = B.SC_DEPT_ID AND B.DELETE_DT IS NULL
		WHERE A.YEAR = #findYear#
	      AND A.SC_DEPT_ID = #scDeptId#
	      AND A.METRIC_ID NOT IN (SELECT METRIC_ID FROM BSC_CAL_METRIC WHERE YEAR = #findYear#)
		  AND A.DELETE_DT IS NULL
	    ORDER BY A.METRIC_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_CAL_METRIC
	==================================================================
	-->	
	

	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO MAN_METRIC_MAPPING (
                    YEAR
                  , MAN_KPI_ID
                  , METRIC_ID
                  , CAL_PLACE
                  , WEIGHT
                  , CREATE_DT 
              ) VALUES (
                   #year#
                 , #manKpiId#
                 , #subMetricId#
                 , #calPlace#
                 , #weight#
                 , SYSDATE
              )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 전체 삭제
	  #	기능	: UPDATE
	  #	TABLE	: MAN_METRIC_MAPPING
	==================================================================
	-->	
	<update id="deleteAllData" parameterClass="hashMap">
		DELETE FROM MAN_METRIC_MAPPING
		WHERE YEAR = #year#
		  AND MAN_KPI_ID =#manKpiId#  
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 계산된 지표관리 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_CAL_METRIC
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM MAN_METRIC_MAPPING
		WHERE YEAR = #year#
		  AND MAN_KPI_ID =#manKpiId#  
		  AND METRIC_ID = #subMetricId#
	</update>

	<!--
	==================================================================   
	  # 설명	: 계산된 지표 구분
	  #	기능	: UPDATE
	  #	TABLE	: MAN_METRIC
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE MAN_METRIC
		   SET CAL_GUBUN = #calGubun#
		WHERE YEAR = #year#
		  AND MAN_KPI_ID =#manKpiId#  
		  		
	</update>	
	
</sqlMap>


