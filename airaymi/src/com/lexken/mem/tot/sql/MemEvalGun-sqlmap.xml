<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="mem.tot.memEvalGun">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: MEM_EVAL_GUN
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 평가군관리 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: MEM_EVAL_GRP
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
             , A.EVAL_GUN_ID
             , A.EVAL_GUN_NM
             , EVAL_GIVE_METHOD_ID
             , B.EVAL_METHOD_NM AS EVAL_GIVE_METHOD_NM
             , A.ORG_EVAL_RATE
             , A.IND_EVAL_RATE
             , (SELECT COUNT(*) FROM MEM_EVAL_GUN_USER WHERE YEAR = A.YEAR AND EVAL_GUN_ID = A.EVAL_GUN_ID) AS EVAL_GUN_USER_COUNT
             , A.SORT_ORDER
          FROM MEM_EVAL_GUN A
             , MEM_ECM_EVAL_GRADE_CONVERT_TAB B
         WHERE A.EVAL_GIVE_METHOD_ID = B.EVAL_METHOD_ID
           AND B.EVAL_METHOD_GBN_ID = '01'
           AND A.YEAR=#findYear#
           AND B.YEAR=#findYear#
           AND A.DELETE_DT IS NULL
          ORDER BY A.SORT_ORDER
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가군관리 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: MEM_EVAL_GUN
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR                  
			 , A.EVAL_GUN_ID           
			 , A.EVAL_GUN_NM
			 , A.EVAL_GIVE_METHOD_ID
			 , A.ORG_GUBUN_IDS
			 , A.CAST_TC
			 , A.POS_TC
			 , A.YEAR_TC
			 , A.YEAR_TC_GUBUN
			 , TO_CHAR(TO_DATE(A.APPLY_DT, 'YYYYMMDD'), 'YYYY.MM.DD') AS APPLY_DT
			 , A.ORG_EVAL_RATE
			 , A.IND_EVAL_RATE
			 , A.CONTENT            
			 , A.SORT_ORDER            
			 , CASE WHEN A.DELETE_DT IS NULL THEN 'Y' ELSE 'N' END AS USE_YN     
		  FROM MEM_EVAL_GUN A
		 WHERE A.YEAR = #year#
		   AND A.EVAL_GUN_ID = #evalGunId#
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가군부서 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: MEM_EVAL_GUN_DEPT
	==================================================================
	-->
	<select id="getEvalGunDeptList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
             , A.EVAL_GUN_ID
             , A.DEPT_CD
             , B.DEPT_NM
          FROM MEM_EVAL_GUN_DEPT A
             , BSC_DEPTINFO B
         WHERE 1 = 1
           AND A.YEAR=#findYear#
           AND A.EVAL_GUN_ID = #evalGunId#
           AND A.DEPT_CD = B.DEPT_ID
          ORDER BY A.DEPT_CD
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가군관리 그룹ID 조회
	  #	기능	: SELECT
	  #	TABLE	: MEM_EVAL_GUN
	==================================================================
	-->
	<select id="getEvalGunId" parameterClass="hashMap" resultClass="hashMap">
		SELECT 
			   'EGN'||NVL(LPAD(MAX(SUBSTR(EVAL_GUN_ID,4,4))+1,4,'0'),'0001') AS EVAL_GUN_ID
		  FROM MEM_EVAL_GUN
		 WHERE YEAR = #year#
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가군관리 등록
	  #	기능	: INSERT
	  #	TABLE	: MEM_EVAL_GUN
	==================================================================
	-->
	<insert id="insertData" parameterClass="hashMap">		
		INSERT INTO MEM_EVAL_GUN (
		       YEAR
		     , EVAL_GUN_ID
		     , EVAL_GUN_NM
		     , EVAL_GIVE_METHOD_ID
		     , ORG_GUBUN_IDS
		     , CAST_TC
		     , POS_TC
		     , YEAR_TC
		     , YEAR_TC_GUBUN
		     , APPLY_DT
		     , ORG_EVAL_RATE
		     , IND_EVAL_RATE
		     , CONTENT
		     , SORT_ORDER
		     , CREATE_DT		     
			 ) VALUES ( 
			   #year#
			 , #evalGunId#
			 , #evalGunNm#
			 , #evalGiveMethodId#
			 , #orgGubunIds#
			 , #castTc#
			 , #posTc#
			 , #yearTc#
			 , #yearTcGubun#
			 , REPLACE(#applyDt#, '.', '')
			 , #orgEvalRate#
			 , #indEvalRate#
			 , #content#
			 , #sortOrder#
			 , sysdate			
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 평가군관리 수정
	  #	기능	: UPDATE
	  #	TABLE	: MEM_EVAL_GUN
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE MEM_EVAL_GUN 
		   SET EVAL_GUN_NM = #evalGunNm#
		     , EVAL_GIVE_METHOD_ID = #evalGiveMethodId#
		     , ORG_GUBUN_IDS = #orgGubunIds#
		     , CAST_TC = #castTc#
		     , POS_TC = #posTc#
		     , YEAR_TC = #yearTc#
		     , YEAR_TC_GUBUN = #yearTcGubun#
		     , APPLY_DT = REPLACE(#applyDt#, '.', '')
		     , ORG_EVAL_RATE = #orgEvalRate#
		     , IND_EVAL_RATE = #indEvalRate#
		     , CONTENT = #content#
		     , SORT_ORDER = #sortOrder#
		     , MODIFY_DT      = SYSDATE 
		 WHERE YEAR = #year#
		   AND EVAL_GUN_ID = #evalGunId#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 평가군관리 정렬순서 일괄 저장
	  #	기능	: UPDATE
	  #	TABLE	: MEM_EVAL_GUN
	==================================================================
	-->	
	<update id="allSaveData" parameterClass="hashMap">
		UPDATE MEM_EVAL_GUN 
		   SET SORT_ORDER             = #sortOrder# 
			 , MODIFY_DT              = SYSDATE 
		 WHERE YEAR = #year#
		   AND EVAL_GUN_ID = #evalGunId#		
	</update>	
	
	<!--
	==================================================================   
	  # 설명	: 평가군관리 삭제
	  #	기능	: UPDATE
	  #	TABLE	: MEM_EVAL_GUN
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		UPDATE MEM_EVAL_GUN 
		   SET DELETE_DT      = SYSDATE 
		 WHERE YEAR = #year#
		   AND EVAL_GUN_ID = #evalGunId#
	</update>
	
	<!--
	==================================================================
	  # 설명	: 사용자정보 조회
	  #	기능	: SELECT
	  #	TABLE	: V_ROLE_USER
	==================================================================
	-->
	<select id="selectUserList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.EMP_NO AS USER_ID
	         , A.EMP_NM AS USER_NM
	         , A.DEPT_CD AS DEPT_ID
	         , F_DEPT_LEV2_NM(A.YEAR, A.DEPT_CD) AS DEPT_NM
	         , A.CAST_TC AS JIKGUB_CD
	         , F_CODE_NM('170', A.CAST_TC , A.YEAR) AS JIKGUB_NM 
	         , A.POS_TC AS POS_CD
			 , F_CODE_NM('171', A.POS_TC , A.YEAR) AS POS_NM 
	         , '' AS EMAIL
		 FROM MEM_USER A
		WHERE 1=1
		  AND A.YEAR = #findYear#
		  AND A.EVAL_TGT_YN = 'Y'
		<isNotEmpty prepend="AND" property="userNm">
             UPPER(A.EMP_NM) LIKE  '%' || TRIM(UPPER(#userNm#)) ||'%'
		</isNotEmpty>
		<isEmpty prepend="AND" property="userNm">
			 A.DEPT_CD = #deptId#
			<!--  A.DEPT_ID = SUBSTR(#deptId#, 2) -->
		</isEmpty>
		AND A.EMP_NO NOT IN (SELECT EMP_NO FROM MEM_EVAL_GUN_USER WHERE YEAR = #findYear#)
		ORDER BY A.EMP_NM
	</select>
	
    <!--
    ==================================================================
      # 설명    : 평가군대상자목록
      #    기능    : SELECT
      #    TABLE    : MEM_EVAL_GUN_USER
    ==================================================================
    -->
    <select id="getEvalGunUserList" parameterClass="hashMap" resultClass="hashMap">
	        SELECT
			      A.YEAR
			    , A.EMP_NO
			    , A.EMP_NM
			    , A.DEPT_CD
			    , F_DEPT_LEV2_NM(A.YEAR, A.DEPT_CD) AS DEPT_KOR_NM
			    , F_CODE_NM('170', A.CAST_TC , A.YEAR) CAST_TC_NM 
			    , F_CODE_NM('171', A.POS_TC , A.YEAR) POS_TC_NM 
			FROM MEM_EVAL_GUN_USER A
			WHERE A.YEAR = #findYear#
			  AND A.EVAL_GUN_ID = #findEvalGunId#
    </select>
    
    <!--
    ==================================================================
      # 설명    : 평가군(평가대상자) 삭제
      #    기능    : UPDATE
      #    TABLE    :
    ==================================================================
    -->
    <update id="deleteEvalGunUserAll" parameterClass="hashMap">
        DELETE FROM MEM_EVAL_GUN_USER
		WHERE YEAR = #findYear#
		<isNotEmpty prepend="AND" property="findEvalGunId">
			EVAL_GUN_ID = #findEvalGunId#
        </isNotEmpty>


    </update>
    
    <!--
    ==================================================================
      # 설명    : 평가군(평가대상자) 등록
      #    기능    : INSERT
      #    TABLE    :
    ==================================================================
    -->
    <insert id="insertEvalGunUserData" parameterClass="hashMap">

	MERGE INTO MEM_EVAL_GUN_USER A
		USING (
			SELECT  A.YEAR
				    , A.EMPN
				    , A.KOR_NM
				    , A.DEPT_CD
				    , A.CAST_TC
				    , A.POS_TC
			FROM BSC_INSA A  
		   WHERE A.YEAR = #findYear# AND A.EMPN = #empNo#
		)B
		ON (A.YEAR = B.YEAR AND  A.EMP_NO = B.EMPN)
	WHEN NOT MATCHED THEN
	INSERT ( YEAR , EMP_NO , EMP_NM , DEPT_CD , CAST_TC , POS_TC , EVAL_GUN_ID , CREATE_DT )
	VALUES ( B.YEAR , B.EMPN , B.KOR_NM , B.DEPT_CD , B.CAST_TC , B.POS_TC , #findEvalGunId# , SYSDATE)
    </insert>
    
	<!--
	==================================================================   
	  # 설명	: 그ㅜㄴ 대상 목록 조회
	  #	기능	: SELECT
	  #	TABLE	: MEM_EVAL_GUN
	==================================================================
	-->
	<select id="getEvalGunTargetList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
             , A.EVAL_GUN_ID
             , A.ORG_GUBUN_IDS
             , A.EVAL_GIVE_METHOD_ID
             , A.CAST_TC
             , A.POS_TC
             , A.YEAR_TC
             , A.YEAR_TC_GUBUN
             , A.APPLY_DT
             , A.ORG_EVAL_RATE
             , A.IND_EVAL_RATE
          FROM MEM_EVAL_GUN A
         WHERE A.YEAR = #year#
           AND A.DELETE_DT IS NULL
         ORDER BY A.EVAL_GUN_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가군 대상자 등록
	  #	기능	: INSERT
	  #	TABLE	: MEM_EVAL_GUN_USER
	==================================================================
	-->
	<insert id="insertEmpList" parameterClass="hashMap">
	    MERGE INTO MEM_EVAL_GUN_USER A
	    	  USING (
					SELECT A.YEAR
			             , A.EMPN AS EMP_NO
			             , A.KOR_NM AS EMP_NM
			             , A.DEPT_CD
			             , F_DEPT_LEV2_NM(A.YEAR, A.DEPT_CD) AS DEPT_NM
			             , A.CAST_TC
			             , A.POS_TC
			          FROM BSC_INSA A
			             , MEM_USER B
			             , BSC_INSA_DEPT C
			         WHERE 1 = 1
			           AND A.YEAR = B.YEAR
			           AND A.EMPN = B.EMP_NO
			           AND A.YEAR = C.YEAR
			           AND A.DEPT_CD = C.DEPT_CD
			           AND B.EVAL_TGT_YN = 'Y'
			           AND A.YEAR = #year#
			           AND B.CAST_TC = #castTc#
			           AND B.DEPT_CD IN (SELECT DEPT_CD FROM MEM_EVAL_GUN_DEPT WHERE YEAR = #year# AND EVAL_GUN_ID = #evalGunId#)
			<isNotEmpty property="posTc">
			           AND B.POS_TC = #posTc#
			</isNotEmpty>
			           AND B.EVAL_TGT_YN = 'Y'
			         <isNotEmpty property="yearTc">
			             <isNotEqual property="yearTcGubun" compareValue="99">
			           		<isEqual property="yearTcGubun" compareValue="02">
			           AND #yearTcMon# <![CDATA[<=]]> (
			           			<isEmpty property="applyDt">
									SELECT ROUND(MONTHS_BETWEEN(SYSDATE, TO_DATE(ORG_PCMT_DATE, 'YYYYMMDD')), 0) WORK_MON
								</isEmpty>
			           			<isNotEmpty property="applyDt">
									SELECT ROUND(MONTHS_BETWEEN(TO_DATE(#applyDt#, 'YYYYMMDD'), TO_DATE(ORG_PCMT_DATE, 'YYYYMMDD')), 0) WORK_MON
								</isNotEmpty>
									  FROM BSC_INSA_PCMT B
									 WHERE B.YEAR = #year#
							   		   AND B.EMPN = A.EMPN
									   AND B.CAST_TC = A.CAST_TC
									   AND B.SER = (
									    SELECT MIN(SER)
									      FROM BSC_INSA_PCMT
									     WHERE EMPN = B.EMPN
									    )
									)
			           		</isEqual>
			           		<isEqual property="yearTcGubun" compareValue="03">
			            AND #yearTcMon# <![CDATA[>]]> (
			           			<isEmpty property="applyDt">
									SELECT ROUND(MONTHS_BETWEEN(SYSDATE, TO_DATE(ORG_PCMT_DATE, 'YYYYMMDD')), 0) WORK_MON
								</isEmpty>
			           			<isNotEmpty property="applyDt">
									SELECT ROUND(MONTHS_BETWEEN(TO_DATE(#applyDt#, 'YYYYMMDD'), TO_DATE(ORG_PCMT_DATE, 'YYYYMMDD')), 0) WORK_MON
								</isNotEmpty>
									  FROM BSC_INSA_PCMT B
									 WHERE B.YEAR = #year#
							           AND B.EMPN = A.EMPN
									   AND B.CAST_TC = A.CAST_TC
									   AND B.SER = (
									    SELECT MIN(SER)
									      FROM BSC_INSA_PCMT
									     WHERE EMPN = B.EMPN
									    )
									)
			           		</isEqual>
			             </isNotEqual>
			         </isNotEmpty>
			         ORDER BY A.EMPN
	    	  ) B
	    	  ON (A.YEAR = B.YEAR AND  A.EMP_NO = B.EMP_NO)
		WHEN NOT MATCHED THEN
		INSERT (
		       YEAR
             , EMP_NO
             , EMP_NM
             , DEPT_CD
             , CAST_TC
             , POS_TC
             , EVAL_GUN_ID
             , CREATE_DT
			 ) VALUES ( 
	           B.YEAR
             , B.EMP_NO
             , B.EMP_NM
             , B.DEPT_CD
             , B.CAST_TC
             , B.POS_TC
             , #evalGunId#
			 , SYSDATE			
			 )

	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 평가군부서관리 삭제
	  #	기능	: INSERT
	  #	TABLE	: MEM_EVAL_GUN_DEPT
	==================================================================
	-->
	<delete id="deleteEvalGunDeptData" parameterClass="hashMap">		
        DELETE FROM MEM_EVAL_GUN_DEPT
		WHERE YEAR = #year#
		  AND EVAL_GUN_ID = #evalGunId#
	</delete>
	
	<!--
	==================================================================   
	  # 설명	: 평가군부서관리 등록
	  #	기능	: INSERT
	  #	TABLE	: MEM_EVAL_GUN_DEPT
	==================================================================
	-->
	<insert id="insertEvalGunDeptData" parameterClass="hashMap">		
		INSERT INTO MEM_EVAL_GUN_DEPT (
		       YEAR
		     , EVAL_GUN_ID
		     , DEPT_CD
		     , CREATE_DT		     
			 ) VALUES ( 
			   #year#
			 , #evalGunId#
			 , #deptCd#
			 , sysdate			
			 )
	</insert>	
</sqlMap>