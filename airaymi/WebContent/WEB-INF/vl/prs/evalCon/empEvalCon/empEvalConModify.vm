#*************************************************************************
* CLASS 명      : empEvalConModify
* 작 업 자      : 김효은 
* 작 업 일      : 2014년 3월 19일 
* 기    능      : 직원개인기여도평가 평가    
* ---------------------------- 변 경 이 력 --------------------------------
* 번호    작 업 자    작     업     일        변 경 내 용                비고
* ----  --------  -----------------  -------------------------  --------
*  1    김효은      2014년 3월 19일             최 초 작 업 
**************************************************************************# 
<script type="text/javascript" language="javascript" >
//<![CDATA[

	var J = jQuery;
	
	J(document).ready(function(){
    
		/******************************************
		 * 데이터 그리드 출력
		 ******************************************/
		var str = J('#formFind').serialize();
		
		#set ($index = 1)
		
		jQuery("#list").jqGrid({
			url          :"$!{context_path}/prs/evalCon/empEvalCon/empEvalConModify_xml.vw" + "?" + str,
			mtype        :"POST",
			datatype     :"json",
			jsonReader   : {   
    						page   : "page",
    						total  : "total",
    						root   : "rows", 
    						records: function(obj) {return obj.length;},
    						repeatitems: false, 
    						id     : "id"
    				       },
			##height       : $!{jqGrid_height},
			height       : 250,
			width        : $!{jqGrid_width},
			colNames     :['평가년도', '평가군코드', '사번', '이름', '부서코드', '업무성과기술서', '평가자'
				
				#foreach($evalItem in $evalItemList)
						, '$!CS_HTML.txt2html($evalItem.EVAL_ITEM_NM) ($!CS_HTML.txt2html($evalItem.WEIGHT))'
				#end
							, '총점', '순위','평가여부', '평가여부', '평가저장및완료', '가중치합계'],
			colModel     :[
							{name:'YEAR'				,index:'YEAR'				,width:150		,align:'center' }, 
							{name:'EVAL_GRP_ID'			,index:'EVAL_GRP_ID'		,width:150		,align:'center' },
                            {name:'EMPN'				,index:'EMPN'				,width:50		,align:'center'	}, 
                            {name:'KOR_NM'				,index:'KOR_NM'				,width:50		,align:'center'	},
							{name:'DEPT_CD'				,index:'DEPT_CD'			,width:80		,align:'center'	},
							{name:'RPT_YN'				,index:'RPT_YN'			    ,width:80		,align:'center'	,formatter:linkRptBtn},
							{name:'ASSESSOR_EMPN'		,index:'ASSESSOR_EMPN'		,width:80		,align:'center'	},

					#foreach($evalItem in $evalItemList)
						#if($evalItem.EVAL_GBN  == '01')
							{name:'$!CS_HTML.txt2html($evalItem.EVAL_ITEM_ID)'  , index:'$!CS_HTML.txt2html($evalItem.EVAL_ITEM_ID)', width:150, align:'center', formatter:linkEvalGrade	},
						#else
							{name:'$!CS_HTML.txt2html($evalItem.EVAL_ITEM_SCORE)'  , index:'$!CS_HTML.txt2html($evalItem.EVAL_ITEM_SCORE)', width:150, align:'center'	},
						#end
					#end
							{name:'SCORE'				,index:'SCORE'				,width:70 		,align:'center' },
							{name:'RANK'				,index:'RANK'				,width:40 		,align:'center' },
							{name:'EVAL_SUBMIT_YN'		,index:'EVAL_SUBMIT_YN'		,width:80 		,align:'center' },
							{name:'EVAL_SUBMIT_NM'		,index:'EVAL_SUBMIT_NM'		,width:80 		,align:'center' },
							{name:'BUTTONS'				,index:'BUTTONS'			,width:110 		,align:'center',	formatter:linkEvalButton },
							{name:'SCORE_ETC'			,index:'SCORE_ETC'			,width:80 		,align:'center' }
							],
			rowNum       : $!{jqGrid_rownum},
			autowidth    : false, 
			viewrecords  : true,
			loadonce     : true,
			cmTemplate	 : {sortable:false},
			multiselect  : false,
			cellEdit     : false,
			gridview     : true,
			##datatype	 : 'local',
			loadComplete : function() {
								rank();
								
								var ids = J("#list").jqGrid('getDataIDs');
								for (var i = 0; i < ids.length; i++) {
									var row = J("#list").getRowData(ids[i]);
									var checkedValue = J("input:radio[name=findEndYn]:checked").val();
									
									if (J("#findKorNm").val() == "" && checkedValue == "") {
										J("#" + ids[i]).show();
									} else if (J("#findKorNm").val() != "" && checkedValue == "") {
										if (row.KOR_NM.indexOf(J("#findKorNm").val()) < 0) 
											J("#" + ids[i]).hide();
										else 
											J("#" + ids[i]).show();
									} else if (J("#findKorNm").val() != "" && checkedValue == "") {
										if (row.EVAL_SUBMIT_YN == checkedValue)
											J("#" + ids[i]).show();
										else
											J("#" + ids[i]).hide();
									} else {
										if (row.KOR_NM.indexOf(J("#findKorNm").val()) >= 0 && row.EVAL_SUBMIT_YN == checkedValue)
											J("#" + ids[i]).show();
										else 
											J("#" + ids[i]).hide();
									}
								}
							},
			caption:"직원개인업적평가"
		}).jqGrid('hideCol',"YEAR").jqGrid('hideCol',"EVAL_GRP_ID").jqGrid('hideCol',"DEPT_CD").jqGrid('hideCol',"EVAL_SUBMIT_YN")
		  .jqGrid('hideCol',"ASSESSOR_EMPN").jqGrid('hideCol',"SCORE_ETC").setGridWidth($!{jqGrid_width});
		
		//***********************************
		// 등급배분표 그리드
		//***********************************
		
		var str = J('#formFind').serialize();
		
		jQuery("#gradeDistri").jqGrid({
			url          :"$!{context_path}/prs/evalCon/empEvalCon/empEvalConGradeItemList_xml.vw" + "?" + str,
			mtype        :"POST",
			datatype     :"json",
			jsonReader   : {   
    						page   : "page",
    						total  : "total",
    						root   : "rows", 
    						records: function(obj) {return obj.length;},
    						repeatitems: false, 
    						id     : "id"
    				       },
			height       : 115,
			width        : $!{jqGrid_width},
			colNames     :['평가항목ID', '평가항목명', '설명'
				#foreach($empEvalConGrade in $empEvalConGrade)
							, '$!CS_HTML.txt2html($empEvalConGrade.GRADE_ITEM_NM) ($!CS_HTML.txt2html($empEvalConGrade.ITEM_DISTRI_CNT)명)'
				#end
							, '배점'],
			colModel     :[
							{name:'EVAL_ITEM_ID'		,index:'EVAL_ITEM_ID'		,width:100		,align:'center'	},
                            {name:'EVAL_ITEM_NM'		,index:'EVAL_ITEM_NM'		,width:100		,align:'left'	},
                            {name:'CONTENT'				,index:'CONTENT'			,width:450		,align:'left'	}

				#foreach($empEvalConGrade in $empEvalConGrade)
						,	{name:'$!CS_HTML.txt2html($empEvalConGrade.GRADE_ITEM_ID)', index:'$!CS_HTML.txt2html($empEvalConGrade.GRADE_ITEM_ID)', width:100, align:'center'	}
				#end
							, {name:'SCORE'		,index:'SCORE'		,width:100		,align:'left'	}
							],
			rowNum       : $!{jqGrid_rownum},
			autowidth    : false, 
			viewrecords  : true,
			loadonce     : true,
			cmTemplate	 : {sortable:false},
			multiselect  : false,
			cellEdit     : false,
			gridview     : true,
			caption:"등급배분표"
		}).jqGrid('hideCol',"EVAL_ITEM_ID").jqGrid('hideCol',"SCORE").setGridWidth($!{jqGrid_width});
		
		/******************************************
		 * 조회
		 ******************************************/
		J("#formFind").submit(function(event) {
			//submit 하기전 작업추가
		});
		
		/******************************************
		 * 취소버튼 (돌아가기)
		 ******************************************/
		J("#btnBack").click(function() {
			J("#formFind").attr("action", "$!{context_path}/prs/evalCon/empEvalCon/empEvalConList.vw?type=template").submit();
		});
		
		if ("${evalSubmitYn}" == "Y") {
			J("#btnSubmitEval").attr("value", "취소");
			/******************************************
    		 * 제출버튼 이벤트
    		 ******************************************/
    		J("#btnSubmitEval").click(function() {
    			cancelSubmit();
    		});
		} else {
			J("#btnSubmitEval").attr("value", "일괄평가완료");
			
			/******************************************
    		 * 제출버튼 이벤트
    		 ******************************************/
    		J("#btnSubmitEval").click(function() {
    			saveChk(true);
    		});
		}
			/******************************************
    		 * 제출버튼 이벤트
    		 ******************************************/
    		J("#btnSaveEval").click(function() {
			J.showConfirmBox("일괄 저장하시겠습니까?", "saveTotal");
			return false;
    		});
		
		// 평가기간 보여주기
		if( "T" == "$!{evalSchedule.EVAL_YN}" ){
			var startDt = "$!{CS_FORMAT.dateFormat( $!{evalSchedule.EMP_START_DT} )}";
			var endDt = "$!{CS_FORMAT.dateFormat( $!{evalSchedule.EMP_END_DT} )}";
			var str = "";
			if( startDt.length > 0 && endDt.length > 0 ){
				str += "※  직원개인기여도평가 기간 : " + startDt + " ~ " + endDt;
			}
			J("#alertDis").html(str);
			J("#btnSubmitEval").show();
			J("#btnSaveEval").show();
		} else {
			J("#alertDis").html("※  직원개인기여도평가 기간이 아닙니다." ).attr("class","txt_red");
			J("#btnSubmitEval").hide();
			J("#btnSaveEval").hide();
		}
		
		/******************************************
         * fancybox
         ******************************************/
        J("#anchor").fancybox();      //상세팝업
	});
	
	/******************************************
     * 필수입력 체크(임시저장)
     ******************************************/
	function saveTotal(){
		var ids	= J("#list").jqGrid('getDataIDs');
    	
    	if("${evalConSubmitYn}" == "Y") {
			alert("기여도 평가가 제출되어 수정 할 수 없습니다. 기여도평가 제출을 취소하여 주십시오.");	
			saveChk = false;
    		return false;
		}
		
		J("#mode").val("SAVETEMP");
		
    	for (var i = 0; i < ids.length; i++) {
			saveEval("SAVE", ids[i]);
			
			// 선택된 row의 data		
			var ret = J("#list").jqGrid('getRowData', ids[i]);
			
			// 셀렉트 박스
			//var selbox = J("#formList select[name*='evalGrade" + ret.EMPN + "']");
			var year = J("#year").val();
			var evalGrpId = J("#evalGrpId").val();
			var assessorEmpn = J("#assessorEmpn").val();
			var score = ret.SCORE;
			var rank = ret.RANK;
			var deptCd = "$!{searchMap.txt2html("deptCd")}";
			var stMode = "SAVETEMP";
			
			// ajax에 넘겨줄 파라미터
			var data = "";
			data = "stMode=" + stMode + "&amp;year=" + year + "&amp;evalGrpId=" + evalGrpId + "&amp;deptCd=" + deptCd + "&amp;assessorEmpn=" + assessorEmpn + "&amp;empn=" + ret.EMPN + "&amp;score=" + score + "&amp;rank=" + rank + "&amp;";
			
			J("#formList").attr("action", "$!{context_path}/prs/evalCon/empEvalCon/empEvalConProcess.vw?" + data + "&amp;type=template").submit();
			
		}
                
        return false;
	
	}
	
	/******************************************
	 * jqGrid 업무성과기술서 버튼 추가
	 ******************************************/
	function linkRptBtn(cellvalue, options, rowObject) {
        var deptCd = rowObject.DEPT_CD;
        var str = '';
        
        if(cellvalue == 'Y'){
			str = '<input type="button" id="btnShowRpt" value="조회" onclick="showRpt(\'' + rowObject.YEAR + '\', \'' + rowObject.EMPN +'\', \'' + deptCd +'\')"/>&nbsp;';        
        }
		
		return str;
    }
    
    /******************************************
	 * jqGrid 업무성과기술서 팝업
	 ******************************************/
    function showRpt(year, evalMembEmpn, deptCd) {
		J("#anchor").attr("href","$!{context_path}/prs/evalCon/empEvalCon/empEvalConRpt.vw?findYear="+year+ "&amp;evalMembEmpn="+evalMembEmpn+"&amp;deptCd="+deptCd);
        J("#anchor").click();
        return false;
	}
	
	
	/******************************************
     * 필수입력 체크
	 * 평가가 모두 마무리 되었는지 체크
     ******************************************/
    function saveChk() {
    
    	if("${evalConSubmitYn}" == "Y") {
			alert("기여도 평가가 제출되어 수정 할 수 없습니다. 기여도평가 제출을 취소하여 주십시오.");		
			saveChk = false;
    		return false;
		}
		
		var ids	= J("#list").jqGrid('getDataIDs');
		
		for (var i = 0; i < ids.length; i++) {
			var row = J("#list").jqGrid("getRowData", ids[i]);
			
			//var selbox = J("#formList select[name*='evalGrade" + row.EMPN + "']");
			var selbox = J("#formList select[name*='empEvalConGrade" + row.EMPN + "']");
			for (var j = 0; j < selbox.length; j++) {
    			if (selbox[j].options[selbox[j].selectedIndex].value == "-1") {
    				alert("평가가 완료되지 않아 평가를 제출할 수 없습니다.");
    				selbox[j].focus();
    				return;
    			}
    		}
		}
		
		//J.showConfirmBox("평가저장 후 평가결과메뉴에서 <br/>기여도평가를 하신 후 결과를 제출하시길 바랍니다.<br/>저장하시겠습니까?", "saveDo"); //saveDo() 콜백함수 호출
		J.showConfirmBox("일괄평가완료 전에 꼭 일괄평가저장을 <br/>한번 해주시기 바랍니다.<br/>평가완료 후 평가결과메뉴에서 <br/>기여도평가를 하신 후 결과를 제출하시길 바랍니다.<br/>완료하시겠습니까?", "saveDo"); //saveDo() 콜백함수 호출
    }
	
	/******************************************
     * 평가제출
	 * 전체 평가대상자에 대해서 평가완료로 저장을 하고
	 * 평가제출여부 컬럼을 업데이트 한다.
     ******************************************/
    function saveDo() {	
    	var ids	= J("#list").jqGrid('getDataIDs');
    	
		J("#mode").val("SUBMIT");
		var stMode = "SUBMIT";
		
		var year = J("#year").val();
		var evalGrpId = J("#evalGrpId").val();
		var assessorEmpn = J("#assessorEmpn").val();
		var deptCd = "$!{searchMap.txt2html("deptCd")}";
		
		var rowdata = "";
		var scores = "";
        var ranks = "";
        var empns = "";
        
		/*
    	for (var i = 0; i < ids.length; i++) {
			saveEval("SUBMIT", ids[i]);
			
			// 선택된 row의 data		
			var ret = J("#list").jqGrid('getRowData', ids[i]);
			
			// 셀렉트 박스
			//var selbox = J("#formList select[name*='evalGrade" + ret.EMPN + "']");
			var year = J("#year").val();
			var evalGrpId = J("#evalGrpId").val();
			var assessorEmpn = J("#assessorEmpn").val();
			var score = ret.SCORE;
			var rank = ret.RANK;
			var deptCd = "$!{searchMap.txt2html("deptCd")}";
			var stMode = "SUBMIT";
			
			// ajax에 넘겨줄 파라미터
			var data = "";
			data = "stMode=" + stMode + "&amp;year=" + year + "&amp;evalGrpId=" + evalGrpId + "&amp;deptCd=" + deptCd + "&amp;assessorEmpn=" + assessorEmpn + "&amp;empn=" + ret.EMPN + "&amp;score=" + score + "&amp;rank=" + rank + "&amp;";
			
			J("#formList").attr("action", "$!{context_path}/prs/evalCon/empEvalCon/empEvalConProcess.vw?" + data + "&amp;type=template").submit();
			
		}
		*/
		
		for (var i = 0; i < ids.length; i++) {
			//saveEval("SUBMIT", ids[i]);
			rowdata = J("#list").getRowData(ids[i]);
			scores += rowdata.SCORE + '|';
			ranks += rowdata.RANK + '|';
			empns += rowdata.EMPN + '|';
		}
		
		J("#scores").val(scores);
		J("#ranks").val(ranks);
		J("#empns").val(empns);
		
		data = "stMode=" + stMode + "&amp;year=" + year + "&amp;evalGrpId=" + evalGrpId + "&amp;deptCd=" + deptCd + "&amp;assessorEmpn=" + assessorEmpn + "&amp;empns=" + empns + "&amp;scores=" + scores + "&amp;ranks=" + ranks + "&amp;";
			
        J("#formList").attr("action", "$!{context_path}/prs/evalCon/empEvalCon/empEvalConProcess.vw?" + data + "&amp;type=template").submit();
        return false;
    }
	
	/******************************************
	 * 평가제출취소
	 ******************************************/
	function cancelSubmit() {
		document.charset='utf-8';
		
		if("${evalConSubmitYn}" == "Y") {
			alert("기여도 평가가 제출되어 수정 할 수 없습니다. 기여도평가 제출을 취소하여 주십시오.");		
			saveChk = false;
    		return false;
		}
		
		if("${empSubmitYn}" == "Y") {
			alert("평가가 확정되어 평가결과를 취소하실수 없습니다.");		
		} else {
		
			J.showConfirmBox("제출된 평가결과를 취소하시겠습니까?", "cancelDo"); //cancelDo() 콜백함수 호출
		}
	}

	/******************************************
	 * 제출취소
	 ******************************************/
	function cancelDo() {
		var ids	= J("#list").jqGrid('getDataIDs');
		J("#mode").val("CANCEL");
		for (var i = 0; i < ids.length; i++) {
			// 선택된 row의 data		
			var ret = J("#list").jqGrid('getRowData', ids[i]);
			
			// 셀렉트 박스
			//var selbox = J("#formList select[name*='evalGrade" + ret.EMPN + "']");
			var year = J("#year").val();
			var evalGrpId = J("#evalGrpId").val();
			var assessorEmpn = J("#assessorEmpn").val();
			var score = ret.SCORE;
			var rank = ret.RANK;
			var deptCd = "$!{searchMap.txt2html("deptCd")}";
			var stMode = "CANCEL";
			
			// ajax에 넘겨줄 파라미터
			var data = "";
			data = "stMode=" + stMode + "&amp;year=" + year + "&amp;evalGrpId=" + evalGrpId + "&amp;deptCd=" + deptCd + "&amp;assessorEmpn=" + assessorEmpn + "&amp;empn=" + ret.EMPN + "&amp;score=" + score + "&amp;rank=" + rank + "&amp;";
			
			J("#formList").attr("action", "$!{context_path}/prs/evalCon/empEvalCon/empEvalConProcess.vw?" + data + "&amp;type=template").submit();
			
		
		}
		
		return false;
	}

	/******************************************
	 * jqGrid 평가항목별 평가등급
	 ******************************************/
	function linkEvalGrade(cellvalue, options, rowObject) {

		var item = [];
		item = cellvalue.split(",");
		
		var str = "";
		str += "<select id=\"empEvalConGrade" + rowObject.EMPN + "_" + item[1] + "\" name=\"empEvalConGrade" + rowObject.EMPN + "\" class=\"select w80\" onchange=\"changeGrade(this);\" onclick=\"clickGrade(this);\" ";
		
		if (rowObject.EVAL_SUBMIT_YN == "Y")
			str += "disabled=\"true\"";
			
		str += ">";
		
		str += "<option value=\"-1\">선택</option>";
		
		#foreach($empEvalConGrade in $empEvalConGrade)
			str += "<option value=\"$!{CS_HTML.txt2html($empEvalConGrade.GRADE_ITEM_ID)}\">$!{CS_HTML.txt2html($empEvalConGrade.GRADE_ITEM_NM)}</option>".replace("\"" + item[0] + "\"", "\"" + item[0] + "\" selected");
		#end
		str += "</select>"
		return str;
	}
	
	function clickGrade(grade) {
		J("#prevSelectedGrade").val(grade.options[grade.selectedIndex].value);
	}
	
	/******************************************
	 * 평가항목별 평가등급 change 이벤트 처리
	 * 평가항목별로 등급을 지정한대로 등급배분표에 적용
	 * 등급배분표에 따라 설정된 인원이상 등급을 지정할 수 없음
	 ******************************************/
	function changeGrade(grade) {
		var ids = J("#gradeDistri").jqGrid('getDataIDs');
		var id = "#" + grade.options[grade.selectedIndex].value;
		
		for (var i = 0; i < ids.length; i++) {
			
			var row = J("#gradeDistri").getRowData(ids[i]);
			
			if (row.EVAL_ITEM_ID == grade.id.split("_")[1]) {
				var cnt = 0;
				var distriCnt = 0;
				
				// 평가등급을 선택했으면
				if ("-1" != grade.options[grade.selectedIndex].value) {
				
					if (row[grade.options[grade.selectedIndex].value] != undefined && row[grade.options[grade.selectedIndex].value] != "")
    					cnt = parseInt(row[grade.options[grade.selectedIndex].value]);
    				
    				if (J(id).val() != undefined && J(id).val() != "")
    					distriCnt = parseInt(J(id).val());
					
					if (cnt + 1 > distriCnt) {
    					alert(row.EVAL_ITEM_NM + "의 " + grade.options[grade.selectedIndex].text + " 인원수(" + distriCnt + "명)가 이미 찼습니다.");
    					grade.value = J("#prevSelectedGrade").val();
    					return;
    				}
					
					if (row[grade.options[grade.selectedIndex].value] != undefined && row[grade.options[grade.selectedIndex].value] != "")
    					cnt = parseInt(row[grade.options[grade.selectedIndex].value]);
    				
    				if (J(id).val() != undefined && J(id).val() != "")
    					distriCnt = parseInt(J(id).val());
					
    				J("#gradeDistri").jqGrid('setCell', ids[i], grade.options[grade.selectedIndex].value, cnt + 1);
    				row[grade.options[grade.selectedIndex].value] = cnt + 1;
				}
				
				if (row[J("#prevSelectedGrade").val()] != undefined && row[J("#prevSelectedGrade").val()] != "")
					cnt = parseInt(row[J("#prevSelectedGrade").val()]);
					
    			if (cnt > 0) 
					cnt--;
					
				J("#gradeDistri").jqGrid('setCell', ids[i], J("#prevSelectedGrade").val(), cnt);
				row[J("#prevSelectedGrade").val()] = cnt;
				
				// 환산점수 계산
				calcScore(grade.id);
				rank();
		
				return;
			}
		}
	}
	
	/******************************************
	 * 순위 계산
	 ******************************************/
	function rank() { 
		var ids = J("#list").jqGrid('getDataIDs');
		var scores = new Array(ids.length);
		var ranks = new Array(ids.length);
		var grades = new Array(ids.length);
		
		#set ($gradeS = 0)
		#set ($gradeA = 0)
		#set ($gradeB = 0)
		#set ($gradeC = 0)
		#set ($gradeD = 0)
		
		#foreach($empEvalConGrade in $empEvalConGrade)
			#if ($empEvalConGrade.GRADE_ITEM_NM == "S") 	#set ($gradeS = $gradeS + $empEvalConGrade.ITEM_DISTRI_CNT) #end
			#if ($empEvalConGrade.GRADE_ITEM_NM == "A") 	#set ($gradeA = $gradeA + $empEvalConGrade.ITEM_DISTRI_CNT) #end
			#if ($empEvalConGrade.GRADE_ITEM_NM == "B") 	#set ($gradeB = $gradeB + $empEvalConGrade.ITEM_DISTRI_CNT) #end
			#if ($empEvalConGrade.GRADE_ITEM_NM == "C") 	#set ($gradeC = $gradeC + $empEvalConGrade.ITEM_DISTRI_CNT) #end
			#if ($empEvalConGrade.GRADE_ITEM_NM == "D") 	#set ($gradeD = $gradeD + $empEvalConGrade.ITEM_DISTRI_CNT) #end
		#end

		for (var i = 0; i < ids.length; i++) {
			var row = J("#list").getRowData(ids[i]);
			var score = 0;
			
			if (getStr(row.SCORE) != "")
				score += parseFloat(row.SCORE);
				
			if (getStr(row.BSC_SCORE) != "")
				score += parseFloat(row.BSC_SCORE);
				
			if (getStr(row.ORG_SCORE) != "")
				score += parseFloat(row.ORG_SCORE);
			
			score = score.toFixed(2); 
				
			J("#list").jqGrid('setCell', ids[i], "SCORE", score);
			row.SCORE = score;
			
			scores[i] = score;
		}
		
		// 순위를 계산
		for (var i = 0; i < scores.length; i++) {
			var ranking = 0;

			if (scores[i] != "" && scores[i] != "0") {
    			for (var j = 0; j < scores.length; j++) {
    				if (i != j) {
    					if (scores[j] == "") {
							if (ranking == 0)
						 		ranking = 1;
						} else {
							if (parseFloat(scores[i]) < parseFloat(scores[j])) {
								if (ranking == 0)
									ranking = 2;
								else
									ranking++;
							} else if (parseFloat(scores[i]) > parseFloat(scores[j])) {
								if (ranking == 0)
									ranking = 1;
							} else {
								if (ranking == 0)
									ranking = 1;
							}
						}
    				}
    			}
			}

			ranks[i] = ranking;
		}
		
		for (var i = 0; i < ids.length; i++) {
			var row = J("#list").getRowData(ids[i]);
			var ranking = "";
			
			if(ranks[i] == 0 ) {
				ranking = 1;
				J("#list").jqGrid('setCell', ids[i], "RANK", ranking);
				row.RANK = ranking;
			}
			
			if (ranks[i] > 0) {
			
				ranking = ranks[i];
			}	
			
			J("#list").jqGrid('setCell', ids[i], "RANK", ranking);
			row.RANK = ranking;
			
			if (ranking != " ") {
				if (ranking <= ${CS_HTML.txt2html($gradeS)}) {
    				J("#list").jqGrid('setCell', ids[i], "GRADE", "S");
    				row.GRADE = "S";
				} else if (ranking <= ${CS_HTML.txt2html($gradeS)} + ${CS_HTML.txt2html($gradeA)}) {
    				J("#list").jqGrid('setCell', ids[i], "GRADE", "A");
    				row.GRADE = "A";
				} else if (ranking <= ${CS_HTML.txt2html($gradeS)} + ${CS_HTML.txt2html($gradeA)} + ${CS_HTML.txt2html($gradeB)}) {
    				J("#list").jqGrid('setCell', ids[i], "GRADE", "B");
    				row.GRADE = "B";
				} else if (ranking <= ${CS_HTML.txt2html($gradeS)} + ${CS_HTML.txt2html($gradeA)} + ${CS_HTML.txt2html($gradeB)} + ${CS_HTML.txt2html($gradeC)}) {
    				J("#list").jqGrid('setCell', ids[i], "GRADE", "C");
    				row.GRADE = "C";
				} else if (ranking <= ${CS_HTML.txt2html($gradeS)} + ${CS_HTML.txt2html($gradeA)} + ${CS_HTML.txt2html($gradeB)} + ${CS_HTML.txt2html($gradeC)} + ${CS_HTML.txt2html($gradeD)}) {
    				J("#list").jqGrid('setCell', ids[i], "GRADE", "D");
    				row.GRADE = "D";
				}
			} else {
				J("#list").jqGrid('setCell', ids[i], "GRADE", " ");
				row.GRADE = " ";
			}
		}
	}
	
	function getStr(str) {
		var retVal = "";
		
		if (str != undefined) 
			retVal = str;
		
		return retVal;
	}
	
	/******************************************
	 * 환산점수 컬럼 계산
	 ******************************************/
	function calcScore(id) {
		var empn = id.split("_")[0].replace("empEvalConGrade", "");
		var ids = J("#list").jqGrid('getDataIDs');
		
		for (var i = 0; i < ids.length; i++) {
			var row = J("#list").getRowData(ids[i]);
			
			if (row.EMPN == empn) {
				var score = 0;
				
				//업무특성 점수 계산
				score = getScore(row.EMPN);
				
				//업무성과 점수 계산
				//score = score + (row.SCORE_ETC * 0.8);

				score = score + Number(row.SCORE_ETC);
				
				score = score.toFixed(2);
				J("#list").jqGrid('setCell', ids[i], "SCORE", score);
				
				row["SCORE"] = score;
				
				return score;
			}
		}
		
		return 0;
	}
	
	function getScore(empn) {
		var selbox = J("#formList select[name*='empEvalConGrade" + empn + "']");
		var score = 0;
		
		for (var j = 0; j < selbox.length; j++) {
			var id = "#rate" + selbox[j].options[selbox[j].selectedIndex].value;
			var rate = 0;	// 등급별 점수 반영 비율
			var itemScore = 0;
			
			if (J(id).val() != "" && J(id).val() != undefined) 
				itemScore = parseInt(J(id).val());
			
			if (selbox[j].options[selbox[j].selectedIndex].value == "-1") {
				score += 0;
			} else {
				rate = getItemScore(selbox[j].id.split("_")[1]);
				score += (itemScore * rate);
			}
		}
		
		//score = Math.floor(score * 10) / 10;
		
		score = score  / 100;
		
		return score;
	}
	
	function getItemScore(itemId) {
		var ids = J("#gradeDistri").jqGrid('getDataIDs');
		var score = 0;
		
		for (var i = 0; i < ids.length; i++) {
			var row = J("#gradeDistri").getRowData(ids[i]);
			
			if (row.EVAL_ITEM_ID == itemId) {
				if (row.SCORE != undefined && row.SCORE != "")
					score = parseInt(row.SCORE);
				
				return score;
			}
		}
		
		return score;
	}
	
	function numberOnly(e) {
		if ((e.keyCode != 46) && (e.keyCode < 48 || e.keyCode > 57)) 
			return false;
	}
	
	/******************************************
	 * jqGrid 평가상태
	 ******************************************/
	function linkEvalStatus(cellvalue, options, rowObject) {
		var status = "";
		
		if (rowObject.EVAL_SUBMIT_YN == "Y") {
			status = "평가완료";
		} else {
			status = "평가진행중";
		}
		
		return status;
	}
	
	/******************************************
     * 평가저장
     ******************************************/
    function saveData() {	
		var ids	= J("#list").jqGrid('getDataIDs');
		
		for (var i = 0; i < ids.length; i++) {
			var row = J("#list").jqGrid("getRowData", ids[i]);
			
			if (row.EVAL_SUBMIT_YN != "Y")			
				saveEval("SAVE", ids[i]);
		}
                
        return false;
    }
	
	/******************************************
     * 평가완료
     ******************************************/
	function submitData(rowId) {	
		var ids	= J("#list").jqGrid('getDataIDs');
		
		for (var i = 0; i < ids.length; i++) {
			var row = J("#list").jqGrid("getRowData", ids[i]);
			
			if (row.EVAL_SUBMIT_YN != "Y") {
				if (ids[i] != rowId) {
					saveEval("SAVE", ids[i]);
				} else {
					saveEval("SUBMIT", ids[i]);
				}
			}
		}
                
        return false;
    }
	
	/******************************************
	 * jqGrid 평가저장 및 평가완료 버튼
	 ******************************************/
	function linkEvalButton(cellvalue, options, rowObject) {
		var str = "";
		
		str += "<div id=\"div" + rowObject.EMPN + "\">";
		if (rowObject.EVAL_SUBMIT_YN == "Y") {
			##str += '<input type="button" id="btnSave" name="btnSave" value="저장" disabled="true" onclick="javascript:saveEval(\'SAVE\', \'' + options.rowId + '\'); return false;" />';
			str += '<input type="button" id="btnSave" name="btnSave" value="저장" disabled="true" onclick="javascript:saveData(); return false;" />';
			
			str += '<input type="button" id="btnCancel" name="btnCancel" value="완료취소" #if (${evalSubmitYn} == "Y") disabled="true" #end onclick="javascript:saveEval(\'CANCEL\', \'' + options.rowId + '\'); return false;" />';
		} else {
			##str += '<input type="button" id="btnSave" name="btnSave" value="저장" onclick="javascript:saveEval(\'SAVE\', \'' + options.rowId + '\'); return false;" />';
			##str += '<input type="button" id="btnSubmit" name="btnSubmit" value="평가완료" onclick="javascript:saveEval(\'SUBMIT\', \'' + options.rowId + '\'); return false;" />';
			str += '<input type="button" id="btnSave" name="btnSave" value="저장" onclick="javascript:saveData(); return false;" />';
			str += '<input type="button" id="btnSubmit" name="btnSubmit" value="평가완료" onclick="javascript:submitData(\'' + options.rowId + '\'); return false;" />';
		}
		str += "</div>";

		return str;
	}
	
	/******************************************
	 * 평가저장
	 ******************************************/
	function saveEval(mode, rowId) {
	
		// 선택된 row의 data		
		var ret = J("#list").jqGrid('getRowData', rowId);
		
		// 그리드의 컬럼객체
		var cols = J("#list").jqGrid('getGridParam', 'colModel');
		
		//컬럼 배열
		var colArr = [];
		
		// 컬럼객체에서 평가항목의 등급만 배열에 넣는다.
		for (var i = 0; i < cols.length; i++) {
			if (cols[i].name.indexOf("EC") == 0) {
				colArr.push(cols[i].name);
			}
		}
		
		// 셀렉트 박스
		//var selbox = J("#formList select[name*='evalGrade" + ret.EMPN + "']");
		var selbox = J("#formList select[name*='empEvalConGrade" + ret.EMPN + "']");
		var year = J("#year").val();
		var evalGrpId = J("#evalGrpId").val();
		var assessorEmpn = J("#assessorEmpn").val();
		var assessorDegree = J("#assessorDegree").val();
		var score = ret.SCORE;
		var rank = ret.RANK;
		
		// ajax에 넘겨줄 파라미터
		var data = "";
		
		data = "mode=" + mode + "&amp;year=" + year + "&amp;evalGrpId=" + evalGrpId + "&amp;assessorEmpn=" + assessorEmpn + "&amp;empn=" + ret.EMPN + "&amp;score=" + score + "&amp;rank=" + rank + "&amp;evalGradeIds=" + colArr.join(",") + "&amp;evalGradeValues=";
		for (var i = 0; i < selbox.length; i++) {
			if (selbox[i].options[selbox[i].selectedIndex].value == "-1" && mode == "SUBMIT") {
				alert("평가항목을 모두 평가해 주십시요.");
				selbox[i].focus();
				return;
			}
			
			data += selbox[i].options[selbox[i].selectedIndex].value;
			
			if (i < selbox.length - 1)
				data += ",";
		}
		J.ajax({
        	url      : "$!{context_path}/prs/evalCon/empEvalCon/saveEval_ajax.vw",
        	type     : "GET", 
			data     : data, 
        	dataType : "xml",
			contentType : "application/xml",
        	success  : function (xml) {
				var mode = J(xml).find("data").find("mode").text();
				// 작업 실패
				if (J(xml).find("data").find("success").text() == "FAIL") {
					alert("저장중 오류가 발생했습니다. 관리자에게 문의해 주십시요.");
					return;
				}
				
				var divId = "#div" + ret.EMPN;
				
				if (mode == "SAVE") {	// 저장
				} else if (mode == "SUBMIT") {	// 평가완료
					var $div = J(divId)
					
					// 저장 버튼 diable
					var $btnSave = $div.find("input[name='btnSave']");
					if ($btnSave.length > 0) {
						$btnSave.eq(0).attr("disabled", true);
					}
					
					// 평가완료 버튼 삭제
					var $btnSubmit = $div.find("input[name='btnSubmit']");
					if ($btnSubmit.length > 0) {
						$btnSubmit.eq(0).remove();
					}
					
					// 완료취소 버튼 추가
					var str = '<input type="button" id="btnCancel" name="btnCancel" value="완료취소" onclick="javascript:saveEval(\'CANCEL\', \'' + rowId + '\'); return false;" />';
					$div.append(str);
					
					// 평가항목 selectbox 비활성화
					for (var i = 0; i < selbox.length; i++) {
            			selbox[i].disabled = true;
            		}

					J("#list").jqGrid('setCell', rowId, "EVAL_SUBMIT_NM", "평가완료");
					ret.EVAL_SUBMIT_NM = "평가완료";
					J("#list").jqGrid('setCell', rowId, "EVAL_SUBMIT_YN", "Y");
					ret.EVAL_SUBMIT_YN = "Y";
					
				} else if (mode == "CANCEL") {	// 평가완료취소
					var $div = J(divId)
					
					// 저장 버튼 enable
					var $btnSave = $div.find("input[name='btnSave']");
					if ($btnSave.length > 0) {
						$btnSave.eq(0).attr("disabled", false);
					}
					
					// 완료취소 버튼 삭제
					var $btnCancel = $div.find("input[name='btnCancel']");
					if ($btnCancel.length > 0) {
						$btnCancel.eq(0).remove();
					}
					
					// 평가완료 버튼 추가
					var str = '<input type="button" id="btnSubmit" name="btnSubmit" value="평가완료" onclick="javascript:saveEval(\'SUBMIT\', \'' + rowId + '\'); return false;" />';
					$div.append(str);
					
					// 평가항목 selectbox 비활성화
					for (var i = 0; i < selbox.length; i++) {
            			selbox[i].disabled = false;
            		}
					
					J("#list").jqGrid('setCell', rowId, "EVAL_SUBMIT_NM", "평가진행중");
					ret.EVAL_SUBMIT_NM = "평가진행중";
					J("#list").jqGrid('setCell', rowId, "EVAL_SUBMIT_YN", "N");
					ret.EVAL_SUBMIT_YN = "N";	
				}
        	},  
			error : function(xhr, status, error) {
				alert(error);
			}
    	});
	}
	
//]]>
</script>    
 
<div id="Table">
	<div id="Table_blockContainer">
		<h1 class="none">간부개인업적평가</h1>
		<div class="tableTop">
			#parse("/WEB-INF/vl/common/template/tabs.vm")
			
			#foreach($empEvalConGrade in $empEvalConGrade)
				<input type="hidden" id="$!CS_HTML.txt2html($empEvalConGrade.GRADE_ITEM_ID)" name="$!CS_HTML.txt2html($empEvalConGrade.GRADE_ITEM_ID)" value="$!CS_HTML.txt2html($empEvalConGrade.ITEM_DISTRI_CNT)" />
				<input type="hidden" id="rate$!CS_HTML.txt2html($empEvalConGrade.GRADE_ITEM_ID)" name="rate$!CS_HTML.txt2html($empEvalConGrade.GRADE_ITEM_ID)" value="$!CS_HTML.txt2html($empEvalConGrade.GRADE_ITEM_RATE)" />
			#end
			
			<input type="hidden" id="prevSelectedGrade" name="prevSelectedGrade" value="" />
			
    		<!-- search S -->
			<form id="formFind" name="formFind" method="post" action="$!{context_path}/prs/evalCon/empEvalCon/empEvalConModify.vw?type=template">
				<input type="hidden"    id="findHighPgmId"  	name="findHighPgmId"    	value="$!{searchMap.txt2html("findHighPgmId")}" />
				<input type="hidden"    id="findSubPgmId"   	name="findSubPgmId"     	value="$!{searchMap.txt2html("findSubPgmId")}" />
				<input type="hidden"    id="findPgmId"      	name="findPgmId"        	value="$!{searchMap.txt2html("findPgmId")}" />
				<input type="hidden"    id="findAssessorEmpn"	name="findAssessorEmpn"		value="$!{searchMap.txt2html("findAssessorEmpn")}" />
				<input type="hidden" 	id="findEvalType"		name="findEvalType"			value="$!{searchMap.txt2html("findEvalType")}" />
				<input type="hidden" 	id="findEvalGrpId"     	name="findEvalGrpId" 		value="$!{searchMap.txt2html("findEvalGrpId")}"/>
				<input type="hidden" 	id="evalGrpId"     		name="evalGrpId" 			value="$!{searchMap.txt2html("findEvalGrpId")}"/>
				<input type="hidden" 	id="deptCd"     	    name="deptCd" 				value="$!{searchMap.txt2html("deptCd")}"/>
				<input type="hidden" 	id="assessorEmpn"     	name="assessorEmpn" 			value="$!{searchMap.txt2html("assessorEmpn")}"/>
				
				<div class="searchBox">
    				<div><div><div>
    				<table summary="간부개인업적평가 검색 조건">
						<caption class="none">간부개인업적평가 검색 조건</caption> 
						<thead><tr><th></th></tr></thead>
        				<tbody>
            				<tr>
								<td class="searchBox_tit w100">
            						<span><label for="findYear">$!{YEAR}</label></span>
            						<span class="searchBar">
										<input type="hidden" id="findYear" name="findYear" value="$!{searchMap.txt2html("findYear")}"/>
        								$!CS_CODE.getCodeName("017", $!{searchMap.txt2html("findYear")})
            						</span>
            					</td>
								<td class="searchBox_tit w300">
            						<span>평가조직</span>
            						<span class="searchBar">
										$!{searchMap.txt2html("empEvalConDeptNm")}
            						</span>
            					</td>
								<td class="searchBox_tit w200">
            						<span><label for="findKorNm">이름</label></span>
            						<span class="searchBar">
										<input type="text" name="findKorNm" id="findKorNm" value="$!{searchMap.txt2html("findKorNm")}" />
            						</span>
            					</td>
								<td class="searchBox_tit w300">
            						<span><label for="findKorNm">평가여부</label></span>
            						<span class="searchBar">
										<input type="radio" id="findEndYnAll" 	name="findEndYn" value="" 	$!{CS_HTML.getChecked($!{searchMap.txt2html("findEndYn")}, '')} /> 전체 &nbsp;
        								<input type="radio" id="findEndY" 		name="findEndYn" value="Y" 	$!{CS_HTML.getChecked($!{searchMap.txt2html("findEndYn")}, 'Y')} /> 평가완료 &nbsp;
        								<input type="radio" id="findEndN" 		name="findEndYn" value="N" 	$!{CS_HTML.getChecked($!{searchMap.txt2html("findEndYn")}, 'N')} /> 평가진행중 &nbsp;
            						</span>
            					</td>
            				</tr>
        				</tbody>
    				</table>
                    <input type="image" class="btnSearch" src="$!{img_path}/common/btn_search.gif" align="middle" alt="검색" /> 
                    </div></div></div>
    	        </div>
    		</form>
    		<!-- search E -->
			<div class="clear"></div>
		</div>
		
		<form id="formList" name="formList" method="post" action="$!{context_path}/prs/evalCon/empEvalCon/empEvalConProcess.vw?type=template">
			<input type="hidden" 	id="mode"				name="mode" />
			<input type="hidden" 	id="year"       		name="year" 			value="$!{searchMap.txt2html("findYear")}" />
			<input type="hidden"	id="assessorEmpn"		name="assessorEmpn"		value="$!{searchMap.txt2html("assessorEmpn")}" />
			<input type="hidden" 	id="assessorDegree"     name="assessorDegree" 	value="$!{searchMap.txt2html("assessorDegree")}"/>
			<input type="hidden" 	id="deptCd"     	    name="deptCd" 			value="$!{searchMap.txt2html("deptCd")}"/>
			<input type="hidden" 	id="empEvalConType"	    name="empEvalConType"   />
			<input type="hidden" 	id="evalItemId"	    	name="evalItemId" 		/>
			
			$!{searchMap.makeHiddenFind()}
			<div id="splitterBox">
				<div>
					<!-- 데이터그리드 Start -->
					<div class="blockGridListTable">
						<table id="list" summary="직원개인업적평가 조회결과">
							<caption class="none">직원개인업적평가 조회</caption>
							<thead><tr><th></th></tr></thead>
							<tbody><tr><td></td></tr></tbody>
						</table>
						<div id="pager"></div>
					</div>
					<!--// 데이터그리드 End -->
					<div class="blockButton_all">
						
						
						<div class="blockButton_l txt_blue">
							※ 등급배분표
							<div class="blockGridListTable">
        						<table id="gradeDistri" summary="등급배분표">
        							<caption class="none">등급배분표</caption>
        							<thead><tr><th></th></tr></thead>
        							<tbody><tr><td></td></tr></tbody>
        						</table>
        						<div id="pager"></div>
        					</div>
							<span id="alertDis"></span>
						</div>
						<div class="blockButton">
                            <ul>
								<li><input type="button" id="btnBack"   	value="돌아가기"/></li>
                                <li><input type="button" id="btnSaveEval"   value="일괄평가저장" /></li>
                                <li><input type="button" id="btnSubmitEval" value="일괄평가완료" /></li>
                            </ul>
						</div>
					</div>
				</div>
			</div>
		</form>
		
	</div>
	<a id="anchor"></a>
	<div class="clear"></div>
</div>