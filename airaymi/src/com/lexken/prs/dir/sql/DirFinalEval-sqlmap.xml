<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.dir.dirFinalEval">

	<!--
	==================================================================
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: PRS_EVAL_GRP
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />

	<!--
	==================================================================
	  # 설명	: 임원평가기간 조회
	  #	기능	: SELECT
	  #	TABLE	: PRS_EVAL_SCHEDULE
	==================================================================
	-->
	<select id="getEvalSchedule" parameterClass="hashMap" resultClass="hashMap">
		SELECT DIR_EVAL_START_DT, DIR_EVAL_END_DT
		     , CASE WHEN SYSDATE BETWEEN TO_DATE(DIR_EVAL_START_DT, 'rrrr-mm-dd') AND TO_DATE(DIR_EVAL_END_DT || '23:59:59', 'rrrr-mm-dd hh24:mi:ss') THEN 'T'
		            ELSE 'N' END EVAL_YN
		  FROM PRS_EVAL_SCHEDULE
		 WHERE 1 = 1
		 <isNotEmpty prepend="AND" property="findYear">
			YEAR = #findYear#
		 </isNotEmpty>
		 <isNotEmpty prepend="AND" property="year">
			YEAR = #year#
		 </isNotEmpty>
	</select>

	<!--
	==================================================================
	  # 설명	: 임원리더쉽평가 마감여부
	  #	기능	: SELECT
	  #	TABLE	: PRS_CLOSING
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		 SELECT  NVL(DIR_EVAL_YN,'N') DIR_EVAL_YN, NVL(DIR_FINAL_YN,'N') DIR_FINAL_YN
		  FROM PRS_CLOSING
		 WHERE year = #findYear#
	</select>

	<!--
	==================================================================
	  # 설명	: 임원리더쉽평가 대상자 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: PRS_DIR_EVAL_MEMBER
	==================================================================
	-->
	<select id="getList_xml" parameterClass="hashMap" resultClass="hashMap">
		SELECT  A.YEAR,
			       A.EMPN,
			       A.KOR_NM,
			       A.DEPT_CD,
			       A.CAST_TC,
			       A.POS_TC,
			       A.BSC_GRADE,
			       TO_CHAR(ROUND(A.BSC_SCORE * (SELECT ETC1 / 100 FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '193' AND CODE_ID = '03'), 3),99.999) BSC_SCORE,
			       A.LEADERSHIP_GRADE,
			       TO_CHAR(ROUND(A.LEADERSHIP_SCORE * (SELECT ETC1 / 100 FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '193' AND CODE_ID = '01'),3),99.999) LEADERSHIP_SCORE,
			       A.EFF_GRADE,
			       TO_CHAR(ROUND(A.EFF_SCORE, 3), 99.999) EFF_SCORE,
			       A.DUTY_START_DT,
			       A.DUTY_END_DT,
			       A.RPT_CONTENT,
			       A.RPT_SUBMIT_YN,
			       A.FINAL_GRADE,
			       TO_CHAR(ROUND(A.FINAL_SCORE ,3), 99.999) FINAL_SCORE,
			       A.FINAL_RANKING,
			       A.CREATE_DT,
			       A.MODIFY_DT,
			       A.LEADERSHIP_YN,
			       A.EVAL_YN,
			       TO_CHAR(ROUND(A.GOV_SCORE * (SELECT ETC1 / 100 FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '193' AND CODE_ID = '04'), 3),99.999) GOV_SCORE,
			       CASE WHEN DUTY_END_DT <![CDATA[ < ]]> YEAR||'1231' THEN 'Y'
                            ELSE  'N'
                    END  as RETIRE_YN
		  FROM PRS_DIR_EVAL_MEMBER A
		 WHERE A.YEAR = #findYear#
		    AND A.EVAL_YN = 'Y'
		ORDER BY A.KOR_NM
	</select>

	<!--
	==================================================================
	  # 설명	: 임원리더쉽평가 대상자 평가결과
	  #	기능	: SELECT
	  #	TABLE	: PRS_DIR_EVAL_MEMBER
	==================================================================
	-->
	<select id="getEvalResultList_xml" parameterClass="hashMap" resultClass="hashMap">
		SELECT  A.YEAR,
			       A.EMPN,
			       A.KOR_NM,
			       A.DEPT_CD,
			       A.CAST_TC,
			       A.POS_TC,
			       A.BSC_GRADE,
			       A.BSC_SCORE * (SELECT ETC1 / 100 FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '193' AND CODE_ID = '03') BSC_SCORE,
			       A.LEADERSHIP_GRADE,
			       A.LEADERSHIP_SCORE * (SELECT ETC1 / 100 FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '193' AND CODE_ID = '01') LEADERSHIP_SCORE,
			       A.EFF_GRADE,
			       A.EFF_SCORE,
			       A.DUTY_START_DT,
			       A.DUTY_END_DT,
			       A.RPT_CONTENT,
			       A.RPT_SUBMIT_YN,
			       A.FINAL_GRADE,
			       A.FINAL_SCORE,
			       A.FINAL_RANKING,
			       A.CREATE_DT,
			       A.MODIFY_DT,
			       A.LEADERSHIP_YN,
			       A.EVAL_YN,
			       A.GOV_SCORE * (SELECT ETC1 / 100 FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '193' AND CODE_ID = '04') GOV_SCORE,
			       CASE WHEN DUTY_END_DT <![CDATA[ < ]]> YEAR||'1231' THEN 'Y'
                            ELSE  'N'
                    END  as RETIRE_YN
		  FROM PRS_DIR_EVAL_MEMBER A
		 WHERE A.YEAR = #findYear#
		ORDER BY A.FINAL_RANKING, A.KOR_NM
	</select>

	<!--
	==================================================================
	  # 설명	: 임원리평가 점수
	  #	기능	: UPDATE
	  #	TABLE	: PRS_DIR_EVAL_MEMBER
	==================================================================
	-->
	<update id="updateEvalData" parameterClass="hashMap">
		UPDATE PRS_DIR_EVAL_MEMBER
	   	   SET EFF_SCORE = #effScore#,
	   	        FINAL_SCORE = #finalScore#,
	   	        FINAL_GRADE = #finalGrade#,
	   	        FINAL_RANKING   = #finalRanking#
		 WHERE EMPN = #empn#
		   AND YEAR = #findYear#
	</update>

	<!--
	==================================================================
	  # 설명	: 임원평가 점수 확정
	  #	기능	: UPDATE
	  #	TABLE	: PRS_CLOSING
	==================================================================
	-->
	<update id="updateEvalConfirm" parameterClass="hashMap">
		MERGE INTO PRS_CLOSING AA
		     USING (SELECT #findYear# YEAR, #evalYn# DIR_EVAL_YN FROM DUAL) BB
		        ON (AA.YEAR = BB.YEAR)
		WHEN MATCHED
		THEN
		   UPDATE SET AA.DIR_EVAL_YN = BB.DIR_EVAL_YN, AA.MODIFY_DT = SYSDATE
		WHEN NOT MATCHED
		THEN
		   INSERT     (YEAR, DIR_EVAL_YN, CREATE_DT)
		       VALUES (BB.YEAR, BB.DIR_EVAL_YN, SYSDATE)
	</update>


	<!--
	==================================================================
	  # 설명	:  임원평가배분 조회
	  #	기능	: SELECT
	  #	TABLE	: DIR_GRADE_DISTRI
	==================================================================
	-->
	<select id="getGradeCntList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A_CNT, B_CNT, C_CNT - (SELECT COUNT(*) CNT FROM PRS_DIR_EVAL_MEMBER A WHERE A.YEAR = #findYear# AND A.EVAL_YN = 'N') C_CNT
		  FROM (
		           SELECT MAX(DECODE(TRIM(GRADE_ID),'A', ITEM_DISTRI_CNT)) A_CNT,
		                  MAX(DECODE(TRIM(GRADE_ID),'B', ITEM_DISTRI_CNT)) B_CNT,
		                  MAX(DECODE(TRIM(GRADE_ID),'C', ITEM_DISTRI_CNT)) C_CNT
		             FROM DIR_GRADE_DISTRI
		            WHERE YEAR= #findYear#
		              AND ITEM_CNT=(  SELECT COUNT(*) CNT
		                                           FROM PRS_DIR_EVAL_MEMBER A
		                                     WHERE A.YEAR = #findYear#)
       			)
	</select>

	<!--
	==================================================================
	  # 설명	: 임원평가 점수 확정
	  #	기능	: UPDATE
	  #	TABLE	: PRS_CLOSING
	==================================================================
	-->
	<update id="updateEvalFinalConfirm" parameterClass="hashMap">
		MERGE INTO PRS_CLOSING AA
		     USING (SELECT #findYear# YEAR, #evalYn# DIR_FINAL_YN FROM DUAL) BB
		        ON (AA.YEAR = BB.YEAR)
		WHEN MATCHED
		THEN
		   UPDATE SET AA.DIR_FINAL_YN = BB.DIR_FINAL_YN, AA.MODIFY_DT = SYSDATE
		WHEN NOT MATCHED
		THEN
		   INSERT     (YEAR, DIR_EVAL_YN, CREATE_DT)
		       VALUES (BB.YEAR, BB.DIR_FINAL_YN, SYSDATE)
	</update>

	<!--
	==================================================================
	  # 설명	: 평가제외자 등급지정
	  #	기능	: MERGE INTO
	  #	TABLE	: PRS_DIR_EVAL_MEMBER
	==================================================================
	-->
	<insert id="updateExceptGrade" parameterClass="hashMap">
		<selectKey resultClass="java.lang.Integer" keyProperty="RANKING" >
			SELECT COUNT(1) RANKING
			  FROM PRS_DIR_EVAL_MEMBER
			 WHERE YEAR = #findYear#
		</selectKey>

        MERGE INTO PRS_DIR_EVAL_MEMBER A
        USING (
                SELECT YEAR, EMPN, #RANKING# RANKING
                  FROM PRS_DIR_EVAL_MEMBER
                 WHERE YEAR = #findYear#
                   AND EVAL_YN = 'N'
              ) B
           ON (A.YEAR = B.YEAR AND A.EMPN = B.EMPN)
         WHEN MATCHED THEN
                UPDATE SET A.FINAL_GRADE = 'C'
                         , A.FINAL_RANKING = B.RANKING
	</insert>

</sqlMap>


