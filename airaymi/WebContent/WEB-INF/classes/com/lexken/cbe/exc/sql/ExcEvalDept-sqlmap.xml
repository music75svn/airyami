<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="cbe.exc.excEvalDept">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: BSC_SPE_EVAL_DEPT
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	 

	<!--
	==================================================================   
	  # 설명	: 별도평가조직 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_SPE_EVAL_DEPT
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		 SELECT  A.YEAR,
		         A.EVAL_DEGREE_ID,
		         A.SC_DEPT_ID,
		         F_DEPT_FULL_NM (A.YEAR, A.SC_DEPT_ID, 'BSC_SC_DEPT') SC_DEPT_NM,
		         A.RPT_EMPN,
		         (SELECT USER_NM
		            FROM V_ROLE_USER
		           WHERE USER_ID = A.RPT_EMPN)
		            RPT_EMPN_NM,
		         A.EVAL_SUBMIT_YN,
  		         (SELECT COUNT (*)
		            FROM BSC_EXC_RPT
		           WHERE     YEAR = A.YEAR
		                 AND EVAL_DEGREE_ID = A.EVAL_DEGREE_ID
		                 AND SC_DEPT_ID = A.SC_DEPT_ID)
		            BASE_CNT,
				 NVL(A.RPT_YN, 'N') RPT_YN 
		    FROM BSC_EXC_EVAL_DEPT A
		   WHERE A.YEAR = #findYear# AND A.EVAL_DEGREE_ID = #findEvalDegreeId#
		   ORDER BY A.SC_DEPT_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가차수 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_ECM_EVAL_DEGREE
	==================================================================
	-->
	<select id="getDegreeList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR,
               EVAL_DEGREE_ID,
               EVAL_DEGREE_NM
          FROM BSC_ECM_EVAL_DEGREE
          WHERE YEAR=#findYear#
    </select>
    
   
    
    <!--
	==================================================================   
	  # 설명	: 평가구분
	  #	기능	: SELECT
	  #	TABLE	: BSC_ECM_EVAL_DEGREE
	==================================================================
	-->
	<select id="getDetailGubun" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR                  
			 , EVAL_DEGREE_ID        
			 , EVAL_DEGREE_NM         
		  FROM BSC_ECM_EVAL_DEGREE 
		 WHERE YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 평가단,평가대상지표POOL별 평가방법 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_ECM_EVAL_GRADE_CONVERT_TAB
	==================================================================
	-->
	<select id="getEvalMethodList" parameterClass="hashMap" resultClass="hashMap">
		SELECT EVAL_METHOD_ID, EVAL_METHOD_NM
		  FROM BSC_ECM_EVAL_GRADE_CONVERT_TAB
		 WHERE 1=1
		   AND YEAR = #year#
		   AND DELETE_DT IS NULL
		 ORDER BY EVAL_METHOD_ID   
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 별도평가조직 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_SPE_EVAL_DEPT
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR                  
			 , A.EVAL_DEGREE_ID        
			 , A.SC_DEPT_ID   
			 , B.SC_DEPT_NM             
			 , A.RPT_EMPN
			 , (SELECT USER_NM FROM V_ROLE_USER WHERE USER_ID=A.RPT_EMPN) RPT_EMPN_NM
			 , A.GRADE_ITEM_ID
			 , A.GOV_GRADE         
			 , A.EVAL_SUBMIT_YN
			 , A.RPT_YN        
			FROM BSC_EXC_EVAL_DEPT A 
		  LEFT OUTER JOIN BSC_SC_DEPT B ON A.YEAR=B.YEAR AND A.SC_DEPT_ID=B.SC_DEPT_ID
		 WHERE A.YEAR = #year#
		   AND A.EVAL_DEGREE_ID = #evalDegreeId#
		   AND A.SC_DEPT_ID = #scDeptId#	      
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 별도평가조직 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_EXC_EVAl_DEPT
	==================================================================
	-->	
	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO BSC_EXC_EVAl_DEPT ( 
			   YEAR
			 , EVAL_DEGREE_ID
			 , SC_DEPT_ID
			 , RPT_EMPN
			 , RPT_YN
			 , CREATE_DT
			 ) VALUES ( 
			   #year#
			 , #evalDegreeId#
			 , #scDeptId#
			 , #rptEmpn#
			 , #rptYn#
			 , SYSDATE
			 )
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 별도평가조직 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_EXC_EVAl_DEPT
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
		UPDATE BSC_EXC_EVAl_DEPT 
		   SET RPT_EMPN           		= #rptEmpn#
		<isNotEmpty property="govGrade">
			 , GOV_GRADE					= #govGrade# 
		</isNotEmpty> 
			 , MODIFY_DT				= SYSDATE
			 , RPT_YN 					= #rptYn# 
		 WHERE YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
		   AND SC_DEPT_ID = #scDeptId#		
	</update>	
	

	<!--
	==================================================================   
	  # 설명	: 별도평가조직 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_EXC_EVAl_DEPT
	==================================================================
	-->	
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM BSC_EXC_EVAl_DEPT 
		 WHERE YEAR = #year#
		   AND EVAL_DEGREE_ID = #evalDegreeId#
		   AND SC_DEPT_ID = #scDeptId#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 권한 삭제
	  #	기능	: DELETE
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<update id="deleteAdminData" parameterClass="hashMap">
		DELETE FROM BSC_ADMIN
         WHERE ADMIN_GUBUN ='50'
		   AND USER_ID = #rptOldEmpn#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 권한 삭제
	  #	기능	: DELETE
	  #	TABLE	: BSC_ADMIN 
	==================================================================
	-->	
	<update id="deleteAdminsData" parameterClass="hashMap">
		DELETE FROM BSC_ADMIN
         WHERE ADMIN_GUBUN ='50'
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 평가자 매핑 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<insert id="insertAdminData" parameterClass="hashMap">
		INSERT INTO BSC_ADMIN (ADMIN_GUBUN, USER_ID)
        SELECT DISTINCT '51', RPT_EMPN
          FROM BSC_EXC_EVAL_DEPT
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 평가근거 매핑 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_ADMIN
	==================================================================
	-->	
	<insert id="insertAdminBaseData" parameterClass="hashMap">
		INSERT INTO BSC_ADMIN 
		(ADMIN_GUBUN, USER_ID) 
        VALUES
        ('50',
        #rptEmpn#        
        )
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 별도평가조직 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BSC_EXC_EVAL_DEPT
	==================================================================
	-->	
	<delete id="deleteExcDept" parameterClass="hashMap">
		DELETE FROM BSC_EXC_EVAL_DEPT 
		 WHERE YEAR = #year#
	</delete>
	
	<!--
	==================================================================   
	  # 설명	: 별도평가부서 가져오기 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_EXC_EVAL_DEPT
	==================================================================
	-->	
	<insert id="insertExcDept" parameterClass="hashMap">
		INSERT INTO BSC_EXC_EVAL_DEPT (YEAR, EVAL_DEGREE_ID, SC_DEPT_ID, CREATE_DT, RPT_YN)
			 SELECT YEAR, (SELECT EVAl_DEGREE_ID FROM BSC_ECM_EVAL_DEGREE WHERE EVAl_DEGREE_ID = #evalDegreeId# AND YEAR = #year#),SC_DEPT_ID, SYSDATE, 'N'
			   FROM BSC_SC_DEPT A
			  WHERE YEAR = #year# AND SC_DEPT_GRP_ID = '04'
				AND '0' =
		              (SELECT COUNT (UP_SC_DEPT_ID)
		                 FROM BSC_SC_DEPT
		                WHERE YEAR = A.YEAR AND SC_DEPT_GRP_ID = '04'
		                      AND UP_SC_DEPT_ID IN
		                             (SELECT UP_SC_DEPT_ID
		                                FROM BSC_SC_DEPT
		                               WHERE     YEAR = A.YEAR
		                                     AND SC_DEPT_GRP_ID = '04'
		                                     AND A.SC_DEPT_ID = UP_SC_DEPT_ID))
           
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 별도평가부서 확정 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_EXC_SUBMIT
	==================================================================
	-->	
	<insert id="insertDeptYnData" parameterClass="hashMap">
		MERGE INTO BSC_EXC_SUBMIT A
        USING DUAL
           ON (A.YEAR = #year# )
         WHEN MATCHED THEN
                UPDATE SET A.DEPT_YN = #deptYn#, A.MODIFY_DT = SYSDATE
         WHEN NOT MATCHED THEN
                INSERT (YEAR, DEPT_YN, CREATE_DT)
                VALUES (#year#, #deptYn#, SYSDATE)
	</insert>	
	
	
</sqlMap>


