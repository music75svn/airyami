<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="gov.bos.bosMetric">

	<!--
	==================================================================
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: BOSS_METRIC
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />


	<!--
	==================================================================
	  # 설명	: 기관장지표 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BOSS_METRIC
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT
                 A.YEAR
               , B.EVAL_CAT_GRP_NM
               , A.BOSS_METRIC_ID
               , A.BOSS_METRIC_NM
               , F_CODE_NM('007', A.GBN_ID, A.YEAR) GBN_NM
               , F_CODE_NM('146', A.EVAL_METHOD_ID, A.YEAR) EVAL_METHOD_NM
               , C.SC_DEPT_NM
               , D.USER_NM AS INSERT_USER_NM
               , NVL((SELECT COUNT(*) FROM
                         BOSS_METRIC_MAPPING
                         WHERE YEAR = A.YEAR
                         AND BOSS_METRIC_ID = A.BOSS_METRIC_ID ),0)  MAPPED_CNT
           FROM BOSS_METRIC A
           INNER JOIN BOSS_CAT_GRP B ON   A.YEAR = B.YEAR AND A.EVAL_CAT_GRP_ID = B.EVAL_CAT_GRP_ID
           LEFT OUTER JOIN BSC_SC_DEPT C ON   A.YEAR = C.YEAR AND A.SC_DEPT_ID = C.SC_DEPT_ID
           LEFT OUTER JOIN BSC_USERINFO D ON A.INSERT_USER_ID = D.USER_ID
           WHERE A.YEAR = #findYear#
           	 <isEqual prepend="AND" property="findUseYn" compareValue="Y">
	       	 A.DELETE_DT IS NULL
	         </isEqual>
	         <isNotEqual prepend="AND" property="findUseYn" compareValue="Y">
	         A.DELETE_DT IS NOT NULL
	         </isNotEqual>
           ORDER BY B.SORT_ORDER, A.SORT_ORDER
	</select>

	<!--
	==================================================================
	  # 설명	: 기관장지표 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BOSS_METRIC
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
             , A.BOSS_METRIC_ID
             , A.EVAL_CAT_GRP_ID
             , A.BOSS_METRIC_NM
             , A.BOSS_METRIC_ID
			 , D.BOSS_METRIC_NM
             , A.CONTENT
             , A.GBN_ID
             , A.DIREC_ID
             , A.EVAL_METHOD_ID
             , A.UNIT
             , A.ACT_CAL_TYPE
             , A.DETAIL_EVAL_SUMMARY_COMMENT
             , A.SC_DEPT_ID
             , B.SC_DEPT_NM
             , A.INSERT_USER_ID
             , C.USER_NM AS INSERT_USER_NM
             , A.BASE_VALUE
             , A.BEST_TARGET
             , A.LOWEST_TARGET
             , A.STAD_CONST
             , A.SORT_ORDER
             , A.WEIGHT
             , A.UNMEAS_BEST_TARGET
             , E.GOV_METRIC_NM
             , E.GOV_METRIC_ID
             , CASE WHEN A.DELETE_DT IS NULL THEN 'Y' ELSE 'N' END AS USER_YN
             , A.BEST_TARGET_3YEAR
             , A.LOWEST_TARGET_3YEAR
             , A.ACTUAL_3YEAR
             , A.RATE_YEAR
          FROM BOSS_METRIC A
          LEFT OUTER JOIN BSC_SC_DEPT B ON   A.YEAR = B.YEAR AND A.SC_DEPT_ID = B.SC_DEPT_ID
          LEFT OUTER JOIN BSC_USERINFO C ON A.INSERT_USER_ID = C.USER_ID
          LEFT OUTER JOIN BOSS_METRIC D ON A.YEAR = D.YEAR AND A.BOSS_METRIC_ID=D.BOSS_METRIC_ID
          LEFT OUTER JOIN GOV_METRIC E ON A.YEAR = E.YEAR AND A.GOV_METRIC_ID = E.GOV_METRIC_ID
         WHERE A.YEAR = #year#
           AND A.BOSS_METRIC_ID =#bossMetricId#
	</select>

	<!--
	==================================================================
	  # 설명	: 기관장지표 상세 보기
	  #	기능	: SELECT
	  #	TABLE	: BOSS_METRIC
	==================================================================
	-->
	<select id="getDetailPop" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
             , A.BOSS_METRIC_ID
             , A.EVAL_CAT_GRP_ID
             , ECG.EVAL_CAT_GRP_NM
             , A.BOSS_METRIC_NM
             , A.BOSS_METRIC_ID
			 , D.BOSS_METRIC_NM
             , A.CONTENT
             , A.GBN_ID
             , F_CODE_NM('007' , A.GBN_ID , A.YEAR ) AS GBN_NM
             , A.DIREC_ID
             , F_CODE_NM('147' , A.DIREC_ID , A.YEAR ) AS DIREC_NM
             , A.EVAL_METHOD_ID
             , F_CODE_NM('146' , A.EVAL_METHOD_ID , A.YEAR ) AS EVAL_METHOD_NM
             , A.UNIT
             , F_CODE_NM('013' , A.UNIT , A.YEAR ) AS UNIT_NM
             , A.ACT_CAL_TYPE
             , A.DETAIL_EVAL_SUMMARY_COMMENT
             , A.SC_DEPT_ID
             , B.SC_DEPT_NM
             , A.INSERT_USER_ID
             , C.USER_NM AS INSERT_USER_NM
             , A.BASE_VALUE
             , A.BEST_TARGET
             , A.LOWEST_TARGET
             , A.STAD_CONST
             , A.SORT_ORDER
             , A.WEIGHT
             , A.UNMEAS_BEST_TARGET
             , F.GOV_METRIC_NM
             , CASE WHEN A.DELETE_DT IS NULL THEN 'Y' ELSE 'N' END AS USER_YN
             , F_CODE_NM('011' , CASE WHEN A.DELETE_DT IS NULL THEN 'Y' ELSE 'N' END , A.YEAR ) AS USER_YN_NM
          FROM BOSS_METRIC A
          LEFT OUTER JOIN BSC_SC_DEPT B ON   A.YEAR = B.YEAR AND A.SC_DEPT_ID = B.SC_DEPT_ID
          LEFT OUTER JOIN BSC_USERINFO C ON A.INSERT_USER_ID = C.USER_ID
          LEFT OUTER JOIN BOSS_METRIC D ON A.YEAR = D.YEAR AND A.BOSS_METRIC_ID=D.BOSS_METRIC_ID
          LEFT OUTER JOIN BOSS_CAT_GRP ECG ON A.YEAR = ECG.YEAR AND A.EVAL_CAT_GRP_ID = ECG.EVAL_CAT_GRP_ID
          LEFT OUTER JOIN GOV_METRIC F ON A.YEAR = F.YEAR AND A.GOV_METRIC_ID = F.GOV_METRIC_ID
         WHERE A.YEAR = #year#
           AND A.BOSS_METRIC_ID =#bossMetricId#
	</select>

	<!--
	==================================================================
	  # 설명	: 기관장지표관리 코드 채번
	  #	기능	: SELECT
	  #	TABLE	: BOSS_METRIC
	==================================================================
	-->
	<select id="getMetricId" parameterClass="hashMap" resultClass="java.lang.String">
		SELECT 'BM'||LPAD(NVL(MAX(SUBSTR(BOSS_METRIC_ID,3,6)),0)+1,5,'0') SEQ FROM BOSS_METRIC
	</select>

	<!--
	==================================================================
	  # 설명	: 기관장지표관리 등록
	  #	기능	: INSERT
	  #	TABLE	: BOSS_METRIC
	==================================================================
	-->
	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO BOSS_METRIC (
			   YEAR
			 , BOSS_METRIC_ID
			 , GOV_METRIC_ID
			 , EVAL_CAT_GRP_ID
			 , BOSS_METRIC_NM
			 , CONTENT
			 , GBN_ID
			 , DIREC_ID
			 , EVAL_METHOD_ID
			 , UNIT
			 , ACT_CAL_TYPE
			 , DETAIL_EVAL_SUMMARY_COMMENT
			 , SC_DEPT_ID
			 , INSERT_USER_ID
			 , BASE_VALUE
			 , BEST_TARGET
			 , LOWEST_TARGET
			 , STAD_CONST
			 , CREATE_DT
			 , SORT_ORDER
			 , WEIGHT
			 , UNMEAS_BEST_TARGET
			 , DELETE_DT
			 , BEST_TARGET_3YEAR
			 , LOWEST_TARGET_3YEAR
			 , ACTUAL_3YEAR
			 , RATE_YEAR
			 ) VALUES (
			   #year#
			 , #bossMetricId#
			 , #govMetricId#
			 , #evalCatGrpId#
			 , #bossMetricNm#
			 , #content#
			 , #gbnId#
			 , #direcId#
			 , #evalMethodId#
			 , #unit#
			 , #actCalType#
			 , #detailEvalSummaryComment#
			 , #scDeptId#
			 , #insertUserId#
			 , #baseValue#
			 , #bestTarget#
			 , #lowestTarget#
			 , #stadConst#
			 , SYSDATE
			 , #sortOrder#
			 , #weight#
			 , #unmeasBestTarget#
			 ,
			 <isEqual property="useYn" compareValue="Y">
		     NULL
		     </isEqual>
		     <isNotEqual property="useYn" compareValue="Y">
		     SYSDATE
		     </isNotEqual>
		     , #bestTarget3year#
			 , #lowestTarget3year#
			 , #actual3year#
			 , #rateYear#
			 )
	</insert>

	<!--
	==================================================================
	  # 설명	: 산식항목 삭제
	  #	기능	: DELETE
	  #	TABLE	: BOSS_CAL_TYPE_COL
	==================================================================
	-->
	<delete id="deleteCalTypeCol" parameterClass="hashMap">
		DELETE FROM BOSS_CAL_TYPE_COL
		WHERE YEAR = #year#
		  AND BOSS_METRIC_ID = #bossMetricId#
	</delete>

	<!--
	==================================================================
	  # 설명	: 산식항목 등록
	  #	기능	: INSERT
	  #	TABLE	: BOSS_CAL_TYPE_COL
	==================================================================
	-->
	<insert id="insertCalTypeCol" parameterClass="hashMap">
		INSERT INTO BOSS_CAL_TYPE_COL (
               YEAR
             , BOSS_METRIC_ID
             , ACT_CAL_TYPE_COL_ID
             , ACT_CAL_TYPE_COL_NM
             , UNIT
             , CREATE_DT
           ) VALUES (
               #year#
             , #bossMetricId#
             , #calTypeCol#
             , #calTypeColNm#
             , #unit#
             , SYSDATE
             )
	</insert>

	<!--
	==================================================================
	  # 설명	: 세부평가내용 삭제
	  #	기능	: DELETE
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM
	==================================================================
	-->
	<delete id="deleteDetailItem" parameterClass="hashMap">
		DELETE FROM BOSS_DETAIL_EVAL_ITEM
		WHERE YEAR = #year#
		  AND BOSS_METRIC_ID = #bossMetricId#
	</delete>

	<!--
	==================================================================
	  # 설명	: 세부평가내용 등록
	  #	기능	: INSERT
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM
	==================================================================
	-->
	<insert id="insertDetail" parameterClass="hashMap">
		<selectKey resultClass="java.lang.String" keyProperty="SEQ" >
			SELECT 'BDI'||LPAD(NVL(MAX(SUBSTR(DETAIL_EVAL_ID,4,5)),0)+1,4,'0') SEQ FROM BOSS_DETAIL_EVAL_ITEM
		</selectKey>
		INSERT INTO BOSS_DETAIL_EVAL_ITEM (
               YEAR
             , BOSS_METRIC_ID
             , DETAIL_EVAL_ID
             , DETAIL_EVAL_CONTENT
             , EVAL_COMMENT
             , INSERT_USER_ID
             , CREATE_DT
           ) VALUES (
               #year#
             , #bossMetricId#
             <isEqual property="detailEvalId" compareValue="">
             , #SEQ#
             </isEqual>
             <isNotEqual property="detailEvalId" compareValue="">
             , #detailEvalId#
             </isNotEqual>
             , #detailEvalContent#
             , #evalContent#
             , #detailUserId#
             , SYSDATE
             )
	</insert>

	<!--
	==================================================================
	  # 설명	: 기관장지표 수정
	  #	기능	: UPDATE
	  #	TABLE	: BOSS_METRIC
	==================================================================
	-->
	<update id="updateData" parameterClass="hashMap">
		UPDATE BOSS_METRIC
		   SET EVAL_CAT_GRP_ID        = #evalCatGrpId#
			 , BOSS_METRIC_NM         = #bossMetricNm#
			 , BOSS_METRIC_ID          = #bossMetricId#
			 , CONTENT                = #content#
			 , GBN_ID                 = #gbnId#
			 , DIREC_ID               = #direcId#
			 , EVAL_METHOD_ID         = #evalMethodId#
			 , UNIT                   = #unit#
			 , ACT_CAL_TYPE           = #actCalType#
			 , GOV_METRIC_ID 		  = #govMetricId#
			 , DETAIL_EVAL_SUMMARY_COMMENT = #detailEvalSummaryComment#
			 , SC_DEPT_ID             = #scDeptId#
			 , INSERT_USER_ID         = #insertUserId#
			 , BASE_VALUE             = #baseValue#
			 , BEST_TARGET            = #bestTarget#
			 , LOWEST_TARGET          = #lowestTarget#
			 , STAD_CONST             = #stadConst#
			 , SORT_ORDER             = #sortOrder#
			 , WEIGHT                 = #weight#
			 , UNMEAS_BEST_TARGET     = #unmeasBestTarget#
			 ,
			 <isEqual property="useYn" compareValue="Y">
	         DELETE_DT = NULL
	         </isEqual>
	         <isNotEqual property="useYn" compareValue="Y">
	         DELETE_DT = SYSDATE
	         </isNotEqual>
	         , BEST_TARGET_3YEAR      = #bestTarget3year# 
			 , LOWEST_TARGET_3YEAR    = #lowestTarget3year# 
			 , ACTUAL_3YEAR           = #actual3year# 
			 , RATE_YEAR              = #rateYear#
		 WHERE YEAR = #year#
		   AND BOSS_METRIC_ID = #bossMetricId#
	</update>


	<!--
	==================================================================
	  # 설명	: 기관장지표 삭제
	  #	기능	: UPDATE
	  #	TABLE	: BOSS_METRIC
	==================================================================
	-->
	<update id="deleteData" parameterClass="hashMap">
		UPDATE BOSS_METRIC
		   SET DELETE_DT   = SYSDATE
		 WHERE YEAR = #year#
		   AND BOSS_METRIC_ID = #bossMetricId#
	</update>

	<!--
	==================================================================
	  # 설명	: 지표Pool 산식 목록 조회
	  #	기능	: SELECT
	  #	TABLE	: BOSS_CAL_TYPE_COL
	==================================================================
	-->
	<select id="calTypeColList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR
		     , BOSS_METRIC_ID
		     , ACT_CAL_TYPE_COL_ID
		     , ACT_CAL_TYPE_COL_NM
		     , UNIT
		FROM BOSS_CAL_TYPE_COL
		WHERE YEAR = #year#
		  AND BOSS_METRIC_ID = #bossMetricId#
		ORDER BY ACT_CAL_TYPE_COL_ID ASC
	</select>

	<!--
	==================================================================
	  # 설명	: 지표Pool 세부평가내용 목록 조회
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM
	==================================================================
	-->
	<select id="calTypeDetailList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
		     , A.BOSS_METRIC_ID
		     , A.DETAIL_EVAL_ID
		     , A.DETAIL_EVAL_NM
		     , A.INSERT_USER_ID
		     , B.USER_NM AS INSERT_USER_NM
		FROM BOSS_DETAIL_EVAL_ITEM A
		LEFT OUTER JOIN BSC_USERINFO B ON A.INSERT_USER_ID = B.USER_ID
		WHERE A.YEAR = #year#
		  AND A.BOSS_METRIC_ID = #bossMetricId#
		ORDER BY A.DETAIL_EVAL_ID ASC
	</select>

	<!--
	==================================================================
	  # 설명	: 기관장지표 목록 조회
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM
	==================================================================
	-->
	<select id="getBosList" parameterClass="hashMap" resultClass="hashMap">
		SELECT
               B.EVAL_CAT_GRP_NM
             , C.EVAL_CAT_NM
             , A.BOSS_METRIC_ID
             , A.BOSS_METRIC_NM
            FROM BOSS_METRIC A
         INNER JOIN BOSS_EVAL_CAT_GRP B ON   A.YEAR = B.YEAR AND A.EVAL_CAT_GRP_ID = B.EVAL_CAT_GRP_ID
         INNER JOIN BOSS_EVAL_CAT C ON   A.YEAR = C.YEAR AND A.EVAL_CAT_ID = C.EVAL_CAT_ID
         WHERE A.YEAR =#findYear#
             AND A.DELETE_DT IS NULL
             AND A.MAIN_METRIC_YN='Y'
         ORDER BY B.SORT_ORDER, C.SORT_ORDER , A.SORT_ORDER
	</select>

	<!--
	==================================================================
	  # 설명	: 경평지표 목록 조회
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM
	==================================================================
	-->
	<select id="getGovList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.GOV_METRIC_ID
	         , A.GOV_METRIC_NM
	         , B.EVAL_CAT_GRP_NM
	         , C.EVAL_CAT_NM
	   	  FROM GOV_METRIC A
	   	  LEFT OUTER JOIN GOV_EVAL_CAT_GRP B
	        ON A.YEAR = B.YEAR
	       AND A.EVAL_CAT_GRP_ID = B.EVAL_CAT_GRP_ID
	   	  LEFT OUTER JOIN GOV_EVAL_CAT C
	        ON A.YEAR = C.YEAR
	       AND A.EVAL_CAT_ID = C.EVAL_CAT_ID
	     WHERE A.YEAR = #findYear#
	</select>

	<!--
	==================================================================
	  # 설명	: 지표Pool 세부평가내용 목록 조회
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM, BOSS_DETAIL_EVAL_CONCEPT
	==================================================================
	-->
	<select id="detailEvalItemList" parameterClass="hashMap" resultClass="hashMap">
	    SELECT A.YEAR
	         , A.BOSS_METRIC_ID
	         , A.DETAIL_EVAL_ID
	         , A.DETAIL_EVAL_NM
	         , B.CONCEPT_ID
	         , B.CONCEPT_NM
	         , A.INSERT_USER_ID
	         , C.USER_NM AS INSERT_USER_NM
	         , DECODE(A.CONCEPT_CNT, 0, 1, A.CONCEPT_CNT) CONCEPT_CNT
	      FROM (
		            SELECT YEAR, BOSS_METRIC_ID, DETAIL_EVAL_ID, DETAIL_EVAL_NM, SORT_ORDER, INSERT_USER_ID
		                 , (SELECT COUNT(CONCEPT_ID) FROM BOSS_DETAIL_EVAL_CONCEPT WHERE YEAR = BOSS_DETAIL_EVAL_ITEM.YEAR AND DETAIL_EVAL_ID = BOSS_DETAIL_EVAL_ITEM.DETAIL_EVAL_ID) CONCEPT_CNT
		              FROM BOSS_DETAIL_EVAL_ITEM
		             WHERE YEAR = #year#
		         ) A
	      LEFT OUTER JOIN BOSS_DETAIL_EVAL_CONCEPT B
	        ON A.YEAR = B.YEAR AND A.DETAIL_EVAL_ID = B.DETAIL_EVAL_ID
	      LEFT OUTER JOIN BSC_USERINFO C
	        ON A.INSERT_USER_ID = C.USER_ID
	     WHERE A.YEAR =  #year#
	       AND A.BOSS_METRIC_ID = #bossMetricId#
	     ORDER BY A.SORT_ORDER, B.SORT_ORDER
	</select>

	<!--
	==================================================================
	  # 설명	: 실행계획이 없는 세부평가내용을 삭제
	  #	기능	: DELTE
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM
	==================================================================
	-->
	<delete id="deleteBosDetailEvalItem" parameterClass="hashMap">
		DELETE
		  FROM BOSS_DETAIL_EVAL_ITEM A
		 WHERE A.YEAR = #year#
		   AND A.BOSS_METRIC_ID = #bossMetricId#
		   AND A.DETAIL_EVAL_ID IN (
		<iterate property="delDetailItem" conjunction=", ">
			$delDetailItem[]$
		</iterate>
		   							)
	</delete>

	<!--
	==================================================================
	  # 설명	: 실행계획이 없는 평가착안사항 삭제
	  #	기능	: DELTE
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM
	==================================================================
	-->
	<delete id="deleteBosDetailEvalConcept" parameterClass="hashMap">
		DELETE
		  FROM BOSS_DETAIL_EVAL_CONCEPT A
		 WHERE A.YEAR = #year#
		   AND (A.DETAIL_EVAL_ID, A.CONCEPT_ID) IN (
		<iterate property="delConcept" conjunction=", ">
			$delConcept[]$
		</iterate>
													)
	</delete>

	<!--
	==================================================================
	  # 설명	: 삭제할(실행계획이 없는) 세부평가내용 ID를 가져온다.
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM
	==================================================================
	-->
	<select id="getBosDetailEvalItem" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.DETAIL_EVAL_ID
		  FROM BOSS_DETAIL_EVAL_ITEM A
		 WHERE A.YEAR = #year#
		   AND A.BOSS_METRIC_ID = #bossMetricId#
		   AND A.DETAIL_EVAL_ID IN ( SELECT A.DETAIL_EVAL_ID
		                              FROM BOSS_DETAIL_EVAL_CONCEPT A
		                              LEFT OUTER JOIN BOSS_ACTION_PLAN B
		                                ON A.YEAR = B.YEAR AND A.CONCEPT_ID = B.CONCEPT_ID
		                             WHERE A.YEAR = #year#
		                             GROUP BY A.DETAIL_EVAL_ID
		                            HAVING COUNT(B.PLAN_ID) = 0 )
	</select>

	<!--
	==================================================================
	  # 설명	: 삭제할(실행계획이 없는) 평가착안사항 ID를 가져온다.
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM
	==================================================================
	-->
	<select id="getBosDetailEvalConcept" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.DETAIL_EVAL_ID, A.CONCEPT_ID
		  FROM BOSS_DETAIL_EVAL_CONCEPT A
		 WHERE A.YEAR = #year#
		   AND A.DETAIL_EVAL_ID IN (SELECT DISTINCT DETAIL_EVAL_ID FROM BOSS_DETAIL_EVAL_ITEM WHERE YEAR = #year# AND BOSS_METRIC_ID = #bossMetricId#)
		   AND A.CONCEPT_ID IN ( SELECT A.CONCEPT_ID
		                           FROM BOSS_DETAIL_EVAL_CONCEPT A
		                           LEFT OUTER JOIN BOSS_ACTION_PLAN B
		                             ON A.YEAR = B.YEAR AND A.CONCEPT_ID = B.CONCEPT_ID
		                          WHERE A.YEAR = #year#
		                          GROUP BY A.CONCEPT_ID
		                         HAVING COUNT(B.PLAN_ID) = 0 )
	</select>

	<!--
	==================================================================
	  # 설명	: 세부평가내용 저장
	  #	기능	: MERGE INTO
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM
	==================================================================
	-->
	<insert id="saveBosDetailEvalItem" parameterClass="hashMap">
        MERGE INTO BOSS_DETAIL_EVAL_ITEM A
        USING DUAL
           ON (A.YEAR = #year# AND A.DETAIL_EVAL_ID = #detailEvalId#)
         WHEN MATCHED THEN
                UPDATE SET A.DETAIL_EVAL_NM = #detailEvalNm#, A.SORT_ORDER = #sortOrder#, A.INSERT_USER_ID = #userId#
         WHEN NOT MATCHED THEN
                INSERT (YEAR, BOSS_METRIC_ID, DETAIL_EVAL_ID, DETAIL_EVAL_NM, SORT_ORDER, INSERT_USER_ID, CREATE_DT)
                VALUES (#year#, #bossMetricId#, #detailEvalId#, #detailEvalNm#, #sortOrder#, #userId#, SYSDATE)
	</insert>

	<!--
	==================================================================
	  # 설명	: 평가착안사항 저장
	  #	기능	: MERGE INTO
	  #	TABLE	: BOSS_DETAIL_EVAL_CONCEPT
	==================================================================
	-->
	<insert id="saveBosDetailEvalConcept" parameterClass="hashMap">
        MERGE INTO BOSS_DETAIL_EVAL_CONCEPT A
        USING DUAL
           ON (A.YEAR = #year# AND A.CONCEPT_ID = #conceptId#)
         WHEN MATCHED THEN
                UPDATE SET A.CONCEPT_NM = #conceptNm#, A.SORT_ORDER = #sortOrder#
         WHEN NOT MATCHED THEN
                INSERT (YEAR, DETAIL_EVAL_ID, CONCEPT_ID, CONCEPT_NM, SORT_ORDER, CREATE_DT)
                VALUES (#year#, #detailEvalId#, #conceptId#, #conceptNm#, #sortOrder#, SYSDATE)
	</insert>

	<!--
	==================================================================
	  # 설명	: 세부평가내용 ID 생성
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM
	==================================================================
	-->
	<select id="getDetailEvalItemId" parameterClass="hashMap" resultClass="java.lang.String">
		SELECT 'BD' || NVL(LPAD(SUBSTR(MAX(DETAIL_EVAL_ID), 3) + 1, 5, '0'), '00001') DETAIL_EVAL_ID
		  FROM BOSS_DETAIL_EVAL_ITEM
		 WHERE YEAR = #year#
	</select>

	<!--
	==================================================================
	  # 설명	: 평가착안사항 ID 생성
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_CONCEPT
	==================================================================
	-->
	<select id="getDetailEvalConceptId" parameterClass="hashMap" resultClass="java.lang.String">
		SELECT 'BC' || GREATEST(NVL(LPAD(SUBSTR(MAX(CONCEPT_ID), 3) + 1, 5, '0'), #maxConceptId#), #maxConceptId#) CONCEPT_ID
		  FROM BOSS_DETAIL_EVAL_CONCEPT
		 WHERE YEAR = #year#
	</select>

	<!--
	==================================================================
	  # 설명	: 평가착안사항 MAX ID를 가져온다.
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_CONCEPT
	==================================================================
	-->
	<select id="getMaxConceptId" parameterClass="hashMap" resultClass="java.lang.String">
		SELECT NVL(LPAD(SUBSTR(MAX(CONCEPT_ID), 3) + 1, 5, '0'), '00001') MAX_CONCEPT_ID
		  FROM BOSS_DETAIL_EVAL_CONCEPT
		 WHERE YEAR = #year#
	</select>

	<!--
	==================================================================
	  # 설명	: 기관장지표관리 목록 보기(비계량)
	  #	기능	: SELECT
	  #	TABLE	: BOSS_METRIC
	==================================================================
	-->
	<select id="getNonMetricList" parameterClass="hashMap" resultClass="hashMap">
		 SELECT BOSS_METRIC_ID
              , BOSS_METRIC_NM
          FROM BOSS_METRIC
         WHERE YEAR = #year#
           AND GBN_ID ='02'
           AND DELETE_DT IS NULL
        ORDER BY SORT_ORDER
	</select>


	<!--
	==================================================================
	  # 설명	: 지표Pool 착안내용 목록 조회
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_CONCEPT
	==================================================================
	-->
	<select id="detailConceptList" parameterClass="hashMap" resultClass="hashMap">
        SELECT A.YEAR
             , A.CONCEPT_ID
             , A.CONCEPT_NM
             , B.DETAIL_EVAL_ID
             , B.DETAIL_EVAL_NM
             , C.BOSS_METRIC_ID
             , C.BOSS_METRIC_NM
             , B.INSERT_USER_ID
             , D.USER_NM AS INSERT_USER_NM
             , F_DEPT_FULL_NM (#year#, D.DEPT_ID, 'V_DEPTINFO') SC_DEPT_NM
        FROM BOSS_DETAIL_EVAL_CONCEPT A
        INNER JOIN BOSS_DETAIL_EVAL_ITEM B ON A.YEAR = B.YEAR AND A.DETAIL_EVAL_ID = B.DETAIL_EVAL_ID
        LEFT OUTER JOIN BSC_USERINFO D ON B.INSERT_USER_ID = D.USER_ID
        INNER JOIN BOSS_METRIC C ON B.YEAR = C.YEAR AND B.BOSS_METRIC_ID = C.BOSS_METRIC_ID
        WHERE A.YEAR = #year#
          AND B.DETAIL_EVAL_ID = #detailEvalId#
          AND C.BOSS_METRIC_ID = #bossMetricId#
        ORDER BY A.SORT_ORDER, B.SORT_ORDER, C.SORT_ORDER
	</select>

	<!--
	==================================================================
	  # 설명	: 지표이름를 가져온다.
	  #	기능	: SELECT
	  #	TABLE	: BOSS_METRIC
	==================================================================
	-->
	<select id="getBossMetric" parameterClass="hashMap" resultClass="hashMap">
		SELECT BOSS_METRIC_ID, BOSS_METRIC_NM
		  FROM BOSS_METRIC
		 WHERE (YEAR, BOSS_METRIC_ID) IN (
		                                    SELECT YEAR, BOSS_METRIC_ID
		                                      FROM BOSS_DETAIL_EVAL_ITEM
		                                     WHERE (YEAR, DETAIL_EVAL_ID) IN (SELECT YEAR, DETAIL_EVAL_ID FROM BOSS_DETAIL_EVAL_CONCEPT WHERE YEAR = #year# AND CONCEPT_ID = #govConceptId#)
		                                )
	</select>

	<!--
	==================================================================
	  # 설명	: 세부평가내용 리스트를 가져온다.
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_ITEM
	==================================================================
	-->
	<select id="getDetailEval" parameterClass="hashMap" resultClass="hashMap">
		SELECT DETAIL_EVAL_ID, DETAIL_EVAL_NM
		  FROM BOSS_DETAIL_EVAL_ITEM
		 WHERE (YEAR, DETAIL_EVAL_ID) IN (SELECT YEAR, DETAIL_EVAL_ID FROM BOSS_DETAIL_EVAL_CONCEPT WHERE YEAR = #year# AND CONCEPT_ID = #govConceptId#)
	</select>

	<!--
	==================================================================
	  # 설명	: 평가착안사항 리스트를 가져온다.
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_CONCEPT
	==================================================================
	-->
	<select id="getConcept" parameterClass="hashMap" resultClass="hashMap">
		SELECT CONCEPT_ID, CONCEPT_NM
		  FROM BOSS_DETAIL_EVAL_CONCEPT
		 WHERE YEAR = #year# AND CONCEPT_ID = #govConceptId#
	</select>

	<!--
	==================================================================
	  # 설명	: 실행계획 리스트를 가져온다.
	  #	기능	: SELECT
	  #	TABLE	: BOSS_DETAIL_EVAL_CONCEPT
	==================================================================
	-->
	<select id="getActionPlanList" parameterClass="hashMap" resultClass="hashMap">
        SELECT C.PLAN_ID, C.PLAN_NM
          FROM BOSS_ACTION_PLAN C
         WHERE C.YEAR = #year# AND C.CONCEPT_ID = #govConceptId#
         ORDER BY C.SORT_ORDER
	</select>
</sqlMap>


