#*************************************************************************
* CLASS 명      : memEvalModify
* 작 업 자      : 유연주
* 작 업 일      : 2017년 03월 28일 
* 기    능      : 업무수행평가     
* ---------------------------- 변 경 이 력 --------------------------------
* 번호    작 업 자    작     업     일        변 경 내 용                비고
* ----  --------  -----------------  -------------------------  --------
*  1    유연주      2017년 03월 28일              최 초 작 업 
**************************************************************************# 
<script type="text/javascript" language="javascript" >
//<![CDATA[

	var J = jQuery;
	var allEvalReq = true;
	
	J(document).ready(function(){
    
		/******************************************
		 * 데이터 그리드 출력
		 ******************************************/
		var str = J('#formFind').serialize();
		
		#set ($index = 1)
		
		jQuery("#list").jqGrid({
			url          :"$!{context_path}/mem/eval/memEval/memEvalModify_xml.vw" + "?" + str,
			mtype        :"POST",
			datatype     :"json",
			jsonReader   : {   
    						page   : "page",
    						total  : "total",
    						root   : "rows", 
    						records: function(obj) {return obj.length;},
    						repeatitems: false, 
    						id     : "id"
    				       },
			##height       : $!{jqGrid_height},
			height       : 250,
			width        : $!{jqGrid_width},
			colNames     :['평가년도', '사번', '대상자순번', '이름', '실적조회', '면담조회', '일괄적용'
				#foreach($evalItem in $evalItemList)
							#set ($item = "평가항목" + $index)
							, '$!CS_HTML.txt2html($item)'
							#set ($index = $index + 1)
				#end
							, '가점(공모)', '가점(공모)여부', '환산점수', '순위', '평가의견', '평가요청여부'],
			colModel     :[
							{name:'YEAR'				,index:'YEAR'				,width:150		,align:'center' }, 
                            {name:'EVAL_MEMB_EMPN'		,index:'EVAL_MEMB_EMPN'		,width:50		,align:'center'	},
                            {name:'SEQS'                ,index:'SEQS'               ,width:80       ,align:'center' },
                            {name:'KOR_NM'				,index:'KOR_NM'				,width:50		,align:'center'	},
                            {name:'ACT'				    ,index:'ACT'				,width:50		,align:'center',	formatter:linkActBtn},
                            {name:'MEET'				,index:'MEET'				,width:50		,align:'center',	formatter:linkMeetBtn},
                            {name:'ALL_APPLY'			,index:'ALL_APPLY'			,width:50		,align:'center',	formatter:linkAllApplyBtn},
				#foreach($evalItem in $evalItemList)
							{name:'$!CS_HTML.txt2html($evalItem.EVAL_ITEM_ID)', index:'$!CS_HTML.txt2html($evalItem.EVAL_ITEM_ID)', width:60, align:'center', formatter:linkEvalGrade	},
				#end
							{name:'EXTRA_POINT'			,index:'EXTRA_POINT'		,width:60 		,align:'center',	formatter:linkExtraPoint },
							{name:'EXTRA_POINT_YN'		,index:'EXTRA_POINT_YN'		,width:0 		,align:'center' },
							{name:'SCORE'				,index:'SCORE'				,width:50 		,align:'center' },
							{name:'RANK'				,index:'RANK'				,width:30 		,align:'center' },
							{name:'EVAL_OPINION'		,index:'EVAL_OPINION'		,width:150 		,align:'center',	formatter:linkEvalOpinion },
							{name:'EVAL_REQ_YN'			,index:'EVAL_REQ_YN'		,width:0 		,align:'center' }
							],
			rowNum       : $!{jqGrid_rownum},
			autowidth    : false, 
			viewrecords  : true,
			loadonce     : true,
			cmTemplate	 : {sortable:false},
			multiselect  : false,
			cellEdit     : false,
			gridview     : true,
			##datatype	 : 'local',
			loadComplete : function() {
								var ids	= J("#list").jqGrid('getDataIDs');
								for (var i = 0; i < ids.length; i++) {
									var row = J("#list").jqGrid("getRowData", ids[i]);
									if(row.EVAL_REQ_YN == "N"){
										allEvalReq = false;
										var str = "※  평가요청하지 않은 평가대상자가 존재합니다.";
										J("#alertDis").html(J("#alertDis").html() + "<BR>" + str);
										J("#btnSave").hide();
										J("#btnComplete").hide();
										J("#btnCancel").hide();
										break;
									}
								}
								//rank();
								checkGrade(false);
							},
			caption:"업무수행평가"
		}).jqGrid('hideCol',"YEAR").jqGrid('hideCol',"SEQS").jqGrid('hideCol',"EXTRA_POINT_EMPN").jqGrid('hideCol',"EVAL_REQ_YN").jqGrid('hideCol',"EXTRA_POINT_YN").setGridWidth($!{jqGrid_width});
		
		J("#list").jqGrid('setGroupHeaders', {
          useColSpanStyle: true,
          groupHeaders:[
      #set($evalItemListSize = $!{CS_HTML.txt2html($evalItemList.size())})
      #set($evalItemRowSize = 0)
      #foreach($evalItemList in $evalItemList)
      	#if($evalItemList.CAL_NUM == 1)
      		#set($evalItemRowSize = $evalItemRowSize + $evalItemList.CAL_CNT)
      		#if($evalItemRowSize == $evalItemListSize)
          		{startColumnName: '$evalItemList.EVAL_ITEM_ID',		numberOfColumns: $evalItemList.CAL_CNT, titleText: '<em>$evalItemList.JOB_EVAL_ITEM_NM</em>'}
      		#else
          		{startColumnName: '$evalItemList.EVAL_ITEM_ID',		numberOfColumns: $evalItemList.CAL_CNT, titleText: '<em>$evalItemList.JOB_EVAL_ITEM_NM</em>'},
      		#end
   
      	#end
      #end
		  ]
        });
		
		//***********************************
		// 등급배분표 그리드
		//***********************************
		jQuery("#gradeDistri").jqGrid({
			url          :"$!{context_path}/mem/eval/memEval/gradeItemList_xml.vw" + "?" + str,
			mtype        :"POST",
			datatype     :"json",
			jsonReader   : {   
    						page   : "page",
    						total  : "total",
    						root   : "rows", 
    						records: function(obj) {return obj.length;},
    						repeatitems: false, 
    						id     : "id"
    				       },
			height       : 135,
			width        : $!{jqGrid_width},
			colNames     :['평가항목ID', '', '', '평가항목명', 'CAL_CNT', 'CAL_NUM'
			#if($!{CS_HTML.txt2html($evalRate.EVAL_METHOD_ID)} != "02")
				#foreach($evalGrade in $evalGrade)
							, '$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_NM) ($!CS_HTML.txt2html($evalGrade.ITEM_DISTRI_CNT)명)'
				#end
							, '배점'
			#end
							],
			colModel     :[
							{name:'EVAL_ITEM_ID'		,index:'EVAL_ITEM_ID'		,width:100		,align:'center'	},
							{name:'JOB_EVAL_ITEM_NM'	,index:'JOB_EVAL_ITEM_NM'	,width:150		,align:'center', cellattr:attrSetting}, 
							{name:'EVAL_ITEM_SHORT_NM'	,index:'EVAL_ITEM_SHORT_NM'	,width:100		,align:'center'	}, 
                            {name:'EVAL_ITEM_NM'		,index:'EVAL_ITEM_NM'		,width:300		,align:'left'	},
                            {name:'CAL_CNT'             ,index:'CAL_CNT'            ,width:0        ,align:'center' },
							{name:'CAL_NUM'             ,index:'CAL_NUM'            ,width:0        ,align:'center' }

	#if($!{CS_HTML.txt2html($evalRate.EVAL_METHOD_ID)} != "02")
				#foreach($evalGrade in $evalGrade)
						,	{name:'$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_ID)', index:'$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_ID)', width:100, align:'center'	}
				#end
							, {name:'SCORE'		,index:'SCORE'		,width:100		,align:'left'	}
	#end
							],
			rowNum       : $!{jqGrid_rownum},
			autowidth    : false, 
			viewrecords  : true,
			loadonce     : true,
			cmTemplate	 : {sortable:false},
			multiselect  : false,
			cellEdit     : false,
			gridview     : true,
            loadComplete : function() {
            },
			caption:"등급배분표"
		}).jqGrid('hideCol',"EVAL_ITEM_ID").jqGrid('hideCol',"SCORE").jqGrid('hideCol',"CAL_CNT").jqGrid('hideCol',"CAL_NUM").setGridWidth($!{jqGrid_width});

		/******************************************
		 * 조회
		 ******************************************/
		J("#formFind").submit(function(event) {
			//submit 하기전 작업추가
		});
		
		/******************************************
		 * 취소버튼 (돌아가기)
		 ******************************************/
		J("#btnBack").click(function() {
			J("#formFind").attr("action", "$!{context_path}/mem/eval/memEval/memEvalList.vw?type=template").submit();
		});
	
		/******************************************
		 * 저장버튼 이벤트
		 ******************************************/
		J("#btnSave").click(function() {
			saveChk(true);
		});
		
		/******************************************
		 * 완료버튼 이벤트
		 ******************************************/
		J("#btnComplete").click(function() {
			completeChk(true);
		});
		/******************************************
		 * 완료취소버튼 이벤트
		 ******************************************/
		J("#btnCancel").click(function() {
			cancelChk(true);
		});
		
		/******************************************
         * fancybox
         ******************************************/
        J("#anchor").fancybox();      //상세팝업
		
		// 평가기간 보여주기
		if( "Y" == "$!{periodInfo.EVAL_IN_TERM}" ){
			var lastGrade = "";
			var lastsecondGrade = "";
			#set($listSize = $!{CS_HTML.txt2html($evalGrade.size())})
			#set($idx = 0)
			#foreach($evalGrade in $evalGrade)
				#set($idx = $idx + 1)
				#if ($idx == $listSize)
					lastGrade = "$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_NM)";
				#end
				#if ($idx + 1 == $listSize)
					lastsecondGrade = "$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_NM)";
				#end
			#end
		
			var startDt = "$!{periodInfo.EVAL_START_DT}";
			var endDt = "$!{periodInfo.EVAL_END_DT}";
			var str = "";
			if( startDt.length > 0 && endDt.length > 0 ){
				str += "※  평가기간 : " + startDt + " ~ " + endDt;
		#if($!{CS_HTML.txt2html($evalRate.EVAL_METHOD_ID)} != "02")
				str += "<br>";
				str += "※  최하위 등급("+lastGrade+")을 부여할 만한 특별한 사유가 없다고 판단되는 경우에는 "+lastGrade+" 등급의 비율인원 만큼 각각 "+lastsecondGrade+"에 추가하여 평가할 수 있음.";
		#end
			}
			
			J("#alertDis").html(str);
		} else {
			J("#alertDis").html("※  업무수행평가 기간이 아닙니다." ).attr("class","txt_red");
		}
	});
	
	/*****************************************
	 * 평가항목 Rowspan 설정
	 ******************************************/
	function attrSetting(rowId, val, rowObject, cm) {
		var result;
		var index = rowObject.CAL_NUM;
		var rowSpan = rowObject.CAL_CNT;

		if(index == 1) {
			result = ' rowspan="' + rowSpan + '"';
		} else {
			result = ' style="display:none"';
		}

		return result;
	}
	
	/******************************************
     * 필수입력 체크
	 * 평가가 모두 마무리 되었는지 체크
     ******************************************/
    function saveChk() {
		var ids	= J("#list").jqGrid('getDataIDs');
		
		for (var i = 0; i < ids.length; i++) {
			var row = J("#list").jqGrid("getRowData", ids[i]);
			
			var selbox = J("#formList select[name*='evalGrade" + row.EVAL_MEMB_EMPN + "']");
			
			for (var j = 0; j < selbox.length; j++) {
    			if (selbox[j].options[selbox[j].selectedIndex].value == "-1") {
    				alert("평가가 완료되지 않아 평가를 제출할 수 없습니다.");
    				selbox[j].focus();
    				return;
    			}
    		}
		}
		
        if(checkGrade(true))
		  J.showConfirmBox("평가를 저장하시겠습니까?", "saveDo"); //saveDo() 콜백함수 호출
    }
    
	/******************************************
     * 필수입력 체크
	 * 평가가 모두 마무리 되었는지 체크
     ******************************************/
    function completeChk() {
		var ids	= J("#list").jqGrid('getDataIDs');
		
		for (var i = 0; i < ids.length; i++) {
			var row = J("#list").jqGrid("getRowData", ids[i]);
			
			var selbox = J("#formList select[name*='evalGrade" + row.EVAL_MEMB_EMPN + "']");
			
			for (var j = 0; j < selbox.length; j++) {
    			if (selbox[j].options[selbox[j].selectedIndex].value == "-1") {
    				alert("평가가 완료되지 않아 평가를 제출할 수 없습니다.");
    				selbox[j].focus();
    				return;
    			}
    		}
		}
		
        if(checkGrade(true))
		  J.showConfirmBox("평가를 완료하시겠습니까?", "confirmDo"); //confirmDo() 콜백함수 호출
    }
    
	/******************************************
     * 필수입력 체크
	 * 평가가 모두 마무리 되었는지 체크
     ******************************************/
    function cancelChk() {
        if(checkGrade(true))
		  J.showConfirmBox("평가를 완료취소하시겠습니까?", "cancelDo"); //cancelDo() 콜백함수 호출
    }
	
	/******************************************
     * 저장
	 * 전체 평가대상자에 대해서 평가완료로 저장을 하고
	 * 평가제출여부 컬럼을 업데이트 한다.
     ******************************************/
    function saveDo() {	
		var ids	= J("#list").jqGrid('getDataIDs');
		
		J("#mode").val("SUBMIT");
        J("#formList").attr("action", "$!{context_path}/mem/eval/memEval/memEvalProcess.vw?type=template").submit();
                
        return false;
    }
    
	/******************************************
     * 완료처리
	 * 전체 평가대상자에 대해서 평가완료로 저장을 하고
	 * 평가제출여부 컬럼을 업데이트 한다.
     ******************************************/
    function confirmDo() {
		var ids	= J("#list").jqGrid('getDataIDs');
		
		J("#mode").val("COMPLETE");
        J("#formList").attr("action", "$!{context_path}/mem/eval/memEval/memEvalProcess.vw?type=template").submit();
                
        return false;
    }

	/******************************************
	 * 제출취소
	 ******************************************/
	function cancelDo() {
		J("#mode").val("CANCEL");
		J("#formList").attr("action", "$!{context_path}/mem/eval/memEval/memEvalProcess.vw?type=template").submit();
	}
	
	function showRpt(year, evalGrpId, evalMembEmpn) {
		J("#anchor").attr("href","$!{context_path}/mem/eval/memEval/showRpt.vw?findYear="+year+ "&amp;evalGrpId=" + evalGrpId +"&amp;evalMembEmpn="+evalMembEmpn);
        J("#anchor").click();
        return false;
	}
    
    function submitItem(empn, seq) {
        var cnt = J("select[name=evalGrade"+empn+"]").length;
        var itemValue = J("select[name=evalGrade"+empn+"]:eq(0)").val();
        
        if( itemValue != "-1" && itemValue != ""){
            for(var i = 1; i < cnt ; i++){
                J("select[name=evalGrade"+empn+"]:eq("+i+")").val(itemValue);
            }
        }

        checkGrade(false);
        //calcScore("evalGrade"+empn+seq);
        //rank();
    }

	/******************************************
	 * jqGrid 평가항목별 평가등급
	 ******************************************/
	function linkEvalGrade(cellvalue, options, rowObject) {
		// cellvalue는 등급코드,평가항목ID
		// ex) GC0003,EI00009

		var item = [];
		item = cellvalue.split(",");
		
		var readOnlyStr = "";
		if(rowObject.EVAL_REQ_YN == 'N'){
			readOnlyStr = "disabled";
		}
		
		var str = "";
		str += "<select id=\"evalGrade" + rowObject.EVAL_MEMB_EMPN + "_" + item[1] + "\" name=\"evalGrade" + rowObject.EVAL_MEMB_EMPN + "_" + item[1] + "\" class=\"select w60\" "+readOnlyStr+" onchange=\"changeGrade(this);\" onclick=\"clickGrade(this);\" ";
		
		if (rowObject.EVAL_END_YN == "Y")
			str += "disabled=\"true\"";
			
		str += ">";
		
		str += "<option value=\"-1\">선택</option>";
		
		#foreach($evalGrade in $evalGrade)
			str += "<option value=\"$!{CS_HTML.txt2html($evalGrade.GRADE_ITEM_ID)}\">$!{CS_HTML.txt2html($evalGrade.GRADE_ITEM_NM)}</option>".replace("\"" + item[0] + "\"", "\"" + item[0] + "\" selected");
		#end
		str += "</select>"
		return str;
	}
    
	function clickGrade(grade) {
		J("#prevSelectedGrade").val(grade.options[grade.selectedIndex].value);
	}
	
	/******************************************
	 * 평가항목별 평가등급 change 이벤트 처리
	 * 평가항목별로 등급을 지정한대로 등급배분표에 적용
	 * 등급배분표에 따라 설정된 인원이상 등급을 지정할 수 없음
	 * 마지막 전 등급은,마지막 전 등급 마지막등급 인원배분을 합산한 만큼 지정할 수 있음
	 ******************************************/
	function changeGrade(grade) {
	#if($!{CS_HTML.txt2html($evalRate.EVAL_METHOD_ID)} == "02")
		return;
	#end		
		var ids = J("#gradeDistri").jqGrid('getDataIDs');
		var id = "#" + grade.options[grade.selectedIndex].value;
		
		var lastGrade = "";
		var lastsecondGrade = "";
		#set($listSize = $!{CS_HTML.txt2html($evalGrade.size())})
		#set($idx = 0)
		#foreach($evalGrade in $evalGrade)
			#set($idx = $idx + 1)
			#if ($idx == $listSize)
				lastGrade = "$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_NM)";
			#end
			#if ($idx + 1 == $listSize)
				lastsecondGrade = "$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_NM)";
			#end
		#end
		for (var i = 0; i < ids.length; i++) {
			var row = J("#gradeDistri").getRowData(ids[i]);
			if (row.EVAL_ITEM_ID == grade.id.split("_")[1]) {
				var cnt = 0;
				var distriCnt = 0;
				// 평가등급을 선택했으면
				if ("-1" != grade.options[grade.selectedIndex].value) {
					if (grade.options[grade.selectedIndex].text == lastsecondGrade) { // 마지막전 등급 인원배분 처리
						var c_id = "#" + J("#"+lastsecondGrade).val();
						var d_id = "#" + J("#"+lastGrade).val();
						if (row[J("#"+lastsecondGrade).val()] != undefined && row[J("#"+lastsecondGrade).val()] != "")
    						cnt = parseInt(row[J("#"+lastsecondGrade).val()]);
							
						if (row[J("#"+lastGrade).val()] != undefined && row[J("#"+lastGrade).val()] != "")
    						cnt += parseInt(row[J("#"+lastGrade).val()]);
						
						// 이전에 선택한 등급이 D일 경우 카운트에서 -1
						if (J("#prevSelectedGrade").val() == J("#"+lastGrade).val())
							cnt--;
						if (cnt < 0) cnt = 0;
							
						if (J(c_id).val() != undefined && J(c_id).val() != "")
    						distriCnt = parseInt(J(c_id).val());
							
						if (J(d_id).val() != undefined && J(d_id).val() != "")
    						distriCnt += parseInt(J(d_id).val());
					} else if (grade.options[grade.selectedIndex].text == lastGrade) { // 마지막 등급 인원배분 처리
						var c_id = "#" + J("#"+lastsecondGrade).val();
						var d_id = "#" + J("#"+lastGrade).val();
						var d_distriCnt = 0;
						var d_cnt = 0;
						var e_cnt = 0;
						
						if (row[J("#"+lastsecondGrade).val()] != undefined && row[J("#"+lastsecondGrade).val()] != "") {
    						d_cnt = parseInt(row[J("#"+lastsecondGrade).val()]);
						}
						
						if (row[J("#"+lastGrade).val()] != undefined && row[J("#"+lastGrade).val()] != "")
    						e_cnt += parseInt(row[J("#"+lastGrade).val()]);
						
						if (J(c_id).val() != undefined && J(c_id).val() != "")
    						d_distriCnt = parseInt(J(c_id).val());
							
						if (d_distriCnt - d_cnt < 0) {
							cnt = e_cnt + (d_cnt - d_distriCnt);
							// 이전에 선택한 등급이 C일 경우 카운트에서 -1
    						if (J("#prevSelectedGrade").val() == J("#"+lastsecondGrade).val())
    							cnt--;
						} else
							cnt = e_cnt;
						
						if (J(d_id).val() != undefined && J(d_id).val() != "")
    						distriCnt += parseInt(J(d_id).val());
					} else {
						if (row[grade.options[grade.selectedIndex].value] != undefined && row[grade.options[grade.selectedIndex].value] != "")
        					cnt = parseInt(row[grade.options[grade.selectedIndex].value]);
        				
        				if (J(id).val() != undefined && J(id).val() != "")
        					distriCnt = parseInt(J(id).val());
					}
					
					if (cnt + 1 > distriCnt) {
    					//alert(row.EVAL_ITEM_SHORT_NM + "(" + row.EVAL_ITEM_NM + ") 의 " + grade.options[grade.selectedIndex].text + " 인원수(" + distriCnt + "명)가 등급배분표인원이 초과하였습니다.");
    					//grade.value = J("#prevSelectedGrade").val();
    					//return;
    				}
					
					if (row[grade.options[grade.selectedIndex].value] != undefined && row[grade.options[grade.selectedIndex].value] != "")
    					cnt = parseInt(row[grade.options[grade.selectedIndex].value]);
    				
    				if (J(id).val() != undefined && J(id).val() != "")
    					distriCnt = parseInt(J(id).val());
					
    				J("#gradeDistri").jqGrid('setCell', ids[i], grade.options[grade.selectedIndex].value, cnt + 1);
    				row[grade.options[grade.selectedIndex].value] = cnt + 1;
				}
				
				if (row[J("#prevSelectedGrade").val()] != undefined && row[J("#prevSelectedGrade").val()] != "")
					cnt = parseInt(row[J("#prevSelectedGrade").val()]);
					
    			if (cnt > 0) 
					cnt--;
					
				J("#gradeDistri").jqGrid('setCell', ids[i], J("#prevSelectedGrade").val(), cnt);
				row[J("#prevSelectedGrade").val()] = cnt;
				
				// 환산점수 계산
				//calcScore(grade.id);
				//rank();
		
				return;
			}
		}
	}
    
    gradeObject = function(name, code, limitValue){
        this.name = name;   //등급명
        this.code = code;   //등급코드
        this.limitValue = limitValue;   //한계갯수
    }
    
    var grade = new Array();
    var lastsecondIndex = 0;
    var lastIndex = 0;
    
	var lastGrade = "";
	var lastsecondGrade = "";
	#set($listSize = $!{CS_HTML.txt2html($evalGrade.size())})
	#set($idx = 0)
	#foreach($evalGrade in $evalGrade)
		#set($idx = $idx + 1)
		#if ($idx == $listSize)
			lastGrade = "$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_NM)";
		#end
		#if ($idx + 1 == $listSize)
			lastsecondGrade = "$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_NM)";
		#end
	#end
    
    #set($gradeCnt = 0)
    #foreach($evalGrade in $evalGrade)
        grade[$gradeCnt]= new gradeObject("$evalGrade.GRADE_ITEM_NM","$evalGrade.GRADE_ITEM_ID","$evalGrade.ITEM_DISTRI_CNT");
        if(grade[$gradeCnt].name == lastsecondGrade) lastsecondIndex = $gradeCnt;
        if(grade[$gradeCnt].name == lastGrade) lastIndex = $gradeCnt;
        #set($gradeCnt = $gradeCnt + 1)
    #end

    grade[lastsecondIndex].limitValue = (grade[lastsecondIndex].limitValue * 1) + (grade[lastIndex].limitValue * 1);
    
    /******************************************
     * 등급배분 확인
     ******************************************/
    function checkGrade(isAlert){
    #if($!{CS_HTML.txt2html($evalRate.EVAL_METHOD_ID)} == "02")
    	isAlert = false;
    #end
        var ids = J("#list").jqGrid('getDataIDs');
        var itemIds = J("#gradeDistri").jqGrid('getDataIDs');
        var itemList = new Array();
        var isSubmit = true;
        
		var evalItemIds = new Array();
		#set($idx = 0)
		#foreach($evalItem in $evalItemList)
			evalItemIds[$idx] = "$evalItem.EVAL_ITEM_ID";
			#set($idx = $idx + 1)
		#end
        
        for (var i = 0; i < itemIds.length; i++) {
            itemList[i] =  new Array();
            for(var j = 0; j < grade.length; j++){
                itemList[i][j] = 0;
            }
        }
        
        for (var i = 0; i < ids.length; i++) {
            var row = J("#list").jqGrid("getRowData", ids[i]);
            var empn = row.EVAL_MEMB_EMPN;
            for(var j = 0; j < itemList.length; j ++){
            	var selObjNm = "evalGrade"+empn+"_"+evalItemIds[j];
				selObj = document.getElementById(selObjNm);
                var evalGrade = selObj.value;
                for(var k = 0; k < grade.length; k++){
                    if(grade[k].code == evalGrade){
                        itemList[j][k]++; 
                    }
                }
            }
        }
        
        if(isAlert){
            for(var i = 0; i < itemIds.length; i++){
                var itemRow = J("#gradeDistri").jqGrid("getRowData", itemIds[i]);
                for(var j = 0; j < grade.length - 2; j++){
                    if(itemList[i][j] > grade[j].limitValue){
                        alert(itemRow.EVAL_ITEM_SHORT_NM + "(" + itemRow.EVAL_ITEM_NM + ") 의 " + grade[j].name + " 인원수(" + grade[j].limitValue + "명)가 등급배분표인원이 초과하였습니다.\n평가제출할 수 없습니다.");
                        return false;
                    }
                }
                
                if(itemList[i][j] + itemList[i][j+1] > (grade[j].limitValue * 1) + (grade[j + 1].limitValue * 1)){
                   alert(itemRow.EVAL_ITEM_SHORT_NM + "(" + itemRow.EVAL_ITEM_NM + ") 의 " + grade[j].name + " 인원수(" + grade[j].limitValue + "명)가 등급배분표인원이 초과하였습니다.\n평가제출할 수 없습니다.");
                   return false;
                }
                if(itemList[i][j] < itemList[i][j+1]){
                   alert(itemRow.EVAL_ITEM_SHORT_NM + "(" + itemRow.EVAL_ITEM_NM + ") 의 " + grade[j+1].name + " 인원수(" + grade[j+1].limitValue + "명)가 등급배분표인원이 초과하였습니다.\n평가제출할 수 없습니다.");
                   return false;
                }
            }
        }
        
        return isSubmit;
    
    }
     
	/******************************************
	 * 순위 계산
	 ******************************************/
	function rank() { 
		var ids = J("#list").jqGrid('getDataIDs');
		var scores = new Array(ids.length);
		var ranks = new Array(ids.length);
		var grades = new Array(ids.length);
		
		#set ($gradeS = 0)
		#set ($gradeA = 0)
		#set ($gradeB = 0)
		#set ($gradeC = 0)
		#set ($gradeD = 0)
		
		#foreach($evalGrade in $evalGrade)
			#if ($evalGrade.GRADE_ITEM_NM == "S") 	#set ($gradeS = $gradeS + $evalGrade.ITEM_DISTRI_CNT) #end
			#if ($evalGrade.GRADE_ITEM_NM == "A") 	#set ($gradeS = $gradeA + $evalGrade.ITEM_DISTRI_CNT) #end
			#if ($evalGrade.GRADE_ITEM_NM == "B") 	#set ($gradeA = $gradeB + $evalGrade.ITEM_DISTRI_CNT) #end
			#if ($evalGrade.GRADE_ITEM_NM == "C") 	#set ($gradeB = $gradeC + $evalGrade.ITEM_DISTRI_CNT) #end
			#if ($evalGrade.GRADE_ITEM_NM == "D") 	#set ($gradeC = $gradeD + $evalGrade.ITEM_DISTRI_CNT) #end
		#end

		for (var i = 0; i < ids.length; i++) {
			var row = J("#list").getRowData(ids[i]);
			var score = 0;
			
			if (getStr(row.SCORE) != "")
				score += parseFloat(row.SCORE);
			
			score = score.toFixed(2); 
				
			J("#list").jqGrid('setCell', ids[i], "FINAL_SCORE", score);
			row.FINAL_SCORE = score;
			
			scores[i] = score;
		}
		
		// 순위를 계산
		for (var i = 0; i < scores.length; i++) {
			var ranking = 0;

			if (scores[i] != "" && scores[i] != "0") {
    			for (var j = 0; j < scores.length; j++) {
    				if (i != j) {
    					if (scores[j] == "") {
							if (ranking == 0)
						 		ranking = 1;
						} else {
							if (parseFloat(scores[i]) < parseFloat(scores[j])) {
								if (ranking == 0)
									ranking = 2;
								else
									ranking++;
							} else if (parseFloat(scores[i]) > parseFloat(scores[j])) {
								if (ranking == 0)
									ranking = 1;
							} else {
								if (ranking == 0)
									ranking = 1;
							}
						}
    				}
    			}
			}
			
			ranks[i] = ranking;
		}
		
		for (var i = 0; i < ids.length; i++) {
			var row = J("#list").getRowData(ids[i]);
			var ranking = " ";
			
			if (ranks[i] > 0)
				ranking = ranks[i];
			else
				ranking = 1;
			
			J("#list").jqGrid('setCell', ids[i], "RANK", ranking);
			row.RANK = ranking;
			
			if (ranking != " ") {
				if (ranking <= ${CS_HTML.txt2html($gradeS)}) {
    				J("#list").jqGrid('setCell', ids[i], "GRADE", "S");
    				row.GRADE = "S";
				} else if (ranking <= ${CS_HTML.txt2html($gradeS)} + ${CS_HTML.txt2html($gradeA)}) {
    				J("#list").jqGrid('setCell', ids[i], "GRADE", "A");
    				row.GRADE = "A";
				} else if (ranking <= ${CS_HTML.txt2html($gradeS)} + ${CS_HTML.txt2html($gradeA)} + ${CS_HTML.txt2html($gradeB)}) {
    				J("#list").jqGrid('setCell', ids[i], "GRADE", "B");
    				row.GRADE = "B";
				} else if (ranking <= ${CS_HTML.txt2html($gradeS)} + ${CS_HTML.txt2html($gradeA)} + ${CS_HTML.txt2html($gradeB)} + ${CS_HTML.txt2html($gradeC)}) {
    				J("#list").jqGrid('setCell', ids[i], "GRADE", "C");
    				row.GRADE = "C";
				} else if (ranking <= ${CS_HTML.txt2html($gradeS)} + ${CS_HTML.txt2html($gradeA)} + ${CS_HTML.txt2html($gradeB)} + ${CS_HTML.txt2html($gradeC)} + ${CS_HTML.txt2html($gradeD)}) {
    				J("#list").jqGrid('setCell', ids[i], "GRADE", "D");
    				row.GRADE = "D";
				}
			} else {
				J("#list").jqGrid('setCell', ids[i], "GRADE", " ");
				row.GRADE = " ";
			}
		}
	}
	
	function getStr(str) {
		var retVal = "";
		
		if (str != undefined) 
			retVal = str;
		
		return retVal;
	}
	
	/******************************************
	 * 환산점수 컬럼 계산
	 ******************************************/
	function calcScore(id) {
		var empn = id.split("_")[0].replace("evalGrade", "");
		var ids = J("#list").jqGrid('getDataIDs');
		
		var evalDegreeId = J("#findEvalDegreeId").val();
		
		for (var i = 0; i < ids.length; i++) {
			var row = J("#list").getRowData(ids[i]);
			
			if (row.EVAL_MEMB_EMPN == empn) {
				var score = 0;
				var extraPoint = 0;
				
				score = getScore(row.EVAL_MEMB_EMPN);
				
				// 가점계산
				if (row.EXTRA_POINT_EMPN != "" && J("#extra" + row.EVAL_MEMB_EMPN).val() != "" && evalDegreeId == "20")
					extraPoint = parseFloat(J("#extra" + row.EVAL_MEMB_EMPN).val());
				
				score = score + extraPoint;
				if (score > 10) score = 10;
				//score = Math.floor(score * 10) / 10;
				
				score = score.toFixed(2);
				
				J("#list").jqGrid('setCell', ids[i], "SCORE", score);
				row["SCORE"] = score;
				
				return score;
			}
		}
		
		return 0;
	}
	
	function getScore(empn) {
		var selbox = J("#formList select[name*='evalGrade" + empn + "']");
		var score = 0;
		
		for (var j = 0; j < selbox.length; j++) {
			var id = "#rate" + selbox[j].options[selbox[j].selectedIndex].value;
			var rate = 0;	// 등급별 점수 반영 비율
			var itemScore = 0;
			
			if (J(id).val() != "" && J(id).val() != undefined) 
				itemScore = parseInt(J(id).val());
			
			if (selbox[j].options[selbox[j].selectedIndex].value == "-1") {
				score += 0;
			} else {
				rate = getItemScore(selbox[j].id.split("_")[1]);
				//score += (itemScore * (rate / 100));
				score += (itemScore * rate);
			}
		}
		
		//score = Math.floor(score * 10) / 10;
		score = score  / 100;

		return score;
	}
	
	function getItemScore(itemId) {
		var ids = J("#gradeDistri").jqGrid('getDataIDs');
		var score = 0;
		
		for (var i = 0; i < ids.length; i++) {
			var row = J("#gradeDistri").getRowData(ids[i]);
			
			if (row.EVAL_ITEM_ID == itemId) {

				if (row.SCORE != undefined && row.SCORE != "")
					score = parseInt(row.SCORE);
				
				return score;
			}
		}
		
		return score;
	}
	
	/******************************************
	 * 실적버튼 보여주기
	 ******************************************/
	 function linkActBtn(cellvalue, opions, rowObject) {
		var str = "";
		str += '<input type="button" id="btnInsert" style="cursor: pointer; cursor: hand;" value="조회" onclick="showAct('+rowObject.YEAR+', \''+rowObject.EVAL_MEMB_EMPN+'\', \''+rowObject.KOR_NM+'\');return false;"/>';
		return str;
	}
		
	/******************************************
	 * 면담버튼 보여주기
	 ******************************************/
	 function linkMeetBtn(cellvalue, opions, rowObject) {
		var str = "";
		str += '<input type="button" id="btnInsert" style="cursor: pointer; cursor: hand;" value="조회" onclick="showMeet('+rowObject.YEAR+', \''+rowObject.EVAL_MEMB_EMPN+'\', \''+rowObject.KOR_NM+'\');return false;"/>';
		return str;
	}
	
	/******************************************
	 * 일괄적용버튼 보여주기
	 ******************************************/
	 function linkAllApplyBtn(cellvalue, opions, rowObject) {
		var str = "";
		if(rowObject.EVAL_REQ_YN == 'Y'){
			str += '<input type="button" id="btnInsert" style="cursor: pointer; cursor: hand;" value="일괄적용" onclick="allApply('+opions.rowId+', \''+rowObject.EVAL_MEMB_EMPN+'\');return false;"/>';
		}
		return str;
	}
	
	/******************************************
	 * 실적하면 이동
	 ******************************************/
	function allApply(rowId, empNo){
		var evalItemIds = new Array();
		#set($idx = 0)
		#foreach($evalItem in $evalItemList)
			evalItemIds[$idx] = "$evalItem.EVAL_ITEM_ID";
			#set($idx = $idx + 1)
		#end
		
		var grade;
		for(var i = 0; i < evalItemIds.length; i++){
			var selObjNm = "evalGrade"+empNo+"_"+evalItemIds[i];
			selObj = document.getElementById(selObjNm);
			if(i == 0){
				grade = selObj.value;
			}else{
				J("#prevSelectedGrade").val(selObj.value);
				selObj.value = grade;
				changeGrade(selObj);
			}
		}
	}
	
	/******************************************
	 * 실적화면 팝업
	 ******************************************/
	function showAct(year, empNo, empNm){
		J("#empNo").val(empNo);
		J("#year").val(J("#findYear").val());
		J("#mode").val("SEARCH");
		
		var param = "&amp;empNo=" + empNo
				   + "&amp;year=" + J("#findYear").val()
				   + "&amp;findYear=" + J("#findYear").val()
		           + "&amp;mode=" + "SEARCH";

		var url = "$!{context_path}/mem/eval/memEval/memEvalActSearchList.vw?type=popup" + param;
		
		openWinByName(url,'popMemAct','1210','700','yes');
	}
	
	/******************************************
	 * 면담화면 팝업
	 ******************************************/
	function showMeet(year, empNo, empNm){
		J("#empNo").val(empNo);
		J("#year").val(J("#findYear").val());
		J("#mode").val("SEARCH");
		
		var param = "&amp;empNo=" + empNo
				   + "&amp;year=" + J("#findYear").val()
				   + "&amp;findYear=" + J("#findYear").val()
		           + "&amp;mode=" + "SEARCH";

		var url = "$!{context_path}/mem/eval/memEval/memEvalMeetSearchList.vw?type=popup" + param;
		
		openWinByName(url,'popMemAct','1210','500','yes');
	}
	
	/******************************************
	 * 가점 텍스트박스 보여주기
	 ******************************************/
	function linkExtraPoint(cellvalue, opions, rowObject) {
		var str = "";
		var readOnlyStr = "";
		if(rowObject.EVAL_REQ_YN == 'N'){
			readOnlyStr = "disabled";
		}
		
		if(rowObject.EXTRA_POINT_YN == 'Y'){
			str += "<input type=\"text\" id=\"extra" + rowObject.EVAL_MEMB_EMPN + "\" name=\"extra" + rowObject.EVAL_MEMB_EMPN + "\" value=\"" + rowObject.EXTRA_POINT + "\" "+readOnlyStr+" class=\" inputbox wp60\"  style=\"ime-mode:disabled\" maxlength=\"3\" onkeypress=\"return numberOnly(event);\" onkeyup=\"addExtraPoint(this, event);\">";
		}else{
			str += "<input type='hidden' id=\"extra" + rowObject.EVAL_MEMB_EMPN + "\" name=\"extra" + rowObject.EVAL_MEMB_EMPN + "\" value=''>";
		}
		str += "<input type='hidden' id='empNos' name='empNos' value='"+rowObject.EVAL_MEMB_EMPN+"'>";
		return str;
	}
	
	function numberOnly(e) {
		if ((e.keyCode != 46) && (e.keyCode < 48 || e.keyCode > 57)) 
			return false;
	}
	
	/******************************************
	 * 가점 계산
	 ******************************************/
	function addExtraPoint(obj, e) {
		if (isNaN(J("#" + obj.id).val())) {
			alert("숫자형식을 입력해 주십시요.");
			return;
		}
	}
	
	/******************************************
	 * jqGrid 평가의견 텍스트
	 ******************************************/
	function linkEvalOpinion(cellvalue, options, rowObject) {
		var str = "";
		var readOnlyStr = "";
		if(rowObject.EVAL_REQ_YN == 'N'){
			readOnlyStr = "disabled";
		}
		str += "<textarea id=\"opinion" + rowObject.EVAL_MEMB_EMPN + "\" name=\"opinion" + rowObject.EVAL_MEMB_EMPN + "\" readOnly onClick=\"popOpinion("+options.rowId+");\" "+readOnlyStr+" cols=\"28\" rows=\"1\">" + rowObject.EVAL_OPINION + "</textarea>";
		return str;
	}
	
	function popOpinion(rowId){
		// 선택된 row의 data		
		var ret = J("#list").jqGrid('getRowData', rowId);
		var evalOpinion = J("#opinion"+ret.EVAL_MEMB_EMPN).val();
        J("#anchor").attr("href","$!{context_path}/mem/eval/memEval/popEvalOpinion.vw?rowId="+rowId);
        J("#anchor").click();
        return false;
	}
	
	/******************************************
	 * 평가저장
	 ******************************************/
	function saveEval(mode, rowId) {
		// 선택된 row의 data		
		var ret = J("#list").jqGrid('getRowData', rowId);
		
		// 그리드의 컬럼객체
		var cols = J("#list").jqGrid('getGridParam', 'colModel');
		
		//컬럼 배열
		var colArr = [];
		
		// 컬럼객체에서 평가항목의 등급만 배열에 넣는다.
		for (var i = 0; i < cols.length; i++) {
			if (cols[i].name.indexOf("EI") == 0) {
				colArr.push(cols[i].name);
			}
		}
		
		// 셀렉트 박스
		var selbox = J("#formList select[name*='evalGrade" + ret.EVAL_MEMB_EMPN + "']");
		
		var extraPoint = "";
		var evalDegreeId = J("#findEvalDegreeId").val();
		
		if (ret.EXTRA_POINT_EMPN != "" && evalDegreeId == "20")
			extraPoint = J("#extra" + ret.EVAL_MEMB_EMPN ).val();
		
		var year = J("#year").val();
		var evalGrpId = J("#evalGrpId").val();
		var assessorEmpn = J("#findAssessorEmpn").val();
		var score = ret.SCORE;
		
		// ajax에 넘겨줄 파라미터
		var data = "";
        var seqs = ret.SEQS.split("|");
        var isSuccess = false;
        
        for (var i = 0; i < selbox.length; i++) {
            if (selbox[i].options[selbox[i].selectedIndex].value == "-1" && mode == "SUBMIT") {
                alert("평가항목을 모두 평가해 주십시요.");
                selbox[i].focus();
                return;
            }
        }
        
        for(var l = 0; l < seqs.length; l++){
    		data = "mode=" + mode + "&amp;year=" + year + "&amp;evalDegreeId=" + evalDegreeId + "&amp;evalGrpId=" + evalGrpId + "&amp;assessorEmpn=" + assessorEmpn + "&amp;evalMembEmpn=" + ret.EVAL_MEMB_EMPN + "&amp;score=" + score + "&amp;extraPoint=" + extraPoint + "&amp;evalGradeIds=" + colArr.join(",") + "&amp;evalGradeValues=";
    		
            for (var i = 0; i < selbox.length; i++) {
    			data += selbox[i].options[selbox[i].selectedIndex].value;
    			
    			if (i < selbox.length - 1)
    				data += ",";
    		}
    		
    		J.ajax({
            	url      : "$!{context_path}/mem/eval/memEval/saveEval_ajax.vw",
            	type     : "GET", 
    			data     : data, 
            	dataType : "xml",
    			contentType : "application/xml",
            	success  : function (xml) {
                    mode = J(xml).find("data").find("mode").text();
    				// 작업 실패
    				if (J(xml).find("data").find("success").text() == "FAIL") {
    					alert("저장중 오류가 발생했습니다. 관리자에게 문의해 주십시요.");
    					return;
    				}
            	},  
    			error : function(xhr, status, error) {
    				alert(error);
    			}
        	});
        }
        var divId = "#div" + ret.EVAL_MEMB_EMPN;
        if (mode == "SAVE") {   // 저장
        } else if (mode == "SUBMIT") {  // 평가완료
            var $div = J(divId)
            
            // 저장 버튼 diable
            var $btnSave = $div.find("input[name='btnSave']");
            if ($btnSave.length > 0) {
                $btnSave.eq(0).attr("disabled", true);
            }
            
            // 평가완료 버튼 삭제
            var $btnSubmit = $div.find("input[name='btnSubmit']");
            if ($btnSubmit.length > 0) {
                $btnSubmit.eq(0).remove();
            }
            
            // 완료취소 버튼 추가
            var str = '<input type="button" id="btnCancel" name="btnCancel" value="완료취소" onclick="javascript:saveEval(\'CANCEL\', \'' + rowId + '\'); return false;" />';
            $div.append(str);
            
            // 평가항목 selectbox 비활성화
            for (var i = 0; i < selbox.length; i++) {
                selbox[i].disabled = true;
            }

            J("#list").jqGrid('setCell', rowId, "EVAL_END_NM", "평가완료");
            ret.EVAL_END_NM = "평가완료";
            J("#list").jqGrid('setCell', rowId, "EVAL_END_YN", "Y");
            ret.EVAL_END_YN = "Y";
            
            if (ret.EXTRA_POINT_EMPN != "" && evalDegreeId == "20")
                J("#extra" + ret.EVAL_MEMB_EMPN).attr("disabled", true);
        } else if (mode == "CANCEL") {  // 평가완료취소
            var $div = J(divId)
            
            // 저장 버튼 enable
            var $btnSave = $div.find("input[name='btnSave']");
            if ($btnSave.length > 0) {
                $btnSave.eq(0).attr("disabled", false);
            }
            
            // 완료취소 버튼 삭제
            var $btnCancel = $div.find("input[name='btnCancel']");
            if ($btnCancel.length > 0) {
                $btnCancel.eq(0).remove();
            }
            
            // 평가완료 버튼 추가
            var str = '<input type="button" id="btnSubmit" name="btnSubmit" value="평가완료" onclick="javascript:saveEval(\'SUBMIT\', \'' + rowId + '\'); return false;" />';
            $div.append(str);
            
            // 평가항목 selectbox 비활성화
            for (var i = 0; i < selbox.length; i++) {
                selbox[i].disabled = false;
            }
            
            J("#list").jqGrid('setCell', rowId, "EVAL_END_NM", "평가진행중");
            ret.EVAL_END_NM = "평가진행중";
            J("#list").jqGrid('setCell', rowId, "EVAL_END_YN", "N");
            ret.EVAL_END_YN = "N";  
            
            if (ret.EXTRA_POINT_EMPN != "" && evalDegreeId == "20")
                J("#extra" + ret.EVAL_MEMB_EMPN).attr("disabled", false);
        }
	}
	
//]]>
</script>    
 
<div id="Table">
	<div id="Table_blockContainer">
		<h1 class="none">업무수행평가</h1>
		<div class="tableTop">
			#parse("/WEB-INF/vl/common/template/tabs.vm")
			
			#set($listSize = $!{CS_HTML.txt2html($evalGrade.size())})
			#set($idx = 0)
			
			#foreach($evalGrade in $evalGrade)
				#set($idx = $idx + 1)
				<input type="hidden" id="$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_ID)" name="$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_ID)" value="$!CS_HTML.txt2html($evalGrade.ITEM_DISTRI_CNT)" />
				#if ($idx == $listSize || $idx + 1 == $listSize)
					<input type="hidden" id="$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_NM)" name="$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_NM)" value="$!CS_HTML.txt2html($evalGrade.GRADE_ITEM_ID)" />
				#end
			#end
			
			<input type="hidden" id="prevSelectedGrade" name="prevSelectedGrade" value="" />
			
    		<!-- search S -->
			<form id="formFind" name="formFind" method="post" action="$!{context_path}/mem/eval/memEval/memEvalModify.vw?type=template">
				<input type="hidden"    id="findHighPgmId"  	name="findHighPgmId"    	value="$!{searchMap.txt2html("findHighPgmId")}" />
				<input type="hidden"    id="findSubPgmId"   	name="findSubPgmId"     	value="$!{searchMap.txt2html("findSubPgmId")}" />
				<input type="hidden"    id="findPgmId"      	name="findPgmId"        	value="$!{searchMap.txt2html("findPgmId")}" />
				<input type="hidden"    id="findEvalGubun"		name="findEvalGubun"		value="$!{searchMap.txt2html("findEvalGubun")}" />
				<input type="hidden" 	id="findEvalEmpNm"		name="findEvalEmpNm"		value="$!{searchMap.txt2html("findEvalEmpNm")}" />
				<input type="hidden" 	id="findEvalGrpId"     	name="findEvalGrpId" 		value="$!{searchMap.txt2html("findEvalGrpId")}"/>
                <input type="hidden"    id="findAssessorGrpId"  name="findAssessorGrpId"    value="$!{searchMap.txt2html("findAssessorGrpId")}"/>
                <input type="hidden"    id="findEvalDegreeId"   name="findEvalDegreeId"     value="$!{searchMap.txt2html("findEvalDegreeId")}"/>
				<input type="hidden"    id="assessorEmpn"       name="assessorEmpn"         value="$!{searchMap.txt2html("assessorEmpn")}" />
				<input type="hidden" 	id="findYear"       	name="findYear" 		    value="$!{searchMap.txt2html("year")}" />
				
				<input type="hidden" 	id="year"       		name="year" 		        value="$!{searchMap.txt2html("year")}" />
				<input type="hidden"    id="evalGubun"          name="evalGubun"            value="$!{searchMap.txt2html("evalGubun")}" />
				<input type="hidden"    id="evalEmpNo"          name="evalEmpNo"            value="$!{searchMap.txt2html("evalEmpNo")}" />
				<input type="hidden"    id="evalGrpId"          name="evalGrpId"            value="$!{searchMap.txt2html("evalGrpId")}" />
				<input type="hidden"    id="deptCd"             name="deptCd"               value="$!{searchMap.txt2html("deptCd")}" />
				<input type="hidden"    id="deptNm"             name="deptNm"               value="$!{searchMap.txt2html("deptNm")}" />
				
				<div class="searchBox">
    				<div><div><div>
    				<table summary="업무수행평가 검색 조건">
						<caption class="none">업무수행평가 검색 조건</caption> 
						<thead><tr><th></th></tr></thead>
        				<tbody>
            				<tr>
								<td class="searchBox_tit w200">
            						<span><label for="findYear">$!{YEAR}</label></span>
            						<span class="searchBar">
        								$!CS_CODE.getCodeName("017", $!{searchMap.txt2html("findYear")})
            						</span>
            					</td>
                                <td class="searchBox_tit w200">
                                    <span>대상부서</span>
                                    <span class="searchBar">
                                        $!{searchMap.txt2html("deptNm")}
                                    </span>
                                </td>
                                <td class="searchBox_tit w200">
                                    <span>평가그룹</span>
                                    <span class="searchBar">
                                        $!{searchMap.txt2html("evalGrpNm")}
                                    </span>
                                </td>
                                <td class="searchBox_tit w200">
                                    <span>평가자구분</span>
                                    <span class="searchBar">
                                    	$!CS_CODE.getCodeName("237", $!{searchMap.txt2html("evalGubun")}, $!{searchMap.txt2html("findYear")})
                                    </span>
                                </td>
            				</tr>
        				</tbody>
    				</table>
                    </div></div></div>
    	        </div>
    		</form>
    		<!-- search E -->
			<div class="clear"></div>
		</div>
		
		<form id="formList" name="formList" method="post" action="$!{context_path}/mem/eval/memEval/memEvalProcess.vw?type=template">
			<input type="hidden" 	id="mode"				name="mode" />
			<input type="hidden" 	id="year"       		name="year" 		        value="$!{searchMap.txt2html("year")}" />
			<input type="hidden"    id="evalGubun"          name="evalGubun"            value="$!{searchMap.txt2html("evalGubun")}" />
			<input type="hidden"    id="evalEmpNo"          name="evalEmpNo"            value="$!{searchMap.txt2html("evalEmpNo")}" />
			<input type="hidden"    id="evalGrpId"          name="evalGrpId"            value="$!{searchMap.txt2html("evalGrpId")}" />
			<input type="hidden"    id="evalGrpNm"          name="evalGrpNm"            value="$!{searchMap.txt2html("evalGrpNm")}" />
			<input type="hidden"    id="deptCd"             name="deptCd"               value="$!{searchMap.txt2html("deptCd")}" />
			<input type="hidden"    id="deptNm"             name="deptNm"               value="$!{searchMap.txt2html("deptNm")}" />
	        <input type="hidden"    id="empNo"          	name="empNo"            	value="" />
	        <input type="hidden"    id="empNm"          	name="empNm"            	value="" />  

			$!{searchMap.makeHiddenFind()}
			<div id="splitterBox">
				<div>
					<!-- 데이터그리드 Start -->
					<div class="blockGridListTable">
						<table id="list" summary="업무수행평가 조회결과">
							<caption class="none">업무수행평가 조회</caption>
							<thead><tr><th></th></tr></thead>
							<tbody><tr><td></td></tr></tbody>
						</table>
						<div id="pager"></div>
					</div>
					<!--// 데이터그리드 End -->
					<div class="blockButton_all">
						
						
						<div class="blockButton_l txt_blue">
						#if($!{CS_HTML.txt2html($evalRate.EVAL_METHOD_ID)} == "02")
							※ 평가착안사항
						#else
							※ 등급배분표(평가착안사항)
						#end
							<div class="blockGridListTable">
        						<table id="gradeDistri" summary="등급배분표">
        							<caption class="none">등급배분표</caption>
        							<thead><tr><th></th></tr></thead>
        							<tbody><tr><td></td></tr></tbody>
        						</table>
        						<div id="pager"></div>
        					</div>
							<span id="alertDis"></span>
						</div>
						<div class="blockButton">
                            <ul>
								<li><input type="button" id="btnBack"   	value="돌아가기"/></li>
						#if($!{CS_HTML.txt2html($periodInfo.EVAL_IN_TERM)} == "Y")
                                <li><input type="button" id="btnSave"       value="저장" /></li>
                            #if($!{CS_HTML.txt2html($stateInfo.EVAL_STATE)} == "N")
                                <li><input type="button" id="btnComplete"   value="완료" /></li>
                            #else
                                <li><input type="button" id="btnCancel"     value="완료취소" /></li>
                            #end
                        #end
                            </ul>
						</div>
					</div>
				</div>
			</div>
		</form>
		
	</div>
	 <a id="anchor"></a>
	<div class="clear"></div>
</div>
