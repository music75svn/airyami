<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.mon.metricMatrix">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: 
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	
	
	<!--
	==================================================================   
	  # 설명	: 지표연계현황 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		    SELECT A.METRIC_ID,
                   A.METRIC_NM,
                   A.SC_DEPT_ID,
                   A.SC_DEPT_NM,
                   A.STRATEGY_ID,
                   A.STRATEGY_NM,
                   A.PERSPECTIVE_ID,
                   A.PERSPECTIVE_NM,
                   A.UP_METRIC_ID,
                   A.STATUS,
                   A.TARGET,
                   A.ACTUAL,
                   A.SCORE,
                   LEVEL AS LEVEL_NUM,
                   A.SORT_ORDER
              FROM BSC_METRICSCORE A
             WHERE A.YEAR = #findYear#
               AND A.MON = #findMon#
               AND A.ANAL_CYCLE = #findAnalCycle#                  
             START WITH A.METRIC_ID = #findMetricId# AND A.YEAR = #findYear#  AND A.MON = #findMon#  AND A.ANAL_CYCLE = #findAnalCycle#
             CONNECT BY PRIOR A.METRIC_ID = A.UP_METRIC_ID AND A.YEAR = #findYear#  AND A.MON = #findMon#  AND A.ANAL_CYCLE = #findAnalCycle#
             ORDER SIBLINGS BY A.SORT_ORDER                                              
	</select>
	 
	<!--
	==================================================================   
	  # 설명	: 지표 명 가져오기
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->
	<select id="getMetricNm" parameterClass="hashMap" resultClass="String">
		SELECT METRIC_NM
		FROM BSC_METRIC
		WHERE YEAR=#findYear#
		AND METRIC_ID=#findMetricId#
		AND DELETE_DT IS NULL
	</select>
	


	<!--
	==================================================================   
	  # 설명	: 지표연계현황 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getList_BACK" parameterClass="hashMap" resultClass="hashMap">
        SELECT A.MAX_LEVEL, A.ROW_COUNT, A.LEVEL_NUM DEPT_LEVEL, A.SORT_NUM, A.LEVEL_NUM       
             , A.NEXT_NUM, NVL(A.PREV_NUM,1) PREV_NUM                                               
             , A.YEAR, A.METRIC_ID, A.METRIC_NM, A.UP_METRIC_ID, A.PULL_PATH                           
             , A.STRATEGY_ID, A.STRATEGY_NM                                                         
             , A.SC_DEPT_ID, A.SC_DEPT_NM                                                           
             , A.PERSPECTIVE_ID, A.CONTENT, X.STATUS, X.TARGET, X.ACTUAL, X.SCORE, X.STRATEGY_NM, X.PERSPECTIVE_NM
             FROM (                                                                                 
                 SELECT
                 <![CDATA[
                 SUM( CASE WHEN PREV_NUM < LEVEL_NUM THEN 0 ELSE 1 END  )                           
                 ]]>
                 OVER(PARTITION BY A.YEAR, SUBSTR(  PULL_PATH, 2, 7)  ) ROW_COUNT                   
                 , A.*                                                                              
                 FROM (                                                                             
                     SELECT MAX(LEVEL_NUM) OVER() MAX_LEVEL                                         
                     , LAG(LEVEL_NUM,1) OVER(ORDER BY SORT_NUM) PREV_NUM                            
                     , LAG(LEVEL_NUM,1) OVER(ORDER BY SORT_NUM DESC) NEXT_NUM                       
                     , A.*
                     FROM(
                         SELECT  A.YEAR, A.METRIC_ID, A.METRIC_NM                                   
                         , A.SC_DEPT_ID, B.SC_DEPT_NM, B.DEPT_SORT_ORDER, B.DEPT_LEVEL              
                         , A.STRATEGY_ID, T1.STRATEGY_NM                                            
                         , T1.PERSPECTIVE_ID, T1.SORT_ORDER STRATEGY_SORT_ORDER, T1.PER_SORT_ORDER
                         , A.UP_METRIC_ID, A.SORT_ORDER
                         , A.CONTENT, A.CREATE_DT, A.MODIFY_DT, A.DELETE_DT
                         , LEVEL LEVEL_NUM
                         , ROWNUM SORT_NUM
                         , SYS_CONNECT_BY_PATH(A.METRIC_ID,'Q') PULL_PATH
                             FROM (SELECT * FROM BSC_METRIC WHERE YEAR = #findYear# AND DELETE_DT IS NULL) A           
                             INNER JOIN (                                                           
                                         SELECT ROWNUM DEPT_SORT_ORDER, LEVEL DEPT_LEVEL, YEAR      
                                         , SC_DEPT_ID, SC_DEPT_NM                                   
                                         FROM BSC_SC_DEPT                                           
                                         WHERE YEAR = #findYear#                                              
                                         AND DELETE_DT IS NULL                                      
                                         START WITH UP_SC_DEPT_ID IS NULL                           
                                         CONNECT BY PRIOR YEAR = YEAR                               
                                         AND PRIOR SC_DEPT_ID = UP_SC_DEPT_ID                       
                                         ORDER SIBLINGS BY SORT_ORDER                               
                                         ) B ON A.YEAR = B.YEAR                                     
                                         AND A.SC_DEPT_ID = B.SC_DEPT_ID                            
                             LEFT OUTER JOIN (                                                      
                                             SELECT S.*, C.SORT_ORDER PER_SORT_ORDER                
                                             FROM BSC_DEPT_STRATEGY S                               
                                             LEFT OUTER JOIN BSC_CODE C                             
                                                 ON S.YEAR = C.YEAR                                 
                                                 AND C.CODE_GRP_ID = '001'                          
                                                 AND S.PERSPECTIVE_ID = C.CODE_ID                   
                                             ) T1                                                   
                                 ON A.YEAR = T1.YEAR                                                
                                 AND A.SC_DEPT_ID = T1.SC_DEPT_ID                                   
                                 <!-- AND A.BSC_METRIC_GBN IN ('01','02') -->                                
                                 AND A.STRATEGY_ID = T1.STRATEGY_ID
                                 AND T1.DELETE_DT IS NULL
                             WHERE A.YEAR = #findYear#                                                          
                             AND A.DELETE_DT IS NULL
                            <isEqual property="findMetricId" compareValue="ALL">
                            	START WITH A.SC_DEPT_ID = #findScDeptId#
                            </isEqual>
                            <isNotEqual property="findMetricId" compareValue="ALL">
                            	START WITH A.METRIC_ID = #findMetricId#
                            </isNotEqual>
                        CONNECT BY PRIOR A.METRIC_ID = A.UP_METRIC_ID                            
                        ORDER SIBLINGS BY DEPT_SORT_ORDER, PER_SORT_ORDER, A.SORT_ORDER        
                    ) A
                ) A
            ) A
                              LEFT OUTER JOIN BSC_METRICSCORE X
                                  ON  A.YEAR            = X.YEAR                        
                                  AND A.SC_DEPT_ID    = X.SC_DEPT_ID                    
                                  AND A.METRIC_ID     = X.METRIC_ID                    
                                   AND X.MON            = #findMon#                                
                                   AND X.ANAL_CYCLE    = #findAnalCycle#                               
                                   AND X.DISPLAY_GBN    = 'T'    
                                   <![CDATA[                        
                                   AND (SUB_METRIC_YN <> 'Y' OR SUB_METRIC_YN IS NULL) 
                                   ]]>
            WHERE 1=1                                                                
            ORDER BY SORT_NUM                                                     
	</select>
	
</sqlMap>


