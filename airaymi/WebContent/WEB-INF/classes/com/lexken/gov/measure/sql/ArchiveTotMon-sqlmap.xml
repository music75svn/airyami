<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="gov.measure.archiveTotMon">

	<!--
	==================================================================
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	:
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />


	<!--
	==================================================================
	  # 설명	: 계량평가지표현황표 목록 보기
	  #	기능	: SELECT
	  #	TABLE	:
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap" remapResults="true">
		 SELECT B.EVAL_CAT_GRP_NM
		      , C.EVAL_CAT_NM
		      , A.GOV_METRIC_ID
		      , A.GOV_METRIC_NM
		      , F_CODE_NM('007', A.GBN_ID, A.YEAR) GBN_NM
		      , F_CODE_NM('146', A.EVAL_METHOD_ID, A.YEAR) EVAL_METHOD_NM
		      , F_CODE_NM('147', A.DIREC_ID, A.YEAR) DIREC_NM
		      , D.SC_DEPT_NM
		      , E.USER_NM AS INSERT_USER_NM
		      , A.MAIN_METRIC_YN
		      , TO_CHAR(F.ACTUAL) AS ACTUAL
		      , TO_CHAR(F.SCORE) AS SCORE
		      , F.STATUS_ID
		<iterate property="deptArray">
	    		, G.DEPT_$deptArray[]$
	     		, G.METRIC_$deptArray[]$
		</iterate>
		 FROM GOV_METRIC A
		       INNER JOIN GOV_EVAL_CAT_GRP B ON A.YEAR = B.YEAR AND A.EVAL_CAT_GRP_ID = B.EVAL_CAT_GRP_ID
		       INNER JOIN GOV_EVAL_CAT C ON A.YEAR = C.YEAR AND A.EVAL_CAT_ID = C.EVAL_CAT_ID
		       LEFT OUTER JOIN BSC_SC_DEPT D ON A.YEAR = D.YEAR AND A.SC_DEPT_ID = D.SC_DEPT_ID
		       LEFT OUTER JOIN BSC_USERINFO E ON A.INSERT_USER_ID = E.USER_ID
		       LEFT OUTER JOIN GOV_ACTUAL F ON A.YEAR = F.YEAR AND F.MON = #findMon# AND A.GOV_METRIC_ID = F.GOV_METRIC_ID
		       LEFT OUTER JOIN (  SELECT YEAR
		                                , GOV_METRIC_ID
		<iterate property="deptArray">
								     	, MAX(CASE WHEN SC_DEPT_ID = '$deptArray[]$' THEN STATUS END) DEPT_$deptArray[]$
								     	, MAX(CASE WHEN SC_DEPT_ID = '$deptArray[]$' THEN METRIC_ID END) METRIC_$deptArray[]$
		</iterate>
		                           FROM (
		                                   SELECT A.YEAR
		                                        , A.GOV_METRIC_ID
		                                        , A.METRIC_ID
		                                        , C.SC_DEPT_ID
		                                        , E.STATUS
		                                        , ROW_NUMBER() OVER(PARTITION BY A.YEAR, A.GOV_METRIC_ID, C.SC_DEPT_ID ORDER BY A.YEAR, B.METRIC_NM) AS USER_INDEX
		                                   FROM GOV_METRIC_MAPPING A
		                                        INNER JOIN BSC_METRIC B ON A.YEAR = B.YEAR AND A.METRIC_ID = B.METRIC_ID AND B.DELETE_DT IS NULL
		                                        INNER JOIN BSC_SC_DEPT C ON B.YEAR = C.YEAR AND B.SC_DEPT_ID = C.SC_DEPT_ID AND C.DELETE_DT IS NULL
		                                        INNER JOIN GOV_SC_DEPT_MAPPING D ON C.YEAR = D.YEAR AND C.SC_DEPT_ID = D.SC_DEPT_ID
		                                        LEFT OUTER JOIN BSC_METRICSCORE E ON A.YEAR = E.YEAR AND A.METRIC_ID = E.METRIC_ID AND E.MON = #findMon# AND E.ANAL_CYCLE = 'Y'
		                                   WHERE A.YEAR = #findYear#
		                           ) WHERE USER_INDEX = 1
		                           GROUP BY YEAR, GOV_METRIC_ID
		                      ) G ON A.YEAR = G.YEAR AND A.GOV_METRIC_ID = G.GOV_METRIC_ID
		 WHERE A.YEAR = #findYear#
		   AND A.GBN_ID = '01'
		   AND A.DELETE_DT IS NULL
		 ORDER BY A.SORT_ORDER
	</select>

	<!--
	==================================================================
	  # 설명	: 매핑 평가조직 가져오기
	  #	기능	: SELECT
	  #	TABLE	: GOV_SC_DEPT_MAPPING
	==================================================================
	-->
	<select id="getMappingDeptList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR
		     , A.SC_DEPT_ID
		     , B.SC_DEPT_NM
		     , B.SC_DEPT_GRP_ID
		     , F_CODE_NM('003',  B.SC_DEPT_GRP_ID, A.YEAR) AS SC_DEPT_GRP_NM
		     , 'DEPT_' || B.SC_DEPT_ID AS DEPT_COL_NM
		     , 'METRIC_' || B.SC_DEPT_ID AS METRIC_COL_NM
		FROM GOV_SC_DEPT_MAPPING A
		     INNER JOIN BSC_SC_DEPT B ON A.YEAR = B.YEAR AND A.SC_DEPT_ID = B.SC_DEPT_ID AND B.DELETE_DT IS NULL
		WHERE A.YEAR = #findYear#
		ORDER BY B.SC_DEPT_GRP_ID,  B.SORT_ORDER
	</select>


	<!--
	==================================================================
	  # 설명	: 조직평가그룹 정보 조회
	  #	기능	: SELECT
	  #	TABLE	: GOV_SC_DEPT_MAPPING
	==================================================================
	-->
	<select id="getGroupInfoList" parameterClass="hashMap" resultClass="hashMap">
		SELECT *
		FROM (
		        SELECT A.YEAR
		             , A.SC_DEPT_ID
		             , C.CODE_NM AS SC_DEPT_GRP_NM
		             , ROW_NUMBER() OVER(PARTITION BY B.SC_DEPT_GRP_ID ORDER BY  B.SORT_ORDER) AS ITEM_INDEX
		             , COUNT(A.SC_DEPT_ID) OVER(PARTITION BY B.SC_DEPT_GRP_ID) AS ITEM_CNT
		        FROM GOV_SC_DEPT_MAPPING A
		                 INNER JOIN BSC_SC_DEPT B ON A.YEAR = B.YEAR AND A.SC_DEPT_ID = B.SC_DEPT_ID AND B.DELETE_DT IS NULL
		                 INNER JOIN BSC_CODE C ON C.CODE_GRP_ID = '003' AND B.SC_DEPT_GRP_ID = C.CODE_ID AND C.YEAR = A.YEAR AND C.DELETE_DT IS NULL
		        WHERE A.YEAR = #findYear#
		        ORDER BY B.SC_DEPT_GRP_ID, B.SORT_ORDER
		)
		WHERE ITEM_INDEX = 1
	</select>

	<!--
	==================================================================
	  # 설명	: 계량평가지표현황표 상세 보기
	  #	기능	: SELECT
	  #	TABLE	:
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">

	</select>

	<!--
	==================================================================
	  # 설명	: 계량평가지표현황표 등록
	  #	기능	: INSERT
	  #	TABLE	:
	==================================================================
	-->
	<insert id="insertData" parameterClass="hashMap">

	</insert>

	<!--
	==================================================================
	  # 설명	: 계량평가지표현황표 수정
	  #	기능	: UPDATE
	  #	TABLE	:
	==================================================================
	-->
	<update id="updateData" parameterClass="hashMap">

	</update>


	<!--
	==================================================================
	  # 설명	: 계량평가지표현황표 삭제
	  #	기능	: UPDATE
	  #	TABLE	:
	==================================================================
	-->
	<update id="deleteData" parameterClass="hashMap">

	</update>


</sqlMap>


