<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="mem.eval.memDeptScore">

	<!--
	==================================================================
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	:
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	
	<!--
	==================================================================   
	  # 설명	: 최상위 평가조직 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getTopDeptInfo" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR
				, DEPT_CD
       			, DEPT_KOR_NM
    	 FROM ( SELECT YEAR, DEPT_CD, DEPT_KOR_NM FROM BSC_INSA_DEPT WHERE YEAR = #findYear# ORDER BY DISP_ORDER DESC, DEPT_CD )
		WHERE DEPT_CD = '0000'
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 인사조직 왼쪽트리목록 보기(미사용은 제외)
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getDeptList" parameterClass="hashMap" resultClass="hashMap">
		SELECT YEAR, DEPT_CD, DEPT_KOR_NM, UP_DEPT_CD, UP_USER_ID, USE_YN, DEPT_LEVL, DISP_ORDER, DEPT_GRADE, DEPT_SCORE
		  FROM BSC_INSA_DEPT
		 WHERE YEAR = #findYear#
		   AND ( USE_YN = 'T' OR DEPT_CD = '0000' )
<!-- 		<isEqual property="exceptDirector" compareValue="Y" prepend="AND">
		<![CDATA[
				DEPT_CD <> '1000' AND UP_DEPT_CD <> '1000'
		]]>
		</isEqual>
 -->		
		 ORDER BY DISP_ORDER, DEPT_CD       
		 
	</select>

	<!--
	==================================================================
	  # 설명	: 조직업적평가결과 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
	
		 SELECT A.YEAR,
		        A.DEPT_CD,
		        F_DEPT_LEV2_NM(A.YEAR, A.DEPT_CD) AS PULL_DEPT_KOR_NM,
		        A.SC_DEPT_ID,
		        C.SC_DEPT_S_NM,
		        A.DEPT_GRADE,
		        A.DEPT_SCORE
		   FROM MEM_DEPT_SCORE A      
		       INNER JOIN (SELECT A.YEAR,
		                          A.DEPT_CD,
		                          A.DEPT_KOR_NM,
		                          A.UP_DEPT_CD,
		                          SUBSTR(SYS_CONNECT_BY_PATH(A.DEPT_KOR_NM,' '),2) AS PULL_DEPT_KOR_NM
		                     FROM BSC_INSA_DEPT A
		                    WHERE A.YEAR = #findYear# 
		                      AND (A.USE_YN = 'T' OR A.DEPT_CD = '0000')
		                    <dynamic>
								<isEqual property="findDeptCd" compareValue="0000">
					                         START WITH DEPT_CD = '0000'
							    </isEqual>
								<isNotEqual property="findDeptCd" compareValue="0000">
					                         START WITH DEPT_CD = #findDeptCd#
							    </isNotEqual>
						    </dynamic>
		                    CONNECT BY PRIOR A.DEPT_CD = A.UP_DEPT_CD AND PRIOR A.YEAR = A.YEAR
		                  ) B
		      ON A.YEAR = B.YEAR
		      AND A.DEPT_CD = B.DEPT_CD
		      LEFT OUTER JOIN BSC_SC_DEPT C
		      ON A.YEAR = C.YEAR
		      AND A.SC_DEPT_ID = C.SC_DEPT_ID
		      AND C.DELETE_DT IS NULL
		WHERE A.YEAR = #findYear#
		ORDER BY A.DEPT_CD
	
	</select>
	
	
	<!--
	==================================================================
	  # 설명	: 조직업적평가결과 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getGradeDistriList" parameterClass="hashMap" resultClass="hashMap">
	
		 SELECT A.YEAR,
		        A.GRADE,
		        A.SCORE
		   FROM MEM_DEPT_SCORE_GRADE A      
		  WHERE A.YEAR = #year#
		  ORDER BY A.SCORE
	
	</select>
	
	<!--
	==================================================================
	  # 설명	: 조직업적평가결과 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<update id="deleteGradeDistri" parameterClass="hashMap">
		DELETE FROM MEM_DEPT_SCORE_GRADE
		 WHERE YEAR = #year#
	</update>
	
	<!--
	==================================================================
	  # 설명	: 조직업적평가결과 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<insert id="insertGradeDistri" parameterClass="hashMap">
		INSERT INTO MEM_DEPT_SCORE_GRADE (YEAR, GRADE, SCORE)
		VALUES(#year#, #grade#, #score#)
	</insert>

	<!--
	==================================================================
	  # 설명	: 조직업적평가결과 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<insert id="insertData" parameterClass="hashMap">
		INSERT INTO MEM_DEPT_SCORE (YEAR, DEPT_CD, DEPT_SCORE)
		VALUES(#year#, #deptCd#, #deptScore#)
	</insert>
	
	<!--
	==================================================================
	  # 설명	: 조직업적평가결과 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<update id="deleteData" parameterClass="hashMap">
		DELETE FROM MEM_DEPT_SCORE
		 WHERE YEAR = #year#
		   AND DEPT_CD = #deptCd#
	</update>
	
	<!--
	==================================================================
	  # 설명	: 조직업적평가점수 가져오기
	  #	기능	: PROCEDURE
	  #	TABLE	: getBscScore
	==================================================================
	-->
	<procedure id="getBscScore" parameterClass="hashMap">
		CALL SP_MEM_DEPT_SCORE(#year#)
	</procedure>
	
	<!--
	==================================================================
	  # 설명	: 조직업적평가점수 월할계산
	  #	기능	: PROCEDURE
	  #	TABLE	: getBscMonScore
	==================================================================
	-->
	<procedure id="getBscMonScore" parameterClass="hashMap">
		CALL SP_PRS_MNG_DEPT_SCORE(#year#)
	</procedure>
	
	<!--
	==================================================================
	  # 설명	: 조직업적평가결과 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<select id="getDataYn" parameterClass="hashMap" resultClass="java.lang.String">
		 SELECT CASE WHEN NVL((SELECT COUNT(1) FROM MEM_DEPT_SCORE WHERE YEAR = #year# AND DEPT_CD = #deptCd#),0)<![CDATA[ > ]]>0 THEN 'Y'
		        ELSE 'N' END 
		   FROM DUAL 
	</select>
	
	<!--
	==================================================================
	  # 설명	: 조직업적평가결과 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<insert id="insertExcelData" parameterClass="hashMap">
		INSERT INTO MEM_DEPT_SCORE (YEAR, DEPT_CD, DEPT_GRADE, DEPT_SCORE)
		VALUES(#year#, #deptCd#, #deptGrade#, #deptScore#)
	</insert>
	
	<!--
	==================================================================
	  # 설명	: 조직업적평가결과 등록
	  #	기능	: INSERT
	  #	TABLE	: BSC_INSA_DEPT
	==================================================================
	-->
	<update id="updateExcelData" parameterClass="hashMap">
		UPDATE MEM_DEPT_SCORE
		   SET DEPT_GRADE = #deptGrade#,
		       DEPT_SCORE = #deptScore#
		 WHERE YEAR = #year#
		   AND DEPT_CD = #deptCd#
	</update>

</sqlMap>


