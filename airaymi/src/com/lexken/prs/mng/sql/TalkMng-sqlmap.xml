<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.mng.talkMng">

    <!--
    ==================================================================   
      # 설명    : typeAlias 선언
      #    기능    : SETTING
      #    TABLE    : 
    ==================================================================
    -->
    <typeAlias alias="hashMap"             type="java.util.HashMap" />
     

    <!--
    ==================================================================   
      # 설명    : 중간면담 목록 보기
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getList" parameterClass="hashMap" resultClass="hashMap">
        SELECT A.YEAR
             , A.EVAL_MEMB_EMPN
             , A.EVAL_MEMB_EMPN_SEQ
             , A.KOR_NM
             , A.DEPT_CD
             , F_DEPT_FULL_NM(A.YEAR,A.DEPT_CD,'BSC_INSA_DEPT') DEPT_FULL_NM
             , A.CAST_TC
             , A.POS_TC
             , F_CODE_NM('170', A.CAST_TC , A.YEAR) CAST_TC_NM 
             , F_CODE_NM('171', A.POS_TC , A.YEAR) POS_TC_NM 
             , A.PRS_YN
             , A.EVAL_GRP_ID
             , A.FROM_DT
             , A.TO_DT
             , B.PLAN_STATUS_ID
             , CASE WHEN B.PLAN_STATUS_ID IS NULL THEN '미입력' ELSE  F_CODE_NM('217', B.PLAN_STATUS_ID , B.YEAR)  END PLAN_STATUS_NM
             , C.PLAN_YN
             , B.APPROVE_DT
             ,  (SELECT COUNT(*) FROM PRS_MNG_TALK 
                 WHERE A.YEAR = YEAR AND A.EVAL_MEMB_EMPN = EVAL_MEMB_EMPN AND A.EVAL_MEMB_EMPN_SEQ = EVAL_MEMB_EMPN_SEQ) TALK_CNT 
        FROM PRS_MNG_MEMBER A
         LEFT OUTER JOIN PRS_MNG_PLAN B ON A.YEAR = B.YEAR AND A.EVAL_MEMB_EMPN = B.EVAL_MEMB_EMPN AND A.EVAL_MEMB_EMPN_SEQ = B.EVAL_MEMB_EMPN_SEQ
         LEFT OUTER JOIN PRS_EVAL_GRP C ON A.YEAR = C.YEAR AND A.EVAL_GRP_ID = C.EVAL_GRP_ID
        WHERE A.YEAR= #findYear#
          AND A.PRS_YN ='Y'
          AND C.PLAN_YN ='Y' 
          <isNotEqual prepend="AND" property="findDeptCd" compareValue="0000">
              A.DEPT_CD IN (SELECT DEPT_CD
						   FROM BSC_INSA_DEPT
						  WHERE YEAR = #findYear#
					 START WITH DEPT_CD = #findDeptCd#
			   CONNECT BY PRIOR YEAR = YEAR
							AND PRIOR DEPT_CD = UP_DEPT_CD)
        </isNotEqual>
        <isNotEmpty prepend="AND" property="findCastTc">
            A.CAST_TC = #findCastTc#
	    </isNotEmpty>
        <isNotEmpty prepend="AND" property="findKorNm">
            UPPER(A.KOR_NM) LIKE  '%' || TRIM(UPPER(#findKorNm#)) ||'%'
	   	</isNotEmpty>
	   	<isNotEqual prepend="AND" property="isAdmin" compareValue="Y">
	   	    (
        </isNotEqual>  	
	   	<isEqual property="isManager" compareValue="Y">
            A.MANAGER_USER_ID = #loginUserId#
        </isEqual>
        <isNotEmpty property="findEvalMembEmpn" >
            <isEqual property="isManager" compareValue="Y">
                OR
            </isEqual>
			A.EVAL_MEMB_EMPN = #findEvalMembEmpn#
		</isNotEmpty>
		<isNotEqual property="isAdmin" compareValue="Y">
            )
        </isNotEqual>
		  ORDER BY A.KOR_NM, A.EVAL_MEMB_EMPN, A.EVAL_MEMB_EMPN_SEQ   
    </select>
    
    <!--
    ==================================================================   
      # 설명    : 중간면담 상세 보기
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getTalkList" parameterClass="hashMap" resultClass="hashMap">
        SELECT A.TALK_SEQ
			 , A.TALK_USER_ID
			 , A.TALK_USER_NM
		 	 , A.TALK_DT
		 	 , A.ANSWER_DT
		 	 , A.CREATE_ID
		 	 , (SELECT KOR_NM FROM BSC_INSA WHERE YEAR = #findYear# AND EMPN = A.EVAL_MEMB_EMPN) AS ANSWER_USER_NM
			 <!-- , TALK_CONTENT  -->
	    FROM PRS_MNG_TALK A
			WHERE A.YEAR		 	  = #findYear#
		  AND A.EVAL_MEMB_EMPN      = #evalMembEmpn#
		  AND A.EVAL_MEMB_EMPN_SEQ  = #evalMembEmpnSeq#   
	 ORDER BY A.TALK_SEQ       
    </select>

    <!--
    ==================================================================   
      # 설명    : 중간면담 상세 보기
      #    기능    : SELECT
      #    TABLE    : 
    ==================================================================
    -->
    <select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
        SELECT TALK_SEQ
			 , TALK_USER_ID
			 , TALK_USER_NM
		 	 , TALK_DT
		 	 , ANSWER_DT
			 , TALK_CONTENT 
			 , ANSWER_CONTENT
	    FROM PRS_MNG_TALK
		WHERE YEAR		 	  	  = #findYear#
		  AND EVAL_MEMB_EMPN      = #evalMembEmpn#
		  AND EVAL_MEMB_EMPN_SEQ  = #evalMembEmpnSeq#
		  AND TALK_SEQ 			  = #talkSeq#     
    </select>
    
    <!--
    ==================================================================   
      # 설명    : 중간면담 등록
      #    기능    : INSERT
      #    TABLE    : 
    ==================================================================
    -->    
    <insert id="insertData" parameterClass="hashMap">
        <selectKey resultClass="java.lang.String" keyProperty="SEQ" >
            SELECT NVL(MAX(TALK_SEQ)+1,1) AS SEQ
			  FROM PRS_MNG_TALK
			 WHERE YEAR       		   = #findYear#
			  AND  EVAL_MEMB_EMPN      = #evalMembEmpn#
			  AND  EVAL_MEMB_EMPN_SEQ  = #evalMembEmpnSeq#
        </selectKey>
        INSERT INTO  PRS_MNG_TALK ( 
        				YEAR
					, EVAL_MEMB_EMPN
					, EVAL_MEMB_EMPN_SEQ
					, TALK_SEQ
					, TALK_USER_ID
					, TALK_USER_NM
					, TALK_DEPT_CD
					, TALK_DEPT_NM
					, TALK_CAST_TC
					, TALK_CAST_NM
					, TALK_POS_TC
					, TALK_POS_NM
					, TALK_DT
					, ANSWER_DT
					, TALK_CONTENT
					, ANSWER_CONTENT
					, CREATE_ID
					, CREATE_DT
				)
				 SELECT  #findYear#, #evalMembEmpn# , #evalMembEmpnSeq# , #SEQ#
 						, A.EMPN , A.KOR_NM , A.DEPT_CD , B.DEPT_KOR_NM , A.CAST_TC
                        , F_CODE_NM('170', A.CAST_TC , A.YEAR) CAST_TC_NM , A.POS_TC
               			, F_CODE_NM('171', A.POS_TC , A.YEAR) POS_TC_NM  , #talkDt# AS TALK_DT, #answerDt# AS ANSWER_DT
               			, #talkContent#, #answerContent# , A.EMPN AS CREATE_ID , SYSDATE AS CREATE_DT
         			 FROM BSC_INSA A
			        LEFT OUTER JOIN BSC_INSA_DEPT B ON A.YEAR = B.YEAR AND A.DEPT_CD = B.DEPT_CD  
			         WHERE A.YEAR = #findYear#  AND  A.EMPN  = #talkUserId#
			           GROUP BY  A.YEAR , A.EMPN , A.KOR_NM , A.DEPT_CD , A.CAST_TC , A.POS_TC , B.DEPT_KOR_NM
           
    </insert>    
    
    <!--
    ==================================================================   
      # 설명    : 중간면담 수정
      #    기능    : UPDATE
      #    TABLE    : 
    ==================================================================
    -->    
    <update id="updateData" parameterClass="hashMap">
        UPDATE  PRS_MNG_TALK
           SET ( TALK_USER_ID
			  , TALK_USER_NM
			  , TALK_DEPT_CD
			  , TALK_DEPT_NM
			  , TALK_CAST_TC
			  , TALK_CAST_NM
			  , TALK_POS_TC
			  , TALK_POS_NM
			  , TALK_DT
			  , ANSWER_DT
			  , TALK_CONTENT
			  , ANSWER_CONTENT
			  , MODIFY_ID
			  , MODIFY_DT
				) = (
				 SELECT   A.EMPN , A.KOR_NM , A.DEPT_CD , B.DEPT_KOR_NM , A.CAST_TC
                        , F_CODE_NM('170', A.CAST_TC , A.YEAR) CAST_TC_NM , A.POS_TC
               			, F_CODE_NM('171', A.POS_TC , A.YEAR) POS_TC_NM  , #talkDt# AS TALK_DT, #answerDt# AS ANSWER_DT
               			, #talkContent#, #answerContent# , A.EMPN AS MODIFY_ID , SYSDATE AS MODIFY_DT
         			 FROM BSC_INSA A
			        LEFT OUTER JOIN BSC_INSA_DEPT B ON A.YEAR = B.YEAR AND A.DEPT_CD = B.DEPT_CD  
			         WHERE A.YEAR = #findYear#  AND  A.EMPN  = #approveUserId#
			           GROUP BY  A.YEAR , A.EMPN , A.KOR_NM , A.DEPT_CD , A.CAST_TC , A.POS_TC , B.DEPT_KOR_NM
			     )
			     WHERE YEAR		 	  	   = #findYear#
				   AND EVAL_MEMB_EMPN      = #evalMembEmpn#
				   AND EVAL_MEMB_EMPN_SEQ  = #evalMembEmpnSeq#
				   AND TALK_SEQ 		   = #talkSeq# 
        
    </update>    
    

    <!--
    ==================================================================   
      # 설명    : 중간면담 삭제
      #    기능    : UPDATE
      #    TABLE    : 
    ==================================================================
    -->    
    <update id="deleteData" parameterClass="hashMap">
        DELETE FROM  PRS_MNG_TALK
        WHERE YEAR		 	  	  = #findYear#
		  AND EVAL_MEMB_EMPN      = #evalMembEmpn#
		  AND EVAL_MEMB_EMPN_SEQ  = #evalMembEmpnSeq#
		  AND TALK_SEQ 			  = #talkSeq#  

    </update>
    
    <select id="getExcelList" parameterClass="hashMap" resultClass="hashMap">
        SELECT A.YEAR
             , A.EVAL_MEMB_EMPN
             , A.EVAL_MEMB_EMPN_SEQ
             , A.KOR_NM
             , A.DEPT_CD
             , F_DEPT_FULL_NM(A.YEAR,A.DEPT_CD,'BSC_INSA_DEPT') DEPT_FULL_NM
             , A.CAST_TC
             , A.POS_TC
             , F_CODE_NM('170', A.CAST_TC , A.YEAR) CAST_TC_NM 
             , F_CODE_NM('171', A.POS_TC , A.YEAR) POS_TC_NM 
             , A.PRS_YN
             , A.EVAL_GRP_ID
             , A.FROM_DT
             , A.TO_DT
             , B.PLAN_STATUS_ID
             , CASE WHEN B.PLAN_STATUS_ID IS NULL THEN '미입력' ELSE  F_CODE_NM('217', B.PLAN_STATUS_ID , B.YEAR)  END PLAN_STATUS_NM
             , C.PLAN_YN
             , B.APPROVE_DT
             , D.TALK_SEQ
	         , D.TALK_USER_ID
	         , D.TALK_USER_NM
	         , D.TALK_DT
	         , D.ANSWER_DT
	         , D.TALK_CONTENT 
	         , D.ANSWER_CONTENT 
	         , A.FROM_DT || ' ' || '~' || ' ' || A.TO_DT AS WORKDATE
        FROM PRS_MNG_MEMBER A
         LEFT OUTER JOIN PRS_MNG_PLAN B ON A.YEAR = B.YEAR AND A.EVAL_MEMB_EMPN = B.EVAL_MEMB_EMPN AND A.EVAL_MEMB_EMPN_SEQ = B.EVAL_MEMB_EMPN_SEQ
         LEFT OUTER JOIN PRS_EVAL_GRP C ON A.YEAR = C.YEAR AND A.EVAL_GRP_ID = C.EVAL_GRP_ID
         LEFT OUTER JOIN PRS_MNG_TALK D
	        ON A.YEAR = D.YEAR
	        AND A.EVAL_MEMB_EMPN = D.EVAL_MEMB_EMPN      
	        AND A.EVAL_MEMB_EMPN_SEQ = D.EVAL_MEMB_EMPN_SEQ
        WHERE A.YEAR= #findYear#
          AND A.PRS_YN ='Y'
          AND C.PLAN_YN ='Y' 
          <isNotEqual prepend="AND" property="findDeptCd" compareValue="0000">
              A.DEPT_CD IN (SELECT DEPT_CD
						   FROM BSC_INSA_DEPT
						  WHERE YEAR = #findYear#
					 START WITH DEPT_CD = #findDeptCd#
			   CONNECT BY PRIOR YEAR = YEAR
							AND PRIOR DEPT_CD = UP_DEPT_CD)
        </isNotEqual>
        <isNotEmpty prepend="AND" property="findCastTc">
            A.CAST_TC = #findCastTc#
	    </isNotEmpty>
        <isNotEmpty prepend="AND" property="findKorNm">
            UPPER(A.KOR_NM) LIKE  '%' || TRIM(UPPER(#findKorNm#)) ||'%'
	   	</isNotEmpty>
	   	<isNotEqual prepend="AND" property="isAdmin" compareValue="Y">
	   	    (
        </isNotEqual>  	
	   	<isEqual property="isManager" compareValue="Y">
            A.MANAGER_USER_ID = #loginUserId#
        </isEqual>
        <isNotEmpty property="findEvalMembEmpn" >
            <isEqual property="isManager" compareValue="Y">
                OR
            </isEqual>
			A.EVAL_MEMB_EMPN = #findEvalMembEmpn#
		</isNotEmpty>
		<isNotEqual property="isAdmin" compareValue="Y">
            )
        </isNotEqual>
		  ORDER BY A.KOR_NM, A.EVAL_MEMB_EMPN, A.EVAL_MEMB_EMPN_SEQ   
    </select>
    
    
</sqlMap>


