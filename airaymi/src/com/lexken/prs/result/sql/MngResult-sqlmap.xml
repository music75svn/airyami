<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prs.result.mngResult">

	<!--
	==================================================================   
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	: PRS_MNG_FINAL_RESULT
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />

	<!--
	==================================================================   
	  # 설명	: 간부개인성과 평가결과
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR, A.EMPN, A.KOR_NM
		     , A.EVAL_GRP_ID, (SELECT EVAL_GRP_NM FROM PRS_EVAL_GRP WHERE YEAR = A.YEAR AND EVAL_GRP_ID = A.EVAL_GRP_ID) EVAL_GRP_NM
		     , A.CAST_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '170' AND CODE_ID = A.CAST_TC) CAST_TC_NM
		     , A.DEPT_CD, F_DEPT_FULL_NM(#findYear#, A.DEPT_CD, 'BSC_INSA_DEPT') DEPT_NM
		     , A.POS_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '171' AND CODE_ID = A.POS_TC) POS_TC_NM
		     , A.CUR_CAST_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '170' AND CODE_ID = A.CUR_CAST_TC) CUR_CAST_TC_NM
		     , A.CUR_DEPT_CD, F_DEPT_FULL_NM(#findYear#, A.CUR_DEPT_CD, 'V_DEPTINFO') CUR_DEPT_NM
		     , A.CUR_POS_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '171' AND CODE_ID = A.CUR_POS_TC) CUR_POS_TC_NM
             , TRIM(TO_CHAR(A.BSC_TOTAL_SCORE, '990.999')) BSC_TOTAL_SCORE
             , TRIM(TO_CHAR(A.PRS_TOTAL_SCORE, '990.999')) PRS_TOTAL_SCORE
             , TRIM(TO_CHAR(A.ORG_TOTAL_SCORE, '990.999')) ORG_TOTAL_SCORE
             , TRIM(TO_CHAR(A.TOTAL_SCORE, '990.999')) TOTAL_SCORE
             , A.RANKING, A.GRADE, A.PROMO_YN
             , ROUND(A.PRS_MBO_TOTAL_SCORE,3) AS PRS_MBO_TOTAL_SCORE
		  FROM PRS_MNG_EVAL_FINAL_RESULT A
		 WHERE A.YEAR = #findYear#
		<isNotEmpty prepend="AND" property="findEvalGrpId">
            A.EVAL_GRP_ID = #findEvalGrpId#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="findCastTc">
            A.CAST_TC = #findCastTc#
        </isNotEmpty>
		   AND A.KOR_NM LIKE '%' || #findKorNm# || '%'
		 ORDER BY A.RANKING, A.GRADE, A.KOR_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 간부개인성과 평가결과 엑셀저장
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getExcelList" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR, A.EMPN, A.KOR_NM
		     , A.EVAL_GRP_ID, (SELECT EVAL_GRP_NM FROM PRS_EVAL_GRP WHERE YEAR = A.YEAR AND EVAL_GRP_ID = A.EVAL_GRP_ID) EVAL_GRP_NM
		     , A.CAST_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '170' AND CODE_ID = A.CAST_TC) CAST_TC_NM
		     , A.DEPT_CD, F_DEPT_FULL_NM(#findYear#, A.DEPT_CD, 'BSC_INSA_DEPT') DEPT_NM
		     , A.POS_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '171' AND CODE_ID = A.POS_TC) POS_TC_NM
		     , A.CUR_CAST_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '170' AND CODE_ID = A.CUR_CAST_TC) CUR_CAST_TC_NM
		     , A.CUR_DEPT_CD, F_DEPT_FULL_NM(#findYear#, A.CUR_DEPT_CD, 'V_DEPTINFO') CUR_DEPT_NM
		     , A.CUR_POS_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '171' AND CODE_ID = A.CUR_POS_TC) CUR_POS_TC_NM
             , TRIM(TO_CHAR(A.BSC_TOTAL_SCORE, '990.999')) BSC_TOTAL_SCORE
             , TRIM(TO_CHAR(A.PRS_TOTAL_SCORE, '990.999')) PRS_TOTAL_SCORE
             , TRIM(TO_CHAR(A.ORG_TOTAL_SCORE, '990.999')) ORG_TOTAL_SCORE
             , TRIM(TO_CHAR(A.TOTAL_SCORE, '990.999')) TOTAL_SCORE
             , A.RANKING, A.GRADE, A.PROMO_YN
             , ROUND(A.PRS_MBO_TOTAL_SCORE,3) AS PRS_MBO_TOTAL_SCORE
		  FROM PRS_MNG_EVAL_FINAL_RESULT A
		 WHERE A.YEAR = #findYear#
		<isNotEmpty prepend="AND" property="findEvalGrpId">
            A.EVAL_GRP_ID = #findEvalGrpId#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="findCastTc">
            A.CAST_TC = #findCastTc#
        </isNotEmpty>
		   AND A.KOR_NM LIKE '%' || #userNm# || '%'
		 ORDER BY A.RANKING, A.GRADE, A.KOR_NM
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 간부개인성과 평가결과 상세
	  #	기능	: SELECT
	  #	TABLE	: 
	==================================================================
	-->
	<select id="getDetail" parameterClass="hashMap" resultClass="hashMap">
		SELECT A.YEAR, A.EMPN, A.KOR_NM
		     , A.EVAL_GRP_ID, (SELECT EVAL_GRP_NM FROM PRS_EVAL_GRP WHERE YEAR = A.YEAR AND EVAL_GRP_ID = A.EVAL_GRP_ID) EVAL_GRP_NM		     , A.CAST_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '170' AND CODE_ID = A.CAST_TC) CAST_TC_NM
		     , A.DEPT_CD, F_DEPT_FULL_NM(#year#, A.DEPT_CD, 'BSC_INSA_DEPT') DEPT_NM
		     , A.POS_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '171' AND CODE_ID = A.POS_TC) POS_TC_NM
		     , A.CUR_CAST_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '170' AND CODE_ID = A.CUR_CAST_TC) CUR_CAST_TC_NM
		     , A.CUR_DEPT_CD, F_DEPT_FULL_NM(#year#, A.CUR_DEPT_CD, 'V_DEPTINFO') CUR_DEPT_NM
		     , A.CUR_POS_TC, (SELECT CODE_NM FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '171' AND CODE_ID = A.CUR_POS_TC) CUR_POS_TC_NM
             , TRIM(TO_CHAR(A.BSC_TOTAL_SCORE, '990.999')) BSC_TOTAL_SCORE
             , TRIM(TO_CHAR(A.PRS_TOTAL_SCORE, '990.999')) PRS_TOTAL_SCORE
             , TRIM(TO_CHAR(A.ORG_TOTAL_SCORE, '990.999')) ORG_TOTAL_SCORE
             , TRIM(TO_CHAR(A.TOTAL_SCORE, '990.999')) TOTAL_SCORE
             , A.RANKING, A.GRADE, A.PROMO_YN
             , (SELECT CODE_ID FROM BSC_CODE WHERE YEAR = A.YEAR AND CODE_GRP_ID = '164' AND CODE_NM = A.GRADE) GRADE_ID
             , A.CONTENT
		  FROM PRS_MNG_EVAL_FINAL_RESULT A
		 WHERE A.YEAR = #year#
           AND A.EMPN = #empn#
		   AND A.EVAL_GRP_ID = #evalGrpId#
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 간부개인업적 평가결과 삭제 =================================> 사용안함
	  #	기능	: DELETE
	  #	TABLE	: PRS_MNG_EVAL_RESULT
	==================================================================
	-->
	<delete id="deleteMngResult" parameterClass="hashMap">
		DELETE FROM PRS_MNG_EVAL_RESULT
		 WHERE YEAR = #findYear#
	</delete>
	
	<select id="getEvalMethodId" parameterClass="hashMap" resultClass="java.lang.String">
		SELECT EVAL_METHOD_ID FROM PRS_EVAL_GRP WHERE YEAR = #findYear# AND ROWNUM = 1
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 간부개인업적 평가결과 입력 =================================> 사용안함
	  #	기능	: INSERT
	  #	TABLE	: PRS_MNG_EVAL_RESULT
	==================================================================
	-->
	<insert id="insertMngResult" parameterClass="hashMap">
        INSERT INTO PRS_MNG_EVAL_RESULT (YEAR, EMPN, CAST_TC, KOR_NM, CUR_DEPT_CD, CUR_CAST_TC, CUR_POS_TC, DEPT_CD, POS_TC, SCORE)
        SELECT B.YEAR, B.EVAL_MEMB_EMPN, B.CAST_TC, C.KOR_NM
             , D.DEPT_CD CUR_DEPT_CD, D.CAST_TC CUR_CAST_TC, D.POS_CD CUR_POS_TC
             , F.DEPT_CD, F.POS_TC
             , B.TOTAL_SCORE * NVL(E.WORK_MON, 12) / 12
          FROM (
                SELECT A.YEAR, A.EVAL_GRP_ID, A.EVAL_MEMB_EMPN, C.EVAL_TYPE
                     , DECODE(C.EVAL_TYPE, '01', '10', '02', '20', '03', '20', '04', '30') CAST_TC
                     , ROUND(AVG(A.TOTAL_SCORE), 2) TOTAL_SCORE
                  FROM PRS_MNG_EVAL A
                     , (
                        SELECT YEAR, EVAL_GRP_ID, EVAL_MEMB_EMPN, AVG(TOTAL_SCORE) AVG_SCORE, STDDEV(TOTAL_SCORE) DEVIATION
                          FROM PRS_MNG_EVAL 
                         WHERE YEAR = #findYear#
                         GROUP BY YEAR, EVAL_GRP_ID, EVAL_MEMB_EMPN
                       ) B
                     , PRS_EVAL_GRP C
                 WHERE A.YEAR = #findYear#
                   AND A.YEAR = B.YEAR
                   AND A.YEAR = C.YEAR
                   AND A.EVAL_GRP_ID = C.EVAL_GRP_ID 
                   AND A.EVAL_MEMB_EMPN = B.EVAL_MEMB_EMPN
                   AND A.EVAL_GRP_ID = B.EVAL_GRP_ID
		<![CDATA[
                   AND ABS(A.TOTAL_SCORE - B.AVG_SCORE) <= 2 * B.DEVIATION
		]]>
                 GROUP BY A.YEAR, A.EVAL_GRP_ID, A.EVAL_MEMB_EMPN, C.EVAL_TYPE
               ) B
          LEFT OUTER JOIN (
                  SELECT A.YEAR, A.EMPN, A.CAST_TC, NVL(A.WORK_MON * 12  / DECODE(B.WORK_MON, 0, NULL, B.WORK_MON), 0) WORK_MON
                    FROM (
                          SELECT A.YEAR, A.EMPN, A.CAST_TC, A.EVAL_TYPE, SUM(A.WORK_MON) WORK_MON
                            FROM (
                                  SELECT YEAR, EMPN, CAST_TC
                                       , CASE WHEN CAST_TC = '10' THEN '01'
                                              WHEN CAST_TC = '20' AND POS_TC IN ('21', '23', '24', '2A', '2C') THEN '02' 
                                              WHEN CAST_TC = '20' AND POS_TC NOT IN ('21', '23', '24', '2A', '2C') THEN '03'
                                              WHEN CAST_TC = '30' THEN '04'
                                              END EVAL_TYPE
                                       , WORK_MON
                                    FROM V_PRS_RE_MON
                                   WHERE YEAR = #findYear# AND CAST_TC BETWEEN '10' AND '30'
                                 ) A
                           WHERE (A.EMPN, A.EVAL_TYPE) IN (
                                                         SELECT B.EVAL_MEMB_EMPN EMPN, A.EVAL_TYPE
                                                           FROM PRS_EVAL_GRP A
                                                              , PRS_MNG_EVAL_GRP_MEMBER B
                                                          WHERE A.YEAR = #findYear# AND A.YEAR = B.YEAR 
                                                            AND A.EVAL_GRP_ID = B.EVAL_GRP_ID
                                                          )
                           GROUP BY A.YEAR, A.EMPN, A.CAST_TC, A.EVAL_TYPE
                         ) A
                       , (
                          SELECT A.YEAR, A.EMPN, A.CAST_TC, SUM(A.WORK_MON) WORK_MON
                            FROM (
                                  SELECT YEAR, EMPN, CAST_TC
                                       , CASE WHEN CAST_TC = '10' THEN '01'
                                              WHEN CAST_TC = '20' AND POS_TC IN ('21', '23', '24', '2A', '2C') THEN '02' 
                                              WHEN CAST_TC = '20' AND POS_TC NOT IN ('21', '23', '24', '2A', '2C') THEN '03'
                                              WHEN CAST_TC = '30' THEN '04'
                                              END EVAL_TYPE
                                       , WORK_MON
                                    FROM V_PRS_RE_MON
                                   WHERE YEAR = #findYear# AND CAST_TC BETWEEN '10' AND '30'
                                 ) A
                           WHERE (A.EMPN, A.EVAL_TYPE) IN (
                                                         SELECT B.EVAL_MEMB_EMPN EMPN, A.EVAL_TYPE
                                                           FROM PRS_EVAL_GRP A
                                                              , PRS_MNG_EVAL_GRP_MEMBER B
                                                          WHERE A.YEAR = #findYear# AND A.YEAR = B.YEAR 
                                                            AND A.EVAL_GRP_ID = B.EVAL_GRP_ID
                                                          )
                           GROUP BY A.YEAR, A.EMPN, A.CAST_TC
                         ) B
                   WHERE A.YEAR = B.YEAR
                     AND A.EMPN = B.EMPN
                     AND A.CAST_TC = B.CAST_TC
               ) E
            ON B.YEAR = E.YEAR AND B.EVAL_MEMB_EMPN = E.EMPN AND B.CAST_TC = E.CAST_TC
             , BSC_INSA C
          LEFT OUTER JOIN V_ROLE_USER D ON C.EMPN = D.SABUN
          LEFT OUTER JOIN (
                            SELECT YEAR, EMPN, CAST_TC, DEPT_CD, POS_TC
                              FROM BSC_INSA_PCMT WHERE (YEAR, EMPN, CAST_TC, END_PCMT_DATE) IN ( 
                                                    SELECT YEAR, EMPN, CAST_TC, MAX(END_PCMT_DATE) FROM BSC_INSA_PCMT WHERE YEAR = #findYear# AND CAST_TC BETWEEN '10' AND '30'
                                                     GROUP BY YEAR, EMPN, CAST_TC
                                                    )
                          ) F
            ON C.YEAR = F.YEAR AND C.EMPN = F.EMPN
         WHERE B.YEAR = B.YEAR
           AND B.YEAR = C.YEAR
           AND C.CAST_TC = F.CAST_TC
           AND B.EVAL_MEMB_EMPN = C.EMPN
         ORDER BY B.EVAL_GRP_ID, B.EVAL_MEMB_EMPN
	</insert>

	<!--
	==================================================================   
	  # 설명	: 간부개인성과 평가결과 프로시져 실행
	  #	기능	: PROCEDURE
	  #	TABLE	: SP_PRS_MNG_EVAL_FINAL_RESULT 
	==================================================================
	-->		
	<insert id="execMngEvalFinalResult" parameterClass="hashMap">  
		CALL SP_PRS_MNG_EVAL_FINAL_RESULT(#findYear#, #evalMethodId#)
	</insert>	
	
	<!--
	==================================================================   
	  # 설명	: 간부개인성과 평가결과 수정
	  #	기능	: UPDATE
	  #	TABLE	: BSC_CODE
	==================================================================
	-->	
	<update id="updateData" parameterClass="hashMap">
        UPDATE PRS_MNG_EVAL_FINAL_RESULT SET 
               GRADE = #newGrade#
             , CONTENT = #content#
         WHERE YEAR = #year#
           AND EMPN = #empn#
           AND EVAL_GRP_ID = #evalGrpId#
	</update>
</sqlMap>


