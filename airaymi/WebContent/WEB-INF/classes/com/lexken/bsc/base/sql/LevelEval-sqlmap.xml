<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="bsc.base.levelEval">

	<!--
	==================================================================
	  # 설명	: typeAlias 선언
	  #	기능	: SETTING
	  #	TABLE	:
	==================================================================
	-->
	<typeAlias alias="hashMap" 			type="java.util.HashMap" />
	
	<!--
	==================================================================
	  # 설명	: 난이도 평가 항목
	  #	기능	: SELECT
	  #	TABLE	: BSC_CODE(211)
	==================================================================
	-->
	<select id="getCodeList" parameterClass="hashMap" resultClass="hashMap">
		  SELECT CODE_ID, CODE_NM, CONTENT
		    FROM BSC_CODE
		   WHERE YEAR = #findYear#
		     AND CODE_GRP_ID = '211'
		     AND DELETE_DT IS NULL
		ORDER BY SORT_ORDER NULLS LAST 
	</select>
	
	<!--
	==================================================================
	  # 설명	: 조직별 난이도 평가 조회
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->
	<select id="getList" parameterClass="hashMap" resultClass="hashMap">
		SELECT   A.YEAR,
		         A.METRIC_ID,
		         A.METRIC_NM,
		         A.METRIC_GRP_ID,
		         A.SC_DEPT_ID,
		         A.TYPE_ID,
		         A.DEGREE_YN,
		<iterate property="codeIds" conjunction=",">
		       (SELECT SCORE
		          FROM BSC_LEVEL_EVAL X, BSC_CODE Y
		         WHERE X.YEAR = Y.YEAR
		           AND X.EVAL_ITEM_ID = Y.CODE_ID
		           AND Y.CODE_GRP_ID = '211'
		           AND Y.CODE_ID = '$codeIds[]$'
		           AND Y.DELETE_DT IS NULL
		           AND A.YEAR = X.YEAR
		           AND A.METRIC_ID = X.METRIC_ID
		           AND A.SC_DEPT_ID = X.SC_DEPT_ID)
		          EVAL_ITEM_ID_$codeIds[]$
		</iterate>
			     , (SELECT TOT_SCORE
			          FROM BSC_LEVEL_EVAL_TOTAL X
			         WHERE A.YEAR = X.YEAR
			           AND A.METRIC_ID = X.METRIC_ID
			           AND A.SC_DEPT_ID = X.SC_DEPT_ID)
			          TOT_SCORE
			     , (SELECT WEIGHT
			          FROM BSC_LEVEL_EVAL_TOTAL X
			         WHERE A.YEAR = X.YEAR
			           AND A.METRIC_ID = X.METRIC_ID
			           AND A.SC_DEPT_ID = X.SC_DEPT_ID)
			          WEIGHT
		    FROM BSC_METRIC A
		   WHERE A.YEAR = #findYear# 
	  		 AND A.DEGREE_YN = 'Y' 
			 AND A.SC_DEPT_ID = #findScDeptId#
			 AND A.DELETE_DT IS NULL
		ORDER BY METRIC_ID
	</select>
	
	<!--
	==================================================================   
	  # 설명	: 조직별 지표 난이도 평가 삭제
	  #	기능	: DELETE
	  #	TABLE	: BSC_LEVEL_EVAL
	==================================================================
	-->
	<update id="deleteLevelData" parameterClass="hashMap">
        DELETE FROM BSC_LEVEL_EVAL 
         WHERE YEAR = #year# AND SC_DEPT_ID = #scDeptId# AND METRIC_ID = #metricId#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 조직별 지표 난이도 평가 총점 삭제
	  #	기능	: DELETE
	  #	TABLE	: BSC_LEVEL_EVAL
	==================================================================
	-->
	<update id="deleteLevelTotalData" parameterClass="hashMap">
        DELETE FROM BSC_LEVEL_EVAL_TOTAL 
         WHERE YEAR = #year# AND SC_DEPT_ID = #scDeptId# AND METRIC_ID = #metricId#
	</update>
	
	<!--
	==================================================================
	  # 설명	: 조직별 지표 난이도 평가 점수 입력
	  #	기능	: INSERT
	  #	TABLE	: BSC_LEVEL_EVAL
	==================================================================
	-->
	<insert id="insertLevelData" parameterClass="hashMap">
		INSERT INTO BSC_LEVEL_EVAL (
		         YEAR
		       , METRIC_ID
		       , SC_DEPT_ID
		       , EVAL_ITEM_ID
		       , SCORE
		       , CREATE_DT
		   ) VALUES (
               #year#
             , #metricId#
             , #scDeptId#
             , #item#
             , #score#
             , SYSDATE
		   )
	</insert>
	
	<!--
	==================================================================
	  # 설명	: 조직별 지표 난이도 평가 총점 입력
	  #	기능	: INSERT
	  #	TABLE	: BSC_LEVEL_EVAL
	==================================================================
	-->
	<insert id="insertLevelTotalData" parameterClass="hashMap">
		INSERT INTO BSC_LEVEL_EVAL_TOTAL (
		         YEAR
		       , METRIC_ID
		       , SC_DEPT_ID
		       , TOT_SCORE
		       , WEIGHT
		       , CREATE_DT)
			SELECT A.YEAR
			     , A.METRIC_ID
			     , A.SC_DEPT_ID
			     , TOT_SCORE
			     , B.CONVERSION_SCORE WEIGHT
			     , SYSDATE
			  FROM (  SELECT A.YEAR
			               , A.METRIC_ID
			               , A.SC_DEPT_ID
			               , SUM (A.SCORE) TOT_SCORE
			            FROM BSC_LEVEL_EVAL A, BSC_CODE B
			           WHERE A.YEAR = B.YEAR
			             AND A.EVAL_ITEM_ID = B.CODE_ID
			             AND B.CODE_GRP_ID = '211'
			             AND B.DELETE_DT IS NULL
			             AND A.YEAR = #year#
			             AND A.METRIC_ID = #metricId#
			             AND A.SC_DEPT_ID = #scDeptId#
			        GROUP BY A.YEAR, A.METRIC_ID, A.SC_DEPT_ID) A
			     , (SELECT YEAR
			     		 , EVAL_SECTION_ID
			     		 , FROM_VALUE
			     		 , TO_VALUE
			     		 , CONVERSION_SCORE
			     		 , CREATE_DT
			     	  FROM BSC_LEVEL_EVAL_SECTION
			     	 WHERE YEAR = #year#
			     	) B
			 WHERE A.TOT_SCORE <![CDATA[>=]]> B.FROM_VALUE
			   AND A.TOT_SCORE <![CDATA[<]]> B.TO_VALUE
	</insert>
	
	<!--
	==================================================================   
	  # 설명	: 조직별 지표 난이도 평가 삭제
	  #	기능	: DELETE
	  #	TABLE	: BSC_LEVEL_EVAL
	==================================================================
	-->
	<update id="deleteLevelDataExcel" parameterClass="hashMap">
        DELETE FROM BSC_LEVEL_EVAL 
         WHERE YEAR = #strYear#
	</update>
	
	<!--
	==================================================================   
	  # 설명	: 조직별 지표 난이도 평가 총점 삭제
	  #	기능	: DELETE
	  #	TABLE	: BSC_LEVEL_EVAL
	==================================================================
	-->
	<update id="deleteLevelTotalDataExcel" parameterClass="hashMap">
        DELETE FROM BSC_LEVEL_EVAL_TOTAL 
         WHERE YEAR = #strYear#
	</update>
	
	<!--
	==================================================================
	  # 설명	: 조직별 지표 난이도 평가 점수 입력
	  #	기능	: INSERT
	  #	TABLE	: BSC_LEVEL_EVAL
	==================================================================
	-->
	<insert id="insertLevelDataExcel" parameterClass="hashMap">
		INSERT INTO BSC_LEVEL_EVAL (
		         YEAR
		       , METRIC_ID
		       , SC_DEPT_ID
		       , EVAL_ITEM_ID
		       , SCORE
		       , CREATE_DT
		   ) VALUES (
               #strYear#
             , #strMetricId#
             , #strScdeptId#
             , #strItemId#
             , #strScore#
             , SYSDATE
		   )
	</insert>
	
	<!--
	==================================================================
	  # 설명	: 조직별 지표 난이도 평가 총점 입력
	  #	기능	: INSERT
	  #	TABLE	: BSC_LEVEL_EVAL
	==================================================================
	-->
	<insert id="insertLevelTotalDataExcel" parameterClass="hashMap">
		INSERT INTO BSC_LEVEL_EVAL_TOTAL (
		         YEAR
		       , METRIC_ID
		       , SC_DEPT_ID
		       , TOT_SCORE
		       , WEIGHT
		       , CREATE_DT)
			SELECT A.YEAR
			     , A.METRIC_ID
			     , A.SC_DEPT_ID
			     , TOT_SCORE
			     , B.CONVERSION_SCORE WEIGHT
			     , SYSDATE
			  FROM (  SELECT A.YEAR
			               , A.METRIC_ID
			               , A.SC_DEPT_ID
			               , SUM (A.SCORE) TOT_SCORE
			            FROM BSC_LEVEL_EVAL A, BSC_CODE B
			           WHERE A.YEAR = B.YEAR
			             AND A.EVAL_ITEM_ID = B.CODE_ID
			             AND B.CODE_GRP_ID = '211'
			             AND B.DELETE_DT IS NULL
			             AND A.YEAR = #strYear#
			        GROUP BY A.YEAR, A.METRIC_ID, A.SC_DEPT_ID) A
			     , BSC_LEVEL_EVAL_SECTION B
			 WHERE A.TOT_SCORE <![CDATA[>=]]> B.FROM_VALUE
			   AND A.TOT_SCORE <![CDATA[<]]> B.TO_VALUE
	</insert>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	<!--
	==================================================================   
	  # 설명	: 공통코드에서 난이도 평가항목를 가져온다.
	  #	기능	: SELECT
	  #	TABLE	: BSC_CODE
	==================================================================
	-->
	<select id="getevalKpiList" parameterClass="hashMap" resultClass="hashMap">
        SELECT CODE_ID, CODE_NM
		  FROM BSC_CODE
		 WHERE YEAR = #findYear# AND CODE_GRP_ID = '211'
	</select>
	
	<!--
	==================================================================
	  # 설명	: 조직별KPI관리 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->
	<select id="getWeightList" parameterClass="hashMap" resultClass="hashMap">
		SELECT  FROM_VALUE, TO_CHAR(CONVERSION_SCORE,'990.99') CONVERSION_SCORE FROM BSC_LEVEL_EVAL_SECTION WHERE YEAR = #findYear#   
	</select>

	
	
	<!--
	==================================================================
	  # 설명	: 조직별KPI관리 목록 보기
	  #	기능	: SELECT
	  #	TABLE	: BSC_METRIC
	==================================================================
	-->
	<select id="getExcelList" parameterClass="hashMap" resultClass="hashMap">
		  SELECT A.YEAR
		       , A.SC_DEPT_ID
		       , A.SC_DEPT_NM
		       , B.METRIC_ID
		       , B.METRIC_NM
		       , C.CODE_ID EVAL_ITEM_ID
		       , C.CODE_NM EVAL_ITEM_NM
		       , (SELECT SCORE
		            FROM BSC_LEVEL_EVAL
		           WHERE B.YEAR = YEAR
		             AND B.SC_DEPT_ID = SC_DEPT_ID
		             AND B.METRIC_ID = METRIC_ID
		             AND C.CODE_ID = EVAL_ITEM_ID)
		            SCORE
		    FROM (           SELECT YEAR
		                          , SC_DEPT_ID
		                          , SC_DEPT_NM
		                          , ROWNUM DEPT_ORDER
		                       FROM (SELECT *
		                               FROM BSC_SC_DEPT
		                              WHERE YEAR = #findYear#
		                                AND DELETE_DT IS NULL)
		                 START WITH UP_SC_DEPT_ID IS NULL
		                 CONNECT BY PRIOR YEAR = YEAR
		                        AND PRIOR SC_DEPT_ID = UP_SC_DEPT_ID
		          ORDER SIBLINGS BY SORT_ORDER) A
		       , BSC_METRIC B
		       , BSC_CODE C
		   WHERE A.YEAR = B.YEAR
		     AND A.SC_DEPT_ID = B.SC_DEPT_ID
		     AND B.DEGREE_YN = 'Y'
		     AND B.DELETE_DT IS NULL
		     AND A.YEAR = C.YEAR
		     AND C.CODE_GRP_ID = '211'
		     AND C.DELETE_DT IS NULL
		ORDER BY YEAR
		       , SC_DEPT_ID
		       , METRIC_ID
		       , CODE_ID
	</select>

</sqlMap>


